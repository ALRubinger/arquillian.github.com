<?xml version="1.0" encoding="utf-8" ?>
<feed xml:lang="en-US" xmlns="http://www.w3.org/2005/Atom">
  <id>http://arquillian.org/</id>
  <title>Arquillian</title>
  <updated>2012-11-06T00:00:00Z</updated>
  <link href="http://arquillian.org/blog/atom.xml" rel="self" type="application/atom+xml" />
  <link href="http://arquillian.org/blog" rel="alternate" type="text/html" />
  <entry>
    <id>http://arquillian.org/blog/2012/11/05/hack_idea_integrate_thucydides_and_arquillian/</id>
    <title>Hack Idea: Fully Automate ATDD by Integrating Thucydides with Arquillian</title>
    <updated>2012-11-06T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/11/05/hack_idea_integrate_thucydides_and_arquillian/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="hack-idea" />
    <category scheme="http://arquillian.org/blog/tags" term="thucydides" />
    <category scheme="http://arquillian.org/blog/tags" term="drone" />
    <category scheme="http://arquillian.org/blog/tags" term="atdd" />
    <category scheme="http://arquillian.org/blog/tags" term="2012" />
    <category scheme="http://arquillian.org/blog/tags" term="nonrelease" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      Imagine being able to organize and structure your Arquillian tests as human-readable specifications by example that describe at a high-level how the application should work, then being able to present illustrated documentation generated from a test run that gives all parties an account of the features under development and tracks feature sign-off through automation of the acceptance criteria.
This goal can be achieved by Thucydides and Arquillian joining forces. Acceptance tests will not only be agile and illustrated, but fully automated. With a proof of concept in hand, we plan to advance this combination, including substituting Arquillian Drone to manage WebDriver,......
    </summary>
    <content type="html">
      &lt;p&gt;Imagine being able to organize and structure your Arquillian tests as human-readable &lt;em&gt;specifications by example&lt;/em&gt; that describe at a high-level how the application should work, then being able to present illustrated documentation generated from a test run that gives all parties an account of the features under development and tracks feature sign-off through automation of the acceptance criteria.&lt;/p&gt;
&lt;p&gt;This goal can be achieved by &lt;a href=&quot;http://www.thucydides.info&quot;&gt;Thucydides&lt;/a&gt; and &lt;a href=&quot;http://arquillian.org&quot;&gt;Arquillian&lt;/a&gt; joining forces. Acceptance tests will not only be agile and illustrated, but fully automated. With a &lt;a href=&quot;https://github.com/VineetReynolds/thucydides-arquillian-example&quot;&gt;proof of concept&lt;/a&gt; in hand, we plan to advance this combination, including substituting Arquillian Drone to manage WebDriver, at the &lt;a href=&quot;http://lanyrd.com/2012/devoxx/syzdq&quot;&gt;Devoxx 2012 Hackergarten&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Introducing the candidates&lt;/h3&gt;
&lt;h4&gt;What is Thucydides?&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;http://arquillian.org/images/blog/thucydides-logo.png&quot; class=&quot;pull-right&quot; alt=&quot;&quot; /&gt; Thucydides is a testing tool that encourages developers write more flexible and reusable end-to-end acceptance tests. In the style of &lt;a href=&quot;http://www.javaworld.com/javaworld/jw-08-2011/110823-atdd-for-web-apps.html&quot; title=&quot;ATDD&quot;&gt;Acceptance Test-Driven Development&lt;/a&gt;, Thucydides introduces a narrative for tests that describes the high-level requirements and automates the acceptance criteria using the tests. Developers then iterate using a test-driven approach to complete the requirements (i.e., stories), as depicted in the diagram below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://arquillian.org/images/blog/thucydides-workflow.png&quot; class=&quot;graphic&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;By analyzing the test metadata and test results, Thucydides generates illustrated documentation that describes how the application is used in the form of high-level requirements, acceptance criteria and screenshots, and records the progress of development.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://arquillian.org/images/blog/thucydides-story-status.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h4&gt;What is Arquillian?&lt;/h4&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application&amp;#8217;s behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h4&gt;What is Arquillian Drone?&lt;/h4&gt;
&lt;p&gt;Arquillian Drone is an extension to Arquillian that manages the lifecycle of browsers for the purpose of controlling them from a test, thus simplifying automated functional / acceptance testing. Drone bootstraps the tooling necessary to send commands to the browser (e.g. Selenium Server, WebDriver, etc), spawns an instance of a browser, injects the browser API into the test class to allow tests to control that instance and, finally, properly disposes of the browser instance after the test is complete.&lt;/p&gt;
&lt;h3&gt;Integration benefits&lt;/h3&gt;
&lt;h4&gt;Arquillian and Thucydides as yin and yang&lt;/h4&gt;
&lt;p&gt;While Thucydides handles automation of the browser&amp;#8212;via the &lt;a href=&quot;http://seleniumhq.org/docs/03_webdriver.html&quot;&gt;WebDriver&lt;/a&gt; library&amp;#8212;it does not handle deploying the application being tested, nor does it manage the lifecycle of the container to which the application is deployed. In other words, it doesn&amp;#8217;t automate &lt;em&gt;everything&lt;/em&gt;. That&amp;#8217;s where Arquillian steps in.&lt;/p&gt;
&lt;p&gt;Thucydides brings the ATDD methodology and rich test reports to Arquillian, both new features to the Arquillian ecosystem. Arquillian complements Thucydides by managing the lifecycle of the container and deploying the application (as a whole or micro-deployment) to it. These services would otherwise need to be handled by the build when using Thucydides alone.&lt;/p&gt;
&lt;p&gt;Beyond their combined core feature set, the integration brings all of the Arquillian extensions to Thucydides tests, opening the door to services such as loading seed data into the database, measuring performance and even managing browser automation. Speaking of managing browser automation&amp;#8230;&lt;/p&gt;
&lt;h4&gt;More powerful browser automation with Drone&lt;/h4&gt;
&lt;p&gt;Bringing Arquillian Drone into the fold provides additional benefit by introducing a more powerful and flexible choice for controlling the browser in a Thucydides test, including simplified configuration, alternatives to WebDriver and extensions (e.g., Graphene). This secondary integration between Arquillian and Thucydides also unifies the developer experience with regard to how the browser is controlled across vanilla Arquillian Drone tests and Thucydides tests (embracing the concept that each tool should focus on doing one thing well).&lt;/p&gt;
&lt;p&gt;Basic integration between Arquillian and Thucydides is a first step and getting Drone integrated is an optional (but valuable) bonus.&lt;/p&gt;
&lt;h4&gt;How this integration helps test writers&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;Arquillian tests become contract deliverables by leveraging Thucydides&amp;#8217; language for ATDD&lt;/li&gt;
	&lt;li&gt;Test segments of the webapp in isolation (using micro-deployments)
	&lt;ul&gt;
		&lt;li&gt;Accelerates acceptance testing because entire application doesn&amp;#8217;t have to be built and deployed&lt;/li&gt;
	&lt;/ul&gt;&lt;/li&gt;
	&lt;li&gt;Skip the build (e.g., Run As &amp;gt; XYZ Test in the IDE)
	&lt;ul&gt;
		&lt;li&gt;automatic container lifecycle management&lt;/li&gt;
		&lt;li&gt;deploy test archive defined in test class&lt;/li&gt;
		&lt;li&gt;inject application (initial) URL into test&lt;/li&gt;
	&lt;/ul&gt;&lt;/li&gt;
	&lt;li&gt;Support for multiple target environments (e.g., local, dev, qa, staging)&lt;/li&gt;
	&lt;li&gt;Write Thucydides tests using other test runners, such as TestNG and Spock&lt;/li&gt;
	&lt;li&gt;Write Thucydides tests using any Arquillian-supported programming model (CDI, Spring, etc)&lt;/li&gt;
	&lt;li&gt;Rich reports summarizing test results generated by Thucydides, something Arquillian doesn&amp;#8217;t currently provide&lt;/li&gt;
	&lt;li&gt;Use additional Arquillian extensions in Thucydides tests&lt;/li&gt;
	&lt;li&gt;Integrated configuration (arquillian.xml) for containers and browsers*&lt;/li&gt;
	&lt;li&gt;Use alternate browser automation libraries supported by Drone*&lt;/li&gt;
	&lt;li&gt;Use Graphene page fragments to reduce boilerplate code common in acceptance tests*&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;* requires Drone integration&lt;/p&gt;
&lt;h4&gt;Balancing responsibility&lt;/h4&gt;
&lt;p&gt;Thucydides&amp;#8217; strong suit is promoting ATDD through its programming model for writing acceptance tests as specifications by example and its reporting pipeline that summarizes test results as user stories. We believe Thucydides could move faster by focusing on tools and metrics needed to facilitate ATDD, allowing Arquillian to address the need of general purpose test extensions such as alternate test runners, data loading, browser automation, programming model integration, etc. In other words, Thucydides has more freedom to focus on its core competency, as stated on its website:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Organize and structure acceptance tests, associate tests with the user stories or features that they test and generate illustrated documentation describing how the application is used based on the stories described by the tests.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Hacking on the integration&lt;/h3&gt;
&lt;p&gt;We plan to hack on this idea during the Hackergarten at Devoxx 2012. Keep in mind there is a &lt;a href=&quot;https://github.com/VineetReynolds/thucydides-arquillian-example&quot;&gt;proof of concept&lt;/a&gt; we can reference as a starting point, described later in this section.&lt;/p&gt;
&lt;p&gt;John Smart, the author of Thucydides, has offered to host the integration in the Thucydides code base, which is fantastic.&lt;/p&gt;
&lt;h4&gt;When and where are we hacking?&lt;/h4&gt;
&lt;p&gt;We are going to use the free Hackergarten day at Devoxx 2012 as an opportunity to put our heads together to make progress on this integration. Here are the details:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;When: Tue 13th November 2012, 09:30 &amp;#8211; 16:30&lt;/li&gt;
	&lt;li&gt;Where: Hackergarten at Devoxx 2012 (Metropolis, Antwerpen, Belgium)&lt;/li&gt;
	&lt;li&gt;Conference URL: &lt;a href=&quot;http://devoxx.com&quot;&gt;http://devoxx.com&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;Hashtag: &lt;a href=&quot;https://twitter.com/search/%23hackdevoxx&quot;&gt;#hackdevoxx&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/search/%23arquillian&quot;&gt;#arquillian&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;Lanyrd: &lt;a href=&quot;http://lanyrd.com/2012/devoxx/syzdq&quot;&gt;http://lanyrd.com/2012/devoxx/syzdq&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;RSVP: &lt;a href=&quot;https://plus.google.com/events/cukalsoit15mrhsokig3b02j8mk&quot;&gt;Google+ Event: Arquillian Hands-On Coding at Devoxx 2012 Hackergarten&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;IRC: #jbosstesting or #arquillian on Freenode&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We&amp;#8217;ll also be hacking throughout the week, either at the long white &amp;#8220;hacking&amp;#8221; tables on the second floor of the venue or after hours at a bar. Of course, anyone is welcome to hack on this idea at anytime from anywhere. This is open source!&lt;/p&gt;
&lt;h4&gt;Who will be there hacking?&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://github.com/wakaleo&quot;&gt;John Ferguson Smart&lt;/a&gt; (Thucydides Lead)&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://github.com/aslakknutsen&quot;&gt;Aslak Knutsen&lt;/a&gt; (Arquillian Lead)&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://github.com/bartoszmajsak&quot;&gt;Bartosz Majsak&lt;/a&gt; (Arquillian team member, author of Beer Advisor)&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://github.com/mojavelinux&quot;&gt;Dan Allen&lt;/a&gt; (Arquillian team member)&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://github.com/jpapousek&quot;&gt;Jan Papoušek&lt;/a&gt; (Arquillian Drone contributor)&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://github.com/lordofthejars&quot;&gt;Alex Soto&lt;/a&gt; (NoSQLUnit Lead, testing advocate)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/kpiwko&quot;&gt;Karel Piwko&lt;/a&gt; (Arquillian Drone Lead) and &lt;a href=&quot;https://github.com/VineetReynolds&quot;&gt;Vineet Reynolds&lt;/a&gt; (Arquillian Core and Thucydides integration) will be participating, time permitting, from afar. Feel free to reach out to them on IRC or the forums.&lt;/p&gt;
&lt;h4&gt;What we want to achieve&lt;/h4&gt;
&lt;p&gt;The following two tests are proposed milestones we want to achieve during the hack. They contrast what integration looks like without Drone to the integration with Drone. Thinking through these scenarios helps reveal integartion points that need to be exposed or refined.&lt;/p&gt;
&lt;p class=&quot;info&quot;&gt;&lt;span&gt;The tests in this section apply to the &lt;a href=&quot;https://github.com/bartoszmajsak/Beer-Advisor&quot;&gt;Beer Advisor&lt;/a&gt; sample application.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sample test without Drone integration&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@RunWith(ThucydidesRunner.class) // or @RunWith(Arquillian.class)&amp;#x000A;@Story(BeerAdvisorFeatures.SearchingBeers.class)&amp;#x000A;public class SearchingBeersStory {&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    // Thucydides members&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Managed(uniqueSession = true)&amp;#x000A;    public WebDriver browser;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @ManagedPages&amp;#x000A;    public Pages pages;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Steps&amp;#x000A;    public SearchingSteps searchingSteps;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    // Arquillian members&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Deployment(testable = false)&amp;#x000A;    public static WebArchive createTestArchive() {&amp;#x000A;       return ShrinkWrap.create(WebArchive.class, &quot;searching-beers-story.war&quot;)...;&amp;#x000A;    }&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @ArquillianResource&amp;#x000A;    URL deploymentUrl;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    // Tests&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Before&amp;#x000A;    public void before_tests() {&amp;#x000A;        pages.setDefaultBaseUrl(deploymentUrl.toExternalForm());&amp;#x000A;    }&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Test&amp;#x000A;    public void should_find_all_usa_beers() {&amp;#x000A;        searchingSteps.on_main_beer_advisor_page();&amp;#x000A;        searchingSteps.search_for(&quot;from usa&quot;);&amp;#x000A;        searchingSteps.should_contain_beers(new Beer(&quot;90 minute IPA&quot;), new Beer(&quot;Mirror Pond&quot;));&amp;#x000A;    }&amp;#x000A;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following steps outline the interplay between Arquillian and Thucydides while the test executes in this scenario.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Either Arquillian or Thucydides takes over test execution and activate both frameworks&lt;/li&gt;
	&lt;li&gt;Responding to the test suite start event, Arquillian and configures and starts (or connects to) the container&lt;/li&gt;
	&lt;li&gt;Arquillian deploys test archive(s) to container&lt;/li&gt;
	&lt;li&gt;Arquillian injects the application URL into the @ArquillianResource URL inject point of the test&lt;/li&gt;
	&lt;li&gt;Thucydides spawns a browser instance using WebDriver&lt;/li&gt;
	&lt;li&gt;Thucydides executes tests, sending browser commands to WebDriver&lt;/li&gt;
	&lt;li&gt;Thucydides takes screenshots using WebDriver as the browser is interacting with the web application&lt;/li&gt;
	&lt;li&gt;Thucydides destoys the browser instance using WebDriver&lt;/li&gt;
	&lt;li&gt;Arquillian undeploys the test archive&lt;/li&gt;
	&lt;li&gt;Arquillian stops the container&lt;/li&gt;
	&lt;li&gt;Thucydides generates reports from the high-level summarizes, screenshots and test results&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Any Arquillian extensions that are loaded should also work as normal.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sample test with Drone integration&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@RunWith(ThucydidesRunner.class) // or @RunWith(Arquillian.class)&amp;#x000A;@Story(BeerAdvisorFeatures.SearchingBeers.class)&amp;#x000A;public class SearchingBeersStory {&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    // Thucydides members&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Steps&amp;#x000A;    public SearchingSteps searchingSteps;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    // Arquillian members&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Deployment(testable = false)&amp;#x000A;    public static WebArchive createTestArchive() {&amp;#x000A;       return ShrinkWrap.create(WebArchive.class, &quot;searching-beers-story.war&quot;)...;&amp;#x000A;    }&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Drone // may get moved to the page objects&amp;#x000A;    public WebDriver browser;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    // Tests&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Test&amp;#x000A;    public void should_find_all_usa_beers() {&amp;#x000A;        searchingSteps.on_main_beer_advisor_page();&amp;#x000A;        searchingSteps.search_for(&quot;from usa&quot;);&amp;#x000A;        searchingSteps.should_contain_beers(new Beer(&quot;90 minute IPA&quot;), new Beer(&quot;Mirror Pond&quot;));&amp;#x000A;    }&amp;#x000A;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following steps outline the interplay between Arquillian and Thucydides while the test executes in this scenario.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Either Arquillian or Thucydides takes over test execution and activate both frameworks&lt;/li&gt;
	&lt;li&gt;Arquillian configures and starts (or connects to) the container&lt;/li&gt;
	&lt;li&gt;Arquillian deploys test archive(s) to container&lt;/li&gt;
	&lt;li&gt;Arquillian injects the application URL into the @ArquillianResource URL injection point of the test&lt;/li&gt;
	&lt;li&gt;Arquillian Drone spawns a browser instance using the configured browser automation library (e.g., WebDriver)&lt;/li&gt;
	&lt;li&gt;Arquillian Drone sets the default base URL on the managed pages&lt;/li&gt;
	&lt;li&gt;Thucydides executes tests, sending browser commands to the browser automation library&lt;/li&gt;
	&lt;li&gt;Arquillian Drone takes screenshots as the browser is interacting with the web application&lt;/li&gt;
	&lt;li&gt;Arquillian Drone destoys the browser instance using the configured browser automation library&lt;/li&gt;
	&lt;li&gt;Arquillian undeploys the test archive&lt;/li&gt;
	&lt;li&gt;Arquillian stops the container&lt;/li&gt;
	&lt;li&gt;Thucydides generates reports from the high-level summarizes, screenshots and test results&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Any Arquillian Drone extensions, such as Graphene, that are loaded should also work as normal.&lt;/p&gt;
&lt;h4&gt;Sample code to use for exploring the integration&lt;/h4&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://github.com/bartoszmajsak/Beer-Advisor&quot;&gt;Beer Advisor&lt;/a&gt; by Bartosz Majsak&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://github.com/VineetReynolds/thucydides-arquillian-example&quot;&gt;Currency Exchange&lt;/a&gt; by Vineet Reynolds&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Prior work&lt;/h4&gt;
&lt;p&gt;Vineet Reynolds has been experimenting with &lt;a href=&quot;https://github.com/VineetReynolds/thucydides-arquillian-example/&quot;&gt;an integration between Thucydides and Arquillian Core&lt;/a&gt;. Vineet&amp;#8217;s integration code uses a Thucydides &lt;code&gt;StepsListener&lt;/code&gt; to weave the Arquillian lifecycle into the test. Tests are run using the Thucydides testrunner, while Arquillian manages the container lifecycle and performs the deployment of archives defined in the tests. The integration does not incorporate Arquillian Drone, opting to leave management of WebDriver up to Thucydides.&lt;/p&gt;
&lt;p&gt;Aslak and Bartosz improved upon the integration and incorporated it into the &lt;a href=&quot;https://github.com/bartoszmajsak/Beer-Advisor&quot;&gt;Beer Advisor sample app&lt;/a&gt; for their JavaZone talk in September 2012. They introduced a &lt;a href=&quot;https://github.com/bartoszmajsak/Beer-Advisor/blob/master/thucydides-tests/src/test/java/org/arquillian/example/thucydides/ArquillianEnricher.java&quot;&gt;JUnit Rule&lt;/a&gt; that activates the Arquillian services that run before and after each test method, such as test enrichment. A JUnit Rule is currently necessary due to insufficient hooks in Thucydides, but it gets the job done. Eventually we want to phase out the JUnit Rule because it exposes integration plumbing in the test.&lt;/p&gt;
&lt;h4&gt;Engineering challenges&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Challenge #1: Unified test runner&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Thucydides needs a startup API that isn&amp;#8217;t coupled with JUnit so that Arquillian is able to perform the startup in an extension. At the moment there is a lot of setup code in the &lt;a href=&quot;https://github.com/thucydides-webtests/thucydides/blob/master/thucydides-junit/src/main/java/net/thucydides/junit/runners/ThucydidesRunner.java&quot;&gt;ThucydidesRunner&lt;/a&gt; to reproduce. The alternative is that Thucydides provides enough hooks in its &lt;a href=&quot;https://github.com/thucydides-webtests/thucydides/blob/master/thucydides-core/src/main/java/net/thucydides/core/steps/StepEventBus.java&quot;&gt;StepEventBus&lt;/a&gt; for Arquillian to hook its own startup into the Thucydides lifecycle. In the integration prototype, a JUnit rule is used to activate Arquillian in a Thucydides test, but this is not the most elegant approach.&lt;/p&gt;
&lt;p&gt;Ideally, the &lt;code&gt;@RunWith(Arquillian.class)&lt;/code&gt; annotation should be enough for Arquillian to drive Thucydides if Arquillian detects Thucydides is also in use (e.g., the &lt;code&gt;@Story&lt;/code&gt; annotation is present on the test class). This is the preferred approach since it simplifies the experience for the user across the test suite (a single &lt;code&gt;@RunWith&lt;/code&gt; for all integration tests) and it may make the integration more compatible with extensions since Arquillian has a more sophisticated event bus.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Challenge #2: Drone integration&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When Drone is integrated, the user has an option to use the browser automation library (directly or via the page object pattern) as with other Drone tests or use the page object support provided by Thucydides. Drone should be able to pass Thucydides the WebDriver instance so that Thucydides can operate its own page objects.&lt;/p&gt;
&lt;p&gt;Ideally, the integration with Drone should cut down on as many redundant declarations in the class as possible to simplify test authoring. That means that the &lt;code&gt;@Drone&lt;/code&gt; injection point is used to access the browser instance and and &lt;code&gt;@ArquillianResource URL&lt;/code&gt; injection point is used to access the initial (base) url.&lt;/p&gt;
&lt;p&gt;Karel Piwko mentioned that Drone needs a better SPI for improved integration with Arquillian Graphene, slated for 1.2.0.Final. He believes the Drone SPI will also help facilitate Thucydides integration. It also opens the door for Drone to be integrated into Thucydides on its own.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Happy hacking!&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;Resources&lt;/h3&gt;
&lt;ul&gt;
	&lt;li&gt;Thucydides: &lt;a href=&quot;http://thucydides.info&quot;&gt;project page&lt;/a&gt; &amp;#8211; &lt;a href=&quot;http://thucydides.info/docs/thucydides&quot;&gt;reference guide&lt;/a&gt; &amp;#8211; &lt;a href=&quot;http://wakaleo.com/thucydides-javadoc&quot;&gt;API documentation&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.javaworld.com/javaworld/jw-08-2011/110823-atdd-for-web-apps.html&quot;&gt;Acceptance test-driven development for web applications&lt;/a&gt; by John Smart (JavaWorld)&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.javaworld.com/javaworld/jw-10-2011/111018-thucydides-for-atdd.html&quot;&gt;Selenium 2 and Thucydides for ATDD&lt;/a&gt; by John Smart (JavaWorld)&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://vimeo.com/49484334&quot;&gt;Real Agile: How Real Tests Lead to Real Progress&lt;/a&gt; by Aslak Knutsen and Bartosz Majsak (JavaZone 2012)&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=Xxpk2YGa6Do&quot;&gt;How to test enterprise applications&lt;/a&gt; by Alex Soto (LinuxTag 2012)&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://github.com/VineetReynolds/thucydides-arquillian-example&quot;&gt;Prototype of Arquillian and Thucydides integration&lt;/a&gt; by Vineet Reynolds&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://community.jboss.org/message/772475&quot;&gt;Arquillian Thucydides integration discussion post&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/11/02/arquillian-container-weld-1-0-0-CR5/</id>
    <title>Arquillian Container Weld 1.0.0.CR5 Released</title>
    <updated>2012-11-03T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/11/02/arquillian-container-weld-1-0-0-CR5/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="container-adapter" />
    <category scheme="http://arquillian.org/blog/tags" term="weld" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.CR5 release of the Arquillian Container Weld component!
      
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.
      Release details
      
        
          
            Component
        ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.CR5&lt;/em&gt; release of the &lt;em&gt;Arquillian Container Weld&lt;/em&gt; component!&lt;/p&gt;
      
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;
        &lt;tbody&gt;
          &lt;tr&gt;
            &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;Arquillian Container Weld&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;Modules&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
                &lt;li&gt;
                  &lt;a href=&quot;http://arquillian.org/modules/weld-ee-embedded-1.1-container-adapter/&quot;&gt;Arquillian Weld EE Embedded 1.1.x Container Adapter&lt;/a&gt;
                &lt;/li&gt;
                &lt;li&gt;
                  &lt;a href=&quot;http://arquillian.org/modules/weld-se-embedded-1-container-adapter/&quot;&gt;Arquillian Weld SE Embedded 1.x Container Adapter&lt;/a&gt;
                &lt;/li&gt;
                &lt;li&gt;
                  &lt;a href=&quot;http://arquillian.org/modules/weld-se-embedded-1.1-container-adapter/&quot;&gt;Arquillian Weld SE Embedded 1.1.x Container Adapter&lt;/a&gt;
                &lt;/li&gt;
              &lt;/ul&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.CR5
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://github.com/arquillian/arquillian-container-weld/commit/0761871ad37e26b7b73a42ef15b42c8b7b704fb9.html&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-11-02&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
                &lt;li&gt;Arquillian Core &amp;#8211; 1.0.2.Final&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
        &lt;/tbody&gt;
      &lt;/table&gt;
      &lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.container&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          &amp;raquo;
          arquillian-weld-ee-embedded-1.1
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-ee-embedded-1.1/1.0.0.CR5/arquillian-weld-ee-embedded-1.1-1.0.0.CR5.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-ee-embedded-1.1/1.0.0.CR5/arquillian-weld-ee-embedded-1.1-1.0.0.CR5.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          &amp;raquo;
          arquillian-weld-se-embedded-1
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-se-embedded-1/1.0.0.CR5/arquillian-weld-se-embedded-1-1.0.0.CR5.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-se-embedded-1/1.0.0.CR5/arquillian-weld-se-embedded-1-1.0.0.CR5.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          &amp;raquo;
          arquillian-weld-se-embedded-1.1
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-se-embedded-1.1/1.0.0.CR5/arquillian-weld-se-embedded-1.1-1.0.0.CR5.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-se-embedded-1.1/1.0.0.CR5/arquillian-weld-se-embedded-1.1-1.0.0.CR5.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
      &lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;3&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;Minor enhancement&lt;/p&gt;
      &lt;dl&gt;
        &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
            &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1148&quot;&gt;ARQ-1148&lt;/a&gt; -         weld-ee-container should remove duplicate entries when merging multiple beans.xml files&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1168&quot;&gt;ARQ-1168&lt;/a&gt; -         Merge beans.xml files for Embedded Weld Containers&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/dd&gt;
      &lt;/dl&gt;
      &lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/11/01/arquillian-extension-transaction-1-0-0-Alpha2/</id>
    <title>Arquillian Transaction Extension 1.0.0.Alpha2 Released</title>
    <updated>2012-11-02T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/11/01/arquillian-extension-transaction-1-0-0-Alpha2/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="transaction" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha2 release of the Arquillian Transaction Extension component!
      JTA implementation
      The time has come to extract the JTA transactions support from Arquillian Persistence Extension and move it over to the Transaction Extension. It was in fact quite a natural refactoring step. This opens the possibility of providing a different transaction manager to your (not only) persistence related tests. Many thanks to Jakub Narloch for bringing the Transaction Extension to life as a top level module and helping with this release!
      Future releases of the Arquillian Persistence Extension will ship with the JTA extension implementation as......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha2&lt;/em&gt; release of the &lt;em&gt;Arquillian Transaction Extension&lt;/em&gt; component!&lt;/p&gt;
&lt;h3&gt;JTA implementation&lt;/h3&gt;
&lt;p&gt;The time has come to extract the JTA transactions support from &lt;a href=&quot;http://arquillian.org/modules/persistence-extension&quot;&gt;Arquillian Persistence Extension&lt;/a&gt; and move it over to the Transaction Extension. It was in fact quite a natural refactoring step. This opens the possibility of providing a different transaction manager to your (not only) persistence related tests. Many thanks to &lt;a href=&quot;https://github.com/jmnarloch&quot;&gt;Jakub Narloch&lt;/a&gt; for bringing the Transaction Extension to life as a top level module and helping with this release!&lt;/p&gt;
&lt;p class=&quot;info&quot;&gt;&lt;span&gt;Future releases of the &lt;a href=&quot;http://arquillian.org/modules/persistence-extension&quot;&gt;Arquillian Persistence Extension&lt;/a&gt; will ship with the JTA extension implementation as a dependency, but the Persistence Extension API will change to the new API from the Transaction Extension. Since the Persistence Extension is using the transaction provider SPI you will be able to change the implementation without a need to adopt your test code to whatever comes in the future.&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;Usage&lt;/h3&gt;
&lt;p&gt;Just include this in your dependencies to leverage the JTA implementation within the container of your choice.&lt;/p&gt;
&lt;div class=&quot;filename&quot;&gt;pom.xml&lt;/div&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;dependency&amp;gt;&amp;#x000A;  &amp;lt;groupId&amp;gt;org.jboss.arquillian.extension&amp;lt;/groupId&amp;gt;&amp;#x000A;  &amp;lt;artifactId&amp;gt;arquillian-transaction-jta&amp;lt;/artifactId&amp;gt;&amp;#x000A;  &amp;lt;version&amp;gt;1.0.0.Alpha2&amp;lt;/version&amp;gt;&amp;#x000A;&amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;New SPI hook&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;TransactionEnabler&lt;/code&gt; interface has been introduced to the &lt;strong&gt;SPI&lt;/strong&gt;. It gives the option to alternate the strategy for enabling transactions. This is particularly handy for the Persistence Extension where we automatically wrap annotations like &lt;code&gt;@UsingDataSet&lt;/code&gt; or &lt;code&gt;@ShouldMatchDataSet&lt;/code&gt; in a transaction. For reference you may take a look at the &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-transaction/blob/master/spi/src/main/java/org/jboss/arquillian/transaction/spi/provider/TransactionEnabler.java&quot;&gt;new SPI interface&lt;/a&gt; and the related tests.&lt;/p&gt;
&lt;p&gt;That&amp;#8217;s pretty much it! We look forward to hearing your feedback about this release in the &lt;a href=&quot;http://community.jboss.org/en/arquillian&quot;&gt;community forums&lt;/a&gt;!&lt;/p&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;
        &lt;a href=&quot;http://arquillian.org/modules/transaction-extension/&quot;&gt;Arquillian Transaction Extension&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.0.0.Alpha2
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-transaction/commit/b30f831c7a47a7fc9f7a7da7a75ad76e380612f0.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-10-29&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Aslak Knutsen&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.2.Final&lt;/li&gt;
          &lt;li&gt;ShrinkWrap Resolvers &amp;#8211; 2.0.0-alpha-1&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-transaction-api
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-api/1.0.0.Alpha2/arquillian-transaction-api-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-api/1.0.0.Alpha2/arquillian-transaction-api-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-transaction-bom
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-bom/1.0.0.Alpha2/arquillian-transaction-bom-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-transaction-impl-base
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-impl-base/1.0.0.Alpha2/arquillian-transaction-impl-base-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-impl-base/1.0.0.Alpha2/arquillian-transaction-impl-base-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-transaction-jta
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-jta/1.0.0.Alpha2/arquillian-transaction-jta-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-jta/1.0.0.Alpha2/arquillian-transaction-jta-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-transaction-spi
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-spi/1.0.0.Alpha2/arquillian-transaction-spi-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-spi/1.0.0.Alpha2/arquillian-transaction-spi-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;6&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;Embedded Container and JTA support&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Enhancement&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1137&quot;&gt;ARQ-1137&lt;/a&gt; -         Provide a way to alter logic determining if transaction support is required&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1156&quot;&gt;ARQ-1156&lt;/a&gt; -         Improve resource handling&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Feature Request&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1074&quot;&gt;ARQ-1074&lt;/a&gt; -         TransactionProvider should be supported on client side&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1155&quot;&gt;ARQ-1155&lt;/a&gt; -         Make JNDI transaction name configurable&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Sub-task&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1069&quot;&gt;ARQ-1069&lt;/a&gt; -         JTA implementation for Transaction Extension&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/bmajsak&quot;&gt;Bartosz Majsak&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/jmnarloch&quot;&gt;Jakub Narloch&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/10/25/arquillian-extension-drone-1-1-0-Final/</id>
    <title>Arquillian Drone Extension 1.1.0.Final Released</title>
    <updated>2012-10-26T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/10/25/arquillian-extension-drone-1-1-0-Final/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="drone" />
    <category scheme="http://arquillian.org/blog/tags" term="jbosscentral" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.1.0.Final release of the Arquillian Drone Extension component!
 We&#8217;ve introduced new features in 1.1.0.Final while still preserving backwards compatibility with 1.0.0.Final. There&#8217;s now a much simpler way to configure Drone, better support for the Opera browser and support for browsers on iOS devices.
Significant changes since 1.0.0.Final

	 Browser capabilities instead of implementationClass and native capability configuration
	Think of any WebDriver capability, such as opera.no_restart or acceptSSLCerts, and you can now specify it directly in arquillian.xml:
arquillian.xml
&lt;extension qualifier="webdriver"&gt;&#x000A;    &lt;property name="browserCapabilities"&gt;opera&lt;/property&gt;&#x000A;    &lt;property name="opera.no_restart"&gt;true&lt;/property&gt;&#x000A;    &lt;property name="acceptSSLCerts"&gt;false&lt;/property&gt;&#x000A;&lt;/extension&gt; 
	 Support for......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.1.0.Final&lt;/em&gt; release of the &lt;em&gt;Arquillian Drone Extension&lt;/em&gt; component!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://arquillian.org/images/blog/drone_400.png&quot; class=&quot;graphic pull-right&quot; alt=&quot;&quot; /&gt; We&amp;#8217;ve introduced new features in 1.1.0.Final while still preserving backwards compatibility with 1.0.0.Final. There&amp;#8217;s now a much simpler way to configure Drone, better support for the Opera browser and support for browsers on iOS devices.&lt;/p&gt;
&lt;h3 class=&quot;highlights&quot;&gt;Significant changes since 1.0.0.Final&lt;/h3&gt;
&lt;dl&gt;
	&lt;dt&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Browser capabilities instead of &lt;code&gt;implementationClass&lt;/code&gt; and native capability configuration&lt;/dt&gt;
	&lt;dd&gt;&lt;p&gt;Think of any WebDriver capability, such as &lt;code&gt;opera.no_restart&lt;/code&gt; or &lt;code&gt;acceptSSLCerts&lt;/code&gt;, and you can now specify it directly in &lt;code&gt;arquillian.xml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;filename&quot;&gt;arquillian.xml&lt;/div&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=&quot;webdriver&quot;&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;browserCapabilities&quot;&amp;gt;opera&amp;lt;/property&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;opera.no_restart&quot;&amp;gt;true&amp;lt;/property&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;acceptSSLCerts&quot;&amp;gt;false&amp;lt;/property&amp;gt;&amp;#x000A;&amp;lt;/extension&amp;gt; &lt;/code&gt;&lt;/pre&gt;&lt;/dd&gt;
	&lt;dt&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Support for reusable browsers&lt;/dt&gt;
	&lt;dd&gt;&lt;p&gt;Reusable browsers stay connected even if you finish the tests. This will speed up turnaroud when developing the application. Reusable browsers are based on top of remote browsers, so you&amp;#8217;ll need Selenium Hub (run &lt;strong&gt;selenium-server-standalone-2.25.0.jar&lt;/strong&gt;) running during your tests. This is how you enable them (&lt;code&gt;remoteAddress&lt;/code&gt; is optional, default value listed here):&lt;/p&gt;
&lt;div class=&quot;filename&quot;&gt;arquillian.xml&lt;/div&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=&quot;webdriver&quot;&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;browserCapabilities&quot;&amp;gt;chrome&amp;lt;/property&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;remoteReusable&quot;&amp;gt;true&amp;lt;/property&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;remoteAddress&quot;&amp;gt;http://localhost:4444/wd/hub&amp;lt;/property&amp;gt;&amp;#x000A;&amp;lt;/extension&amp;gt; &lt;/code&gt;&lt;/pre&gt;&lt;/dd&gt;
	&lt;dt&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Better support for the Opera browser&lt;/dt&gt;
	&lt;dt&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Support for browsers on iOS devices&lt;/dt&gt;
	&lt;dt&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Deprecated Arquillian Drone system properties configuration&lt;/dt&gt;
	&lt;dd&gt;&lt;p&gt;The system properties configuration provided by Arquillian Core is now the preferred way to configure Arquillian Drone. The old style of system properties still work, but using them will produce warnings in the log and will be removed completely in a future version. Now use &lt;code&gt;arq.extension.extensionName.propertyName&lt;/code&gt; to override a value from arquillian.xml file&lt;/p&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;I&amp;#8217;d like to thank everybody from the community eagerly adopting new releases, discovering bugs and providing bugfixes. &lt;em&gt;You guys are awesome!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We hope that you&amp;#8217;ll enjoy the improvements. We look forward to hear your feedback in the &lt;a href=&quot;http://community.jboss.org/en/arquillian&quot;&gt;community forums&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;
        &lt;a href=&quot;http://arquillian.org/modules/drone-extension/&quot;&gt;Arquillian Drone Extension&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.1.0.Final
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-drone/commit/9c9cc48cb7b0f2bcbd3a52cc3b4128b4ec310826.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-10-24&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Aslak Knutsen&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.2.Final&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-api
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-api/1.1.0.Final/arquillian-drone-api-1.1.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-api/1.1.0.Final/arquillian-drone-api-1.1.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-bom
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-bom/1.1.0.Final/arquillian-drone-bom-1.1.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-configuration
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-configuration/1.1.0.Final/arquillian-drone-configuration-1.1.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-configuration/1.1.0.Final/arquillian-drone-configuration-1.1.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-impl
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-impl/1.1.0.Final/arquillian-drone-impl-1.1.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-impl/1.1.0.Final/arquillian-drone-impl-1.1.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-selenium
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium/1.1.0.Final/arquillian-drone-selenium-1.1.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium/1.1.0.Final/arquillian-drone-selenium-1.1.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-selenium-depchain
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-depchain/1.1.0.Final/arquillian-drone-selenium-depchain-1.1.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-selenium-server
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-server/1.1.0.Final/arquillian-drone-selenium-server-1.1.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-server/1.1.0.Final/arquillian-drone-selenium-server-1.1.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-spi
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-spi/1.1.0.Final/arquillian-drone-spi-1.1.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-spi/1.1.0.Final/arquillian-drone-spi-1.1.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-webdriver
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver/1.1.0.Final/arquillian-drone-webdriver-1.1.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver/1.1.0.Final/arquillian-drone-webdriver-1.1.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-webdriver-depchain
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver-depchain/1.1.0.Final/arquillian-drone-webdriver-depchain-1.1.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;9&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Bug&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1048&quot;&gt;ARQ-1048&lt;/a&gt; -         RemoteWebDriver ignores old configuration properties&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1110&quot;&gt;ARQ-1110&lt;/a&gt; -         can't create an instance of IPhoneDriver&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1113&quot;&gt;ARQ-1113&lt;/a&gt; -         Add @Deprecation to ConfigurationMapper.fromSystemConfiguration&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Component  Upgrade&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1170&quot;&gt;ARQ-1170&lt;/a&gt; -         Update Selenium to 2.25.0&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Enhancement&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-929&quot;&gt;ARQ-929&lt;/a&gt; -         Drone: Switch useJavaScript to true by default&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1165&quot;&gt;ARQ-1165&lt;/a&gt; -         Remove ChromeDriver tests exclusions&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Feature Request&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1164&quot;&gt;ARQ-1164&lt;/a&gt; -         Use default Chrome location for tests&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Sub-task&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1112&quot;&gt;ARQ-1112&lt;/a&gt; -         Verify Arquillian Drone can run on JDK 1.5&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/kpiwko&quot;&gt;Karel Piwko&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://github.com/papousek&quot;&gt;Jan PapoušEk&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/10/19/arquillian-core-1-0-3-Final/</id>
    <title>Arquillian Core 1.0.3.Final Released</title>
    <updated>2012-10-20T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/10/19/arquillian-core-1-0-3-Final/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="platform" />
    <category scheme="http://arquillian.org/blog/tags" term="core" />
    <category scheme="http://arquillian.org/blog/tags" term="jbosscentral" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.3.Final release of the Arquillian Core component!
      
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.
      Release details
      
        
          
            Component
         ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.3.Final&lt;/em&gt; release of the &lt;em&gt;Arquillian Core&lt;/em&gt; component!&lt;/p&gt;
      
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;
        &lt;tbody&gt;
          &lt;tr&gt;
            &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/core-platform/&quot;&gt;Arquillian Core&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.3.Final
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://github.com/arquillian/arquillian-core/commit/dc8dbf88eb726f6855360bc6e4f586855e43950d.html&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-10-18&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
                &lt;li&gt;ShrinkWrap Core &amp;#8211; 1.0.1&lt;/li&gt;
                &lt;li&gt;ShrinkWrap Descriptors &amp;#8211; 2.0.0-alpha-3&lt;/li&gt;
                &lt;li&gt;JUnit &amp;#8211; 4.8.1&lt;/li&gt;
                &lt;li&gt;TestNG &amp;#8211; 5.14.6&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
        &lt;/tbody&gt;
      &lt;/table&gt;
      &lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
        &lt;li&gt;
          org.jboss.arquillian
          &amp;raquo;
          arquillian-bom
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/arquillian-bom/1.0.3.Final/arquillian-bom-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.config
          &amp;raquo;
          arquillian-config-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-api/1.0.3.Final/arquillian-config-api-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-api/1.0.3.Final/arquillian-config-api-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.config
          &amp;raquo;
          arquillian-config-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-impl-base/1.0.3.Final/arquillian-config-impl-base-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-impl-base/1.0.3.Final/arquillian-config-impl-base-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.config
          &amp;raquo;
          arquillian-config-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-spi/1.0.3.Final/arquillian-config-spi-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-spi/1.0.3.Final/arquillian-config-spi-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          &amp;raquo;
          arquillian-container-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-impl-base/1.0.3.Final/arquillian-container-impl-base-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-impl-base/1.0.3.Final/arquillian-container-impl-base-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          &amp;raquo;
          arquillian-container-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-spi/1.0.3.Final/arquillian-container-spi-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-spi/1.0.3.Final/arquillian-container-spi-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          &amp;raquo;
          arquillian-container-test-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-api/1.0.3.Final/arquillian-container-test-api-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-api/1.0.3.Final/arquillian-container-test-api-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          &amp;raquo;
          arquillian-container-test-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-impl-base/1.0.3.Final/arquillian-container-test-impl-base-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-impl-base/1.0.3.Final/arquillian-container-test-impl-base-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          &amp;raquo;
          arquillian-container-test-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-spi/1.0.3.Final/arquillian-container-test-spi-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-spi/1.0.3.Final/arquillian-container-test-spi-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.core
          &amp;raquo;
          arquillian-core-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-api/1.0.3.Final/arquillian-core-api-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-api/1.0.3.Final/arquillian-core-api-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.core
          &amp;raquo;
          arquillian-core-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-impl-base/1.0.3.Final/arquillian-core-impl-base-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-impl-base/1.0.3.Final/arquillian-core-impl-base-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.core
          &amp;raquo;
          arquillian-core-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-spi/1.0.3.Final/arquillian-core-spi-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-spi/1.0.3.Final/arquillian-core-spi-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.junit
          &amp;raquo;
          arquillian-junit-container
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-container/1.0.3.Final/arquillian-junit-container-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-container/1.0.3.Final/arquillian-junit-container-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.junit
          &amp;raquo;
          arquillian-junit-core
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-core/1.0.3.Final/arquillian-junit-core-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-core/1.0.3.Final/arquillian-junit-core-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.junit
          &amp;raquo;
          arquillian-junit-standalone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-standalone/1.0.3.Final/arquillian-junit-standalone-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-standalone/1.0.3.Final/arquillian-junit-standalone-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.protocol
          &amp;raquo;
          arquillian-protocol-jmx
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-jmx/1.0.3.Final/arquillian-protocol-jmx-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-jmx/1.0.3.Final/arquillian-protocol-jmx-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.protocol
          &amp;raquo;
          arquillian-protocol-servlet
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-servlet/1.0.3.Final/arquillian-protocol-servlet-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-servlet/1.0.3.Final/arquillian-protocol-servlet-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.test
          &amp;raquo;
          arquillian-test-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-api/1.0.3.Final/arquillian-test-api-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-api/1.0.3.Final/arquillian-test-api-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.test
          &amp;raquo;
          arquillian-test-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-impl-base/1.0.3.Final/arquillian-test-impl-base-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-impl-base/1.0.3.Final/arquillian-test-impl-base-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.test
          &amp;raquo;
          arquillian-test-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-spi/1.0.3.Final/arquillian-test-spi-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-spi/1.0.3.Final/arquillian-test-spi-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          &amp;raquo;
          arquillian-testenricher-cdi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-cdi/1.0.3.Final/arquillian-testenricher-cdi-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-cdi/1.0.3.Final/arquillian-testenricher-cdi-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          &amp;raquo;
          arquillian-testenricher-ejb
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-ejb/1.0.3.Final/arquillian-testenricher-ejb-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-ejb/1.0.3.Final/arquillian-testenricher-ejb-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          &amp;raquo;
          arquillian-testenricher-initialcontext
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-initialcontext/1.0.3.Final/arquillian-testenricher-initialcontext-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-initialcontext/1.0.3.Final/arquillian-testenricher-initialcontext-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          &amp;raquo;
          arquillian-testenricher-resource
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-resource/1.0.3.Final/arquillian-testenricher-resource-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-resource/1.0.3.Final/arquillian-testenricher-resource-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testng
          &amp;raquo;
          arquillian-testng-container
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-container/1.0.3.Final/arquillian-testng-container-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-container/1.0.3.Final/arquillian-testng-container-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testng
          &amp;raquo;
          arquillian-testng-core
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-core/1.0.3.Final/arquillian-testng-core-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-core/1.0.3.Final/arquillian-testng-core-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testng
          &amp;raquo;
          arquillian-testng-standalone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-standalone/1.0.3.Final/arquillian-testng-standalone-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-standalone/1.0.3.Final/arquillian-testng-standalone-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
      &lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;3&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;TestNG Bug fix&lt;/p&gt;
      &lt;dl&gt;
        &lt;dt&gt;Bug&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
            &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-563&quot;&gt;ARQ-563&lt;/a&gt; -         @ArquillianResource in TestNG based tests causes test body not to be evaluated&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/dd&gt;
      &lt;/dl&gt;
      &lt;dl&gt;
        &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
            &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1102&quot;&gt;ARQ-1102&lt;/a&gt; -         Publish Test Source jars to Nexus&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/dd&gt;
      &lt;/dl&gt;
      &lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/lfryc&quot;&gt;Lukas Fryc&lt;/a&gt;, &lt;a href=&quot;https://github.com/krichardsson&quot;&gt;Kristoffer Richardsson&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/10/18/arquillian-extension-portal-1-0-0-Alpha2/</id>
    <title>Arquillian Portal Extension 1.0.0.Alpha2 Released</title>
    <updated>2012-10-19T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/10/18/arquillian-extension-portal-1-0-0-Alpha2/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="portal" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha2 release of the Arquillian Portal Extension component!
The Portal extension for Arquillian brings testing into the world of Portlets!
Some of the highlights in this release
 URL injection of portlets by name. @PortalURL now supports defining the names of the portlets that you want rendered on the page of the injected URL. You can either specify a single portlet name, multiple, or leave it empty and it will load all portlets defined within portlets.xml onto the page. Injecting a URL of a portlet page with the MyPortlet portlet present is done by:
MyTest.java
@ArquillianResource&#x000A;@PortalURL("MyPortlet")&#x000A;URL portletPage;
......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha2&lt;/em&gt; release of the &lt;em&gt;Arquillian Portal Extension&lt;/em&gt; component!&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;Portal&lt;/em&gt; extension for Arquillian brings testing into the world of Portlets!&lt;/p&gt;
&lt;h3 class=&quot;highlights&quot;&gt;Some of the highlights in this release&lt;/h3&gt;
&lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; URL injection of portlets by name. &lt;code&gt;@PortalURL&lt;/code&gt; now supports defining the names of the portlets that you want rendered on the page of the injected URL. You can either specify a single portlet name, multiple, or leave it empty and it will load all portlets defined within &lt;code&gt;portlets.xml&lt;/code&gt; onto the page. Injecting a URL of a portlet page with the &lt;code&gt;MyPortlet&lt;/code&gt; portlet present is done by:&lt;/p&gt;
&lt;div class=&quot;filename&quot;&gt;MyTest.java&lt;/div&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@ArquillianResource&amp;#x000A;@PortalURL(&quot;MyPortlet&quot;)&amp;#x000A;URL portletPage;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Annotation for marking portlet tests. &lt;code&gt;@PortalTest&lt;/code&gt; now represents a marker on a test class that signifies to &lt;em&gt;Portal&lt;/em&gt; extension implementations that a portlet test is being invoked. This enables for augmenting the test deployment with whatever information is needed for particular portlet containers to enable a portlet to be tested. It has the added benefit of decoupling a test needing to inject a &lt;code&gt;@PortalURL&lt;/code&gt; if the tests don&amp;#8217;t require a URL to the portlet page.&lt;/p&gt;
&lt;p&gt;Currently there are two implementations of this extension for use with &lt;a href=&quot;https://github.com/jbossportletbridge/pluto-testing&quot;&gt;Pluto&lt;/a&gt; and &lt;a href=&quot;https://github.com/jbossportletbridge/gatein-testing&quot;&gt;GateIn&lt;/a&gt; portal containers.&lt;/p&gt;
&lt;p&gt;For examples on how to use these extensions with their respective portal containers, you can take a look at the &lt;a href=&quot;https://github.com/jbossportletbridge/jbossportletbridge/tree/master/testsuites&quot;&gt;testsuite&lt;/a&gt; of JBoss Portlet Bridge.&lt;/p&gt;
&lt;p&gt;We look forward to hearing your feedback about this release in the &lt;a href=&quot;http://community.jboss.org/en/arquillian&quot;&gt;community forums&lt;/a&gt;!&lt;/p&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;
        &lt;a href=&quot;http://arquillian.org/modules/portal-extension/&quot;&gt;Arquillian Portal Extension&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.0.0.Alpha2
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-portal/commit/f214ca2608daaf6d69b4afbe32ff251eae35b9a6.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-10-17&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Ken Finnigan&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.2.Final&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-portal
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal/1.0.0.Alpha2/arquillian-portal-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal/1.0.0.Alpha2/arquillian-portal-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-portal-api
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-api/1.0.0.Alpha2/arquillian-portal-api-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-api/1.0.0.Alpha2/arquillian-portal-api-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-portal-impl
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-impl/1.0.0.Alpha2/arquillian-portal-impl-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-impl/1.0.0.Alpha2/arquillian-portal-impl-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-portal-spi
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-spi/1.0.0.Alpha2/arquillian-portal-spi-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-spi/1.0.0.Alpha2/arquillian-portal-spi-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;6&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Bug&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-961&quot;&gt;ARQ-961&lt;/a&gt; -         Error in README for the name of additional URL qualifier&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Enhancement&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1117&quot;&gt;ARQ-1117&lt;/a&gt; -         Support Portal URL for specific portlet or several on a page&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Task&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1115&quot;&gt;ARQ-1115&lt;/a&gt; -         Introduce Portal depchain&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1116&quot;&gt;ARQ-1116&lt;/a&gt; -         Change references of portal container to portlet container&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1151&quot;&gt;ARQ-1151&lt;/a&gt; -         Update Portal Extension to Core 1.0.2.Final&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/kenfinni&quot;&gt;Ken Finnigan&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/toomtooms&quot;&gt;Thomas DelhoméNie&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/10/17/arquillian-container-weld-1-0-0-CR4/</id>
    <title>Arquillian Container Weld 1.0.0.CR4 Released</title>
    <updated>2012-10-18T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/10/17/arquillian-container-weld-1-0-0-CR4/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="container-adapter" />
    <category scheme="http://arquillian.org/blog/tags" term="weld" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.CR4 release of the Arquillian Container Weld component!
      
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.
      Release details
      
        
          
            Component
        ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.CR4&lt;/em&gt; release of the &lt;em&gt;Arquillian Container Weld&lt;/em&gt; component!&lt;/p&gt;

&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;Arquillian Container Weld&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Modules&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://arquillian.org/modules/weld-ee-embedded-1.1-container-adapter/&quot;&gt;Arquillian Weld EE Embedded 1.1.x Container Adapter&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://arquillian.org/modules/weld-se-embedded-1-container-adapter/&quot;&gt;Arquillian Weld SE Embedded 1.x Container Adapter&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://arquillian.org/modules/weld-se-embedded-1.1-container-adapter/&quot;&gt;Arquillian Weld SE Embedded 1.1.x Container Adapter&lt;/a&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.0.0.CR4
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-container-weld/commit/97397582b80ecc1bfe9ab7610bd5d7965bdc6f32.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-10-17&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Aslak Knutsen&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.2.Final&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.container&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-weld-ee-embedded-1.1
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-ee-embedded-1.1/1.0.0.CR4/arquillian-weld-ee-embedded-1.1-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-ee-embedded-1.1/1.0.0.CR4/arquillian-weld-ee-embedded-1.1-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-weld-se-embedded-1
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-se-embedded-1/1.0.0.CR4/arquillian-weld-se-embedded-1-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-se-embedded-1/1.0.0.CR4/arquillian-weld-se-embedded-1-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-weld-se-embedded-1.1
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-se-embedded-1.1/1.0.0.CR4/arquillian-weld-se-embedded-1.1-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-se-embedded-1.1/1.0.0.CR4/arquillian-weld-se-embedded-1.1-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;6&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Bug&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-753&quot;&gt;ARQ-753&lt;/a&gt; -         ShrinkWrapClassLoader does not find service provider in WAR&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-817&quot;&gt;ARQ-817&lt;/a&gt; -         arquillian-weld-container does not build on Maven Default Profile&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-818&quot;&gt;ARQ-818&lt;/a&gt; -         WebArchiveClassLoader only honors resource requests for Service files&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-819&quot;&gt;ARQ-819&lt;/a&gt; -         Wrong criteria used for supplying Weld with WebArchiveClassLoader&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-890&quot;&gt;ARQ-890&lt;/a&gt; -         WeldEEMockContainer does not clean up resources if the deployment fails&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Feature Request&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1160&quot;&gt;ARQ-1160&lt;/a&gt; -         Prepare Weld CR4&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/alrubinger&quot;&gt;Andrew Lee Rubinger&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/mkouba&quot;&gt;Martin Kouba&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/jharting&quot;&gt;Jozef Hartinger&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/09/24/arquillian-container-tomcat-1-0-0-CR4/</id>
    <title>Arquillian Container Tomcat 1.0.0.CR4 Released</title>
    <updated>2012-09-25T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/09/24/arquillian-container-tomcat-1-0-0-CR4/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="container-adapter" />
    <category scheme="http://arquillian.org/blog/tags" term="tomcat" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.CR4 release of the Arquillian Container Tomcat component!
Some of the highlights in this release
Support for nice multiline/pretty formatting of JVM-argument configuration. Additionally, you can use quotes to provide values containing spaces.
&lt;property name="javaVmArguments"&gt;&#x000A;  -Xms512m -Xmx512m&#x000A;  -XX:MaxPermSize=512m&#x000A;  "-Djavax.net.ssl.keyStore=/path/to your/keystore"&#x000A;&lt;/property&gt;
Embedded Tomcat 7 is now capable of protected WAR deployment (this is usual in typical standalone server), thus some standard deployment features are now available even for embedded use, e.g.:

	Deployment of an archive named &#8220;ROOT.war&#8221; to the default context &#8220;/&#8221;
	Proper processing of &#8220;META-INF/context.xml&#8221; if present in the WAR.

What is Arquillian?
Arquillian is open source......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.CR4&lt;/em&gt; release of the &lt;em&gt;Arquillian Container Tomcat&lt;/em&gt; component!&lt;/p&gt;
&lt;h3&gt;Some of the highlights in this release&lt;/h3&gt;
&lt;p&gt;Support for nice multiline/pretty formatting of JVM-argument configuration. Additionally, you can use quotes to provide values containing spaces.&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;property name=&quot;javaVmArguments&quot;&amp;gt;&amp;#x000A;  -Xms512m -Xmx512m&amp;#x000A;  -XX:MaxPermSize=512m&amp;#x000A;  &quot;-Djavax.net.ssl.keyStore=/path/to your/keystore&quot;&amp;#x000A;&amp;lt;/property&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Embedded Tomcat 7 is now capable of protected WAR deployment (this is usual in typical standalone server), thus some standard deployment features are now available even for embedded use, e.g.:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Deployment of an archive named &amp;#8220;ROOT.war&amp;#8221; to the default context &amp;#8220;/&amp;#8221;&lt;/li&gt;
	&lt;li&gt;Proper processing of &amp;#8220;META-INF/context.xml&amp;#8221; if present in the WAR.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;Arquillian Container Tomcat&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Modules&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://arquillian.org/modules/tomcat-managed-5.5-container-adapter/&quot;&gt;Arquillian Tomcat Managed 5.5.x Container Adapter&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://arquillian.org/modules/tomcat-embedded-6-container-adapter/&quot;&gt;Arquillian Tomcat Embedded 6.x Container Adapter&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://arquillian.org/modules/tomcat-remote-6-container-adapter/&quot;&gt;Arquillian Tomcat Remote 6.x Container Adapter&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://arquillian.org/modules/tomcat-managed-6-container-adapter/&quot;&gt;Arquillian Tomcat Managed 6.x Container Adapter&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://arquillian.org/modules/tomcat-embedded-7-container-adapter/&quot;&gt;Arquillian Tomcat Embedded 7.x Container Adapter&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://arquillian.org/modules/tomcat-managed-7-container-adapter/&quot;&gt;Arquillian Tomcat Managed 7.x Container Adapter&lt;/a&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.0.0.CR4
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-container-tomcat/commit/888dc33ebacc8904d2fe616b1d241c3b78ea94f8.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-09-24&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Aslak Knutsen&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.0.Final&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.container&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-tomcat-common
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-common/1.0.0.CR4/arquillian-tomcat-common-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-common/1.0.0.CR4/arquillian-tomcat-common-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-tomcat-embedded-6
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-embedded-6/1.0.0.CR4/arquillian-tomcat-embedded-6-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-embedded-6/1.0.0.CR4/arquillian-tomcat-embedded-6-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-tomcat-embedded-7
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-embedded-7/1.0.0.CR4/arquillian-tomcat-embedded-7-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-embedded-7/1.0.0.CR4/arquillian-tomcat-embedded-7-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-tomcat-managed-5.5
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-managed-5.5/1.0.0.CR4/arquillian-tomcat-managed-5.5-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-managed-5.5/1.0.0.CR4/arquillian-tomcat-managed-5.5-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-tomcat-managed-6
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-managed-6/1.0.0.CR4/arquillian-tomcat-managed-6-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-managed-6/1.0.0.CR4/arquillian-tomcat-managed-6-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-tomcat-managed-7
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-managed-7/1.0.0.CR4/arquillian-tomcat-managed-7-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-managed-7/1.0.0.CR4/arquillian-tomcat-managed-7-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-tomcat-remote-6
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-remote-6/1.0.0.CR4/arquillian-tomcat-remote-6-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-remote-6/1.0.0.CR4/arquillian-tomcat-remote-6-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;4&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;Small bugfix release&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Bug&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-548&quot;&gt;ARQ-548&lt;/a&gt; -         Unable to set custom Loader for Tomcat 7 Embedded container&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1044&quot;&gt;ARQ-1044&lt;/a&gt; -         The properties of tomcat container configuration in arquillian.xml are not parsed properly&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1051&quot;&gt;ARQ-1051&lt;/a&gt; -         Arquillian Container Tomcat test dependency weld-servlet is not available in Maven Central&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/trepel&quot;&gt;Tomas Repel&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/ianbrandt&quot;&gt;Ian Brandt&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/09/19/introducting-arquillian-graphene-page-fragments/</id>
    <title>Introducing Arquillian Graphene Page Fragments</title>
    <updated>2012-09-20T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/09/19/introducting-arquillian-graphene-page-fragments/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="graphene" />
    <category scheme="http://arquillian.org/blog/tags" term="selenium" />
    <category scheme="http://arquillian.org/blog/tags" term="page-fragment" />
    <category scheme="http://arquillian.org/blog/tags" term="best-practice" />
    <category scheme="http://arquillian.org/blog/tags" term="2012" />
    <category scheme="http://arquillian.org/blog/tags" term="nonrelease" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      Tools like Arquillian Graphene, WebDriver, or just plain Selenium combined with concepts like Page Objects can help you automate your functional(integration, whatever&#8230;) web UI tests. We have already introduced some of the advances brought to you by Arquillian Graphene earlier. In this blog entry we will look a bit deeper into a new concept introduced in Arquillian Graphene 2.0.0.Alpha2; Page Fragments.
      Consider the following example taken from the RichFaces component showcase. The page under test contain three Autocomplete widgets.
      public class TestAutocompleteWidgets extends AbstractGrapheneTest {
      
          private JQueryLocator minCharInput = jq("input[type=text]:eq(0)");
          private JQueryLocator multipleSelectionInput = jq("input[type=text]:eq(1)");
       ......
    </summary>
    <content type="html">
      &lt;p&gt;Tools like &lt;em&gt;Arquillian Graphene&lt;/em&gt;, &lt;em&gt;WebDriver&lt;/em&gt;, or just plain &lt;em&gt;Selenium&lt;/em&gt; combined with concepts like &lt;a href=&quot;http://code.google.com/p/selenium/wiki/PageObjects&quot;&gt;&lt;em&gt;Page Objects&lt;/em&gt;&lt;/a&gt; can help you automate your functional(integration, whatever&amp;#8230;) web UI tests. We have already introduced some of the advances brought to you by &lt;em&gt;Arquillian Graphene&lt;/em&gt; &lt;a href=&quot;http://arquillian.org/blog/tags/graphene/&quot;&gt;earlier&lt;/a&gt;. In this blog entry we will look a bit deeper into a new concept introduced in &lt;em&gt;Arquillian Graphene&lt;/em&gt; 2.0.0.Alpha2; &lt;em&gt;Page Fragments&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Consider the following example taken from the RichFaces &lt;a href=&quot;http://showcase.richfaces.org/richfaces/component-sample.jsf?demo=autocomplete&amp;amp;sample=modes&amp;amp;skin=blueSky&quot;&gt;component showcase&lt;/a&gt;. The page under test contain three Autocomplete widgets.&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;public class TestAutocompleteWidgets extends AbstractGrapheneTest {&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    private JQueryLocator minCharInput = jq(&quot;input[type=text]:eq(0)&quot;);&amp;#x000A;    private JQueryLocator multipleSelectionInput = jq(&quot;input[type=text]:eq(1)&quot;);&amp;#x000A;    private JQueryLocator selectFirstFalseInput = jq(&quot;input[type=text]:eq(2)&quot;);&amp;#x000A;    private JQueryLocator selection = jq(&quot;div.rf-au-itm&quot;);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Test&amp;#x000A;    public void testFirstAutocomplete() {&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        graphene.keyPress(minCharInput, 'a');&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        assertFalse(graphene.isElementPresent(selection),&amp;#x000A;            &quot;The suggestion list should not be visible, since there is only one char!&quot;);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        String keys = &quot;ar&quot;;&amp;#x000A;        graphene.focus(minCharInput);&amp;#x000A;        selenium.type(minCharInput, keys);&amp;#x000A;        guardXhr(graphene).fireEvent(minCharInput, Event.KEYPRESS);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        assertTrue(graphene.isVisible(selection), &amp;#x000A;            &quot;The suggestion list should be visible, since there are two chars!&quot;);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        String actualArizona = graphene.getText(jq(selection.getRawLocator() + &quot;:eq(0)&quot;));&amp;#x000A;        assertEquals(actualArizona, &quot;Arizona&quot;, &quot;The provided suggestion should be Arizona!&quot;);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        String actualArkansas = graphene.getText(jq(selection.getRawLocator() + &quot;:eq(1)&quot;));&amp;#x000A;        assertEquals(actualArkansas, &quot;Arkansas&quot;, &quot;The provided suggestion should be Arkansas!&quot;);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    }&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Test&amp;#x000A;    public void testSecondAutocomplete() {&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        char key = 'a';&amp;#x000A;        selenium.focus(multipleSelectionInput);&amp;#x000A;        guardXhr(selenium).keyPress(multipleSelectionInput, key);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        assertTrue(selenium.isVisible(selection),&amp;#x000A;            &quot;The suggestion list should be visible, since there is correct starting char!&quot;);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        selenium.keyPressNative(KeyEvent.VK_ENTER);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        key = ' ';&amp;#x000A;        selenium.keyPress(multipleSelectionInput, key);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        key = 'w';&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        selenium.focus(multipleSelectionInput);&amp;#x000A;        guardXhr(selenium).keyPress(multipleSelectionInput, key);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        assertTrue(selenium.isVisible(selection),&amp;#x000A;            &quot;The suggestion list should be visible, since there is correct starting char!&quot;);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        selenium.keyPressNative(KeyEvent.VK_ENTER);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        String actualContentOfInput = selenium.getValue(multipleSelectionInput);&amp;#x000A;        assertEquals(actualContentOfInput, &quot;Alabama Washington&quot;, &quot;The input should contain something else!&quot;);&amp;#x000A;    }&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Test&amp;#x000A;    public void testThirdAutocomplete() {&amp;#x000A;        //similar autocomplete interactions as in the previous tests&amp;#x000A;    }&amp;#x000A;}&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Now, ask yourself the following questions:&lt;/h3&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;em&gt;Do you find these types of tests less robust than for example unit tests for the persistence layer?&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;em&gt;Do you think these tests still pass when the underlying HTML change?&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;em&gt;Do you see repeating code in the these tests?&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In my opinion you should have a clean answer to all of these questions. You are probably aware that tests should be loosely coupled with the underlying HTML structure of the application under test as it makes tests more robust and changes in the HTML structure of the page will not directly affect all tests.&lt;/p&gt;
&lt;p&gt;Let&amp;#8217;s apply the &lt;a href=&quot;http://code.google.com/p/selenium/wiki/PageObjects&quot;&gt;&lt;em&gt;Page Objects&lt;/em&gt;&lt;/a&gt; pattern to split the HTML structure and the test logic. The &lt;em&gt;Page Object&lt;/em&gt; will encapsulate the HTML structure so when the HTML change, only your &lt;em&gt;Page Objects&lt;/em&gt; has to change.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;em&gt;But what about when I&amp;#8217;m testing another application that use the same Autocomplete widget?&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;em&gt;Should I copy the part of the Page Object that interact with the Autocomplete widget and paste it around in my code?&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But as you&amp;#8217;re already thinking: this would be a major don&amp;#8217;t-repeat-yourself violation! Is there something we could do to improve this?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Yes, there is! Arquillian Graphene &lt;em&gt;Page Fragments&lt;/em&gt; to the rescue!&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;em&gt;Page Fragments&lt;/em&gt;, what are they?&lt;/h3&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;em&gt;Page Fragments&lt;/em&gt; are any repeating part of a page, any widget, web component, etc.&lt;/li&gt;
	&lt;li&gt;They encapsulate parts of the page into reusable test components across your whole test suite.&lt;/li&gt;
	&lt;li&gt;You can differentiate each fragment by its root element and reference other elements as children of that root.&lt;/li&gt;
	&lt;li&gt;They leverage Selenium WebDriver under the hood combined with all of the killer features of &lt;em&gt;Graphene&lt;/em&gt;.&lt;/li&gt;
	&lt;li&gt;And they come with a set of utilities which simplify using them within tests and &lt;em&gt;Page Objects&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;How to define &lt;em&gt;Page Fragments&lt;/em&gt;&lt;/h3&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;public class AutocompleteFragment&amp;lt;T&amp;gt; {&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Root&amp;#x000A;    WebElement root;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @FindBy(css = &quot;input[type='text']&quot;)&amp;#x000A;    WebElement inputToWrite;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    public static final String CLASS_NAME_SUGGESTION = &quot;rf-au-itm&quot;;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    public List&amp;lt;Suggestion&amp;lt;T&amp;gt;&amp;gt; getAllSuggestions(SuggestionParser&amp;lt;T&amp;gt; parser) {&amp;#x000A;        List&amp;lt;Suggestion&amp;lt;T&amp;gt;&amp;gt; allSugg = new ArrayList&amp;lt;Suggestion&amp;lt;T&amp;gt;&amp;gt;();&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        if (areSuggestionsAvailable()) {&amp;#x000A;            WebElement rightSuggList = getRightSuggestionList();&amp;#x000A;            List&amp;lt;WebElement&amp;gt; suggestions = rightSuggList.findElements(&amp;#x000A;                        By.className(CLASS_NAME_SUGGESTION));&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;            for (WebElement suggestion : suggestions) {&amp;#x000A;                allSugg.add(parser.parse(suggestion));&amp;#x000A;            }&amp;#x000A;        }&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        return allSugg;&amp;#x000A;    }&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    public List&amp;lt;Suggestion&amp;lt;T&amp;gt;&amp;gt; type(String value, SuggestionParser&amp;lt;T&amp;gt; parser) {&amp;#x000A;        List&amp;lt;Suggestion&amp;lt;T&amp;gt;&amp;gt; suggestions = new ArrayList&amp;lt;Suggestion&amp;lt;T&amp;gt;&amp;gt;();&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        inputToWrite.sendKeys(value);&amp;#x000A;        try {&amp;#x000A;            waitForSuggestions();&amp;#x000A;        } catch (TimeoutException ex) {&amp;#x000A;            // no suggestions available&amp;#x000A;            return suggestions;&amp;#x000A;        }&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        suggestions = getAllSuggestions(parser);&amp;#x000A;        return suggestions;&amp;#x000A;    }&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    //other handy encapsulation of Autocomplete services&amp;#x000A;}&lt;/code&gt;&lt;/pre&gt;
&lt;p class=&quot;info&quot;&gt;&lt;span&gt;The example is just a snippet from the full implementation of the RichFaces Autocomplete component.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Notice the &lt;code&gt;@Root&lt;/code&gt; annotation? The value of the root field is automatically injected by &lt;em&gt;Graphene&lt;/em&gt;. The &lt;code&gt;root&lt;/code&gt; field contain the root element as defined by the &lt;code&gt;@FindBy&lt;/code&gt; annotation on the injection point of the &lt;em&gt;Page Fragment&lt;/em&gt; in the Page Object or test. All &lt;code&gt;@FindBy&lt;/code&gt; fields in the &lt;em&gt;Page Fragment&lt;/em&gt; will use this root as a starting point.&lt;/p&gt;
&lt;p&gt;The fragment implementation is pretty generic and therefore reusable in all tests in all applications that use the Autocomplete widget. A full implementation would encapsulate all the services this fragment provide, but it could for example also encapsulate browser specific interactions like submit or click actions. There are no boundaries!&lt;/p&gt;
&lt;h3&gt;Using &lt;em&gt;Page Fragments&lt;/em&gt; and &lt;em&gt;Page Objects&lt;/em&gt; together&lt;/h3&gt;
&lt;p&gt;Let&amp;#8217;s rewrite the previous test to use our new &lt;em&gt;Page Fragment&lt;/em&gt; together with our &lt;em&gt;Page Object&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;First we define a &lt;em&gt;Page Object&lt;/em&gt; which contain the structure of the page under test.&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;public class TestPage {&lt;/code&gt;&amp;#x000A;    &amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @FindBy(css = &quot;div.rf-au:nth-of-type(1)&quot;)&amp;#x000A;    private AutocompleteFragment&amp;lt;String&amp;gt; autocomplete1;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @FindBy(css = &quot;div.rf-au:nth-of-type(2)&quot;)&amp;#x000A;    private AutocompleteFragment&amp;lt;String&amp;gt; autocomplete2;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @FindBy(css = &quot;div.rf-au:nth-of-type(3)&quot;)&amp;#x000A;    private AutocompleteFragment&amp;lt;String&amp;gt; autocomplete3;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @FindBy(xpath = &quot;//*[contains(@id,'sh1')]&quot;)&amp;#x000A;    private WebElement viewSourceLink;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    //all getters for the fields&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    //other handy methods which you find useful when testing those three Autocomplete widgets&amp;#x000A;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Declaring the &lt;em&gt;Page Fragment&lt;/em&gt; in the &lt;em&gt;Page Object&lt;/em&gt; is the preferred option, but you can also declare the &lt;em&gt;Page Fragment&lt;/em&gt; directly in the test if desired. The only thing you need to do is to annotate the &lt;em&gt;Page Fragment&lt;/em&gt; object with WebDriver&amp;#8217;s &lt;code&gt;@FindBy&lt;/code&gt; annotation to refer to the fragment&amp;#8217;s root DOM element. That simple!&lt;/p&gt;
&lt;p&gt;Graphene differentiates between &lt;em&gt;Page Fragments&lt;/em&gt; and plain &lt;em&gt;WebElements&lt;/em&gt; in the same Page Object so they can be declared side by side. All of the &lt;strong&gt;initialization is done automatically&lt;/strong&gt;, so there is no need to initialize the &lt;em&gt;Page Fragments&lt;/em&gt; or &lt;em&gt;Page Objects&lt;/em&gt; in the &lt;code&gt;@Before&lt;/code&gt; method of your test case.&lt;/p&gt;
&lt;p&gt;In this last example we see how the autocomplete widgets&amp;#8217;s &lt;em&gt;Page Fragment&lt;/em&gt; is used in the test case.&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;public class TestWhichUsesPageFragments extend AbstractTest {&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Page&amp;#x000A;    private TestPage testPage;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Test&amp;#x000A;    public void testFirstAutocomplete {&amp;#x000A;        AutocompleteFragment&amp;lt;String&amp;gt; autocomplete = testPage.getAutocomplete1();&lt;/code&gt;&amp;#x000A;        &amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        autocomplete.type(&quot;a&quot;);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        assertFalse(autocomplete.areSuggestionsAvailable(), &amp;#x000A;            &quot;The suggestion list should not be visible, since there is only one char!&quot;);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        String keys = &quot;ar&quot;;&amp;#x000A;        autocomplete.type(keys);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        assertTrue(autocomplete.areSuggestionsAvailable(), &amp;#x000A;            &quot;The suggestion list should be visible, since there are two chars!&quot;);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        List&amp;lt;Suggestion&amp;lt;String&amp;gt;&amp;gt; expectedSuggestions = new ArrayList&amp;lt;Suggestion&amp;lt;String&amp;gt;&amp;gt;();&amp;#x000A;        expectedSuggestions.add(new Suggestion&amp;lt;String&amp;gt;(&quot;Arizona&quot;));&amp;#x000A;        expectedSuggestions.add(new Suggestion&amp;lt;String&amp;gt;(&quot;Arkansas&quot;));&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        assertEquals(autocomplete.getAllSuggestions(new StringSuggestionParser()), expectedSuggestions, &amp;#x000A;            &quot;Suggestions are wrong!&quot;);&amp;#x000A;    }&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Test&amp;#x000A;    public void testSecondAutocomplete() {&amp;#x000A;        AutocompleteFragment&amp;lt;String&amp;gt; autocomplete = testPage.getAutocomplete2();&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        String key = &quot;a&quot;;&amp;#x000A;        autocomplete.type(key);&lt;/code&gt;&amp;#x000A;        &amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        String errorMsg = &quot;The suggestion list should be visible, since there was typed correct char &quot;;&amp;#x000A;        assertTrue(autocomplete.areSuggestionsAvailable(), errorMsg + key);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        autocomplete.autocomplete(autocomplete.getFirstSuggestion());&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        autocomplete.type(&quot; &quot;);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        key = &quot;w&quot;&amp;#x000A;        autocomplete.type(key);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        assertTrue(autocomplete.areSuggestionsAvailable(), errorMsg + key);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        autocomplete.autocomplete(autocomplete.getFirstSuggestion());        &lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        String actualContentOfInput = autocomplete.getInputValue();&amp;#x000A;        assertEquals(actualContentOfInput, &quot;Alabama Washington&quot;, &quot;The input should contain something else!&quot;);&amp;#x000A;    }&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Test&amp;#x000A;    public void testThirdAutocomplete() {&amp;#x000A;        //similar autocomplete interactions as in the previous tests&amp;#x000A;    }&amp;#x000A;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As your application grow, the only thing that needs to change is the root references of your &lt;em&gt;Page Fragments&lt;/em&gt;. Last but not least you will be able to make your &lt;em&gt;Page Fragment&lt;/em&gt; availabe to be used by other tests in other applications.&lt;/p&gt;
&lt;p&gt;To try &lt;em&gt;Page Fragments&lt;/em&gt; check out the Graphene 2.0.0.Alpha2 release. Getting start information can be found in the &lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA2/Page+Abstractions&quot;&gt;Reference Documentation&lt;/a&gt;.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/09/17/arquillian-graphene-2-0-0-Alpha2/</id>
    <title>Graphene 2.0.0.Alpha2 Released</title>
    <updated>2012-09-18T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/09/17/arquillian-graphene-2-0-0-Alpha2/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="graphene" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 2.0.0.Alpha2 release of the Graphene component!
      Graphene 2 is building on top of the Selenium WebDriver API and provide extensions for writing reusable, robust and AJAX-enabled tests with improved readability.
      Graphene 2 uses the ideas from Graphene 1 (based on Selenium 1 API) and applies it to the world of Selenium WebDriver.
      You can read more about the difference between Graphene 1 and Graphene 2 in the Reference Documentation
      Features
      Page Abstractions
      Page abstractions allow you to abstract page functionality using the well-known Selenium design pattern Page Objects. In Graphene you can inject page objects directly into the......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;2.0.0.Alpha2&lt;/em&gt; release of the &lt;em&gt;Graphene&lt;/em&gt; component!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Graphene 2&lt;/em&gt; is building on top of the Selenium WebDriver API and provide extensions for writing &lt;strong&gt;reusable&lt;/strong&gt;, &lt;strong&gt;robust&lt;/strong&gt; and &lt;strong&gt;AJAX-enabled&lt;/strong&gt; tests with improved &lt;strong&gt;readability&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Graphene 2&lt;/em&gt; uses the ideas from &lt;em&gt;Graphene 1&lt;/em&gt; (based on &lt;em&gt;Selenium 1 API&lt;/em&gt;) and applies it to the world of &lt;a href=&quot;http://seleniumhq.org/projects/webdriver/&quot;&gt;Selenium WebDriver&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can read more about the difference between Graphene 1 and Graphene 2 in the &lt;a href=&quot;https://docs.jboss.org/author/pages/viewpage.action?pageId=53118297&quot;&gt;Reference Documentation&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Features&lt;/h3&gt;
&lt;h4&gt;Page Abstractions&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA2/Page+Abstractions&quot;&gt;Page abstractions&lt;/a&gt; allow you to abstract page functionality using the well-known Selenium design pattern &lt;a href=&quot;http://code.google.com/p/selenium/wiki/PageObjects&quot;&gt;&lt;em&gt;Page Objects&lt;/em&gt;&lt;/a&gt;. In Graphene you can inject page objects directly into the test case using the &lt;code&gt;@Page&lt;/code&gt; annotation.&lt;/p&gt;
&lt;p&gt;But we take the &lt;em&gt;Page Objects&lt;/em&gt; pattern one step further with the concept of &lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA2/Page+Fragments&quot;&gt;&lt;em&gt;Page Fragments&lt;/em&gt;&lt;/a&gt; . &lt;em&gt;Page Fragments&lt;/em&gt; are reusable parts within a page encapsulated into an object similar to &lt;em&gt;Page Objects&lt;/em&gt;. A good example of &lt;em&gt;Page Fragments&lt;/em&gt; are JavaScript widgets or forms.&lt;/p&gt;
&lt;p&gt;The concept of &lt;em&gt;Page Fragments&lt;/em&gt; comes from an idea that those components share a same underlying DOM structure, the only difference between all occurences of a component is a location in a DOM tree where a component is rendered &amp;#8211; this is denoted by the &lt;code&gt;@Root&lt;/code&gt; annotation. You can define this root location for each concrete occurence using a &lt;code&gt;@FindBy(locator)&lt;/code&gt; annotation.&lt;/p&gt;
&lt;h4&gt;Fluent-API for Waiting Conditions&lt;/h4&gt;
&lt;p&gt;Graphene provides a set of widely used &lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA2/Graphene+Utility+Class&quot;&gt;conditions to avoid writing them repeatedly&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Request Guards&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA2/Request+Guards&quot;&gt;Request guards&lt;/a&gt; block the Selenium test execution until a network communication caused by a given action ends. Guards support blocking on &lt;em&gt;HTTP&lt;/em&gt; and &lt;em&gt;XHR (AJAX)&lt;/em&gt; but can also be used to verify that no such requests were done.&lt;/p&gt;
&lt;h4&gt;Under the Hood&lt;/h4&gt;
&lt;p&gt;There are some low level features exposed as API that are used by Graphene internally. While not used regularly within a normal test, can be handy to write more robust tests:&lt;/p&gt;
&lt;h5&gt;&lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA2/JavaScript+Interface&quot;&gt;JavaScript Interface&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;This allows you to write a Java interface which automatically translates Java API invocations to JavaScript calls:&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@JavaScript&amp;#x000A;public interface Document {&amp;#x000A;    String getTitle();&amp;#x000A;}&lt;/code&gt;&lt;/pre&gt;
&lt;h5&gt;Page Extensions&lt;/h5&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA2/Page+Extensions&quot;&gt;Page Extensions&lt;/a&gt; allow you to inject arbitrary JavaScript code in the page under the test. The javascript code might help you to test complex situations as well as bring completely new features for improving testing. Graphene internally uses &lt;em&gt;Page Extensions&lt;/em&gt; for &lt;em&gt;Request Guards&lt;/em&gt;.&lt;/p&gt;
&lt;h5&gt;&lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA2/Graphene+Context+and+Proxy&quot;&gt;Graphene Context&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;Graphene allows you to obtain current thread-local context of a browser session and inject it exactly where you need. No more need for driver reference propagation.&lt;/p&gt;
&lt;h4&gt;Documentation&lt;/h4&gt;
&lt;p&gt;Last but definitely not the least addition is &lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA2/Home&quot;&gt;the great documentation&lt;/a&gt; for all of the features above including answers for general questions like &lt;a href=&quot;https://docs.jboss.org/author/pages/viewpage.action?pageId=53118297&quot;&gt;&lt;em&gt;how Selenium 1, Graphene 1, Selenium WebDriver and Graphene 2 relates to each other&lt;/em&gt;&lt;/a&gt;, what&amp;#8217;s the &lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA2/Using+Drone&quot;&gt;&lt;em&gt;relation between Graphene&amp;#8217;s, Drone and Arquillian&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA2/Getting+Started&quot;&gt;Getting Started&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;It&amp;#8217;s the same as with any other Arquillian extension: open the IDE, setup the &lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA2/Framework+Integration+Options&quot;&gt;Maven dependency&lt;/a&gt; and you are ready to &lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA2/Getting+Started&quot;&gt;start testing&lt;/a&gt;!&lt;/p&gt;
&lt;h3&gt;What’s next?&lt;/h3&gt;
&lt;p&gt;In the upcoming releases, we would like to focus on more new features as well as migrate some features from Graphene 1 to Graphene 2:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Forge plugin for quick start&lt;/li&gt;
	&lt;li&gt;command interceptors&lt;/li&gt;
	&lt;li&gt;parallel browser session control&lt;/li&gt;
	&lt;li&gt;jQuery/Sizzle locators&lt;/li&gt;
	&lt;li&gt;AJAX/HTTP Communication Halter&lt;/li&gt;
	&lt;li&gt;page abstraction improvements&lt;/li&gt;
	&lt;li&gt;closer integration with the Arquillian event system&lt;/li&gt;
	&lt;li&gt;helpers for writing browser specific code&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Call to Action&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://community.jboss.org/en/arquillian&quot;&gt;Let us know what you think&lt;/a&gt; and &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA&quot;&gt;help us shape Graphene&lt;/a&gt; to be what you want it to be.&lt;/p&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;
        &lt;a href=&quot;http://arquillian.org/modules/graphene-extension/&quot;&gt;Graphene&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        2.0.0.Alpha2
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-graphene/commit/6ff63d888ca5a5eec068db833ee20144b4b981a8.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-09-12&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Lukas Fryc&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.2.Final&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.graphene&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    graphene-build-resources
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-build-resources/2.0.0.Alpha2/graphene-build-resources-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-build-resources/2.0.0.Alpha2/graphene-build-resources-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    graphene-component-api
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-component-api/2.0.0.Alpha2/graphene-component-api-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-component-api/2.0.0.Alpha2/graphene-component-api-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    graphene-selenium-api
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-api/2.0.0.Alpha2/graphene-selenium-api-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-api/2.0.0.Alpha2/graphene-selenium-api-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    graphene-selenium-drone
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-drone/2.0.0.Alpha2/graphene-selenium-drone-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-drone/2.0.0.Alpha2/graphene-selenium-drone-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    graphene-selenium-ftest-junit-container
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-junit-container/2.0.0.Alpha2/graphene-selenium-ftest-junit-container-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-junit-container/2.0.0.Alpha2/graphene-selenium-ftest-junit-container-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    graphene-selenium-ftest-junit-standalone
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-junit-standalone/2.0.0.Alpha2/graphene-selenium-ftest-junit-standalone-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-junit-standalone/2.0.0.Alpha2/graphene-selenium-ftest-junit-standalone-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    graphene-selenium-ftest-testng-container
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-testng-container/2.0.0.Alpha2/graphene-selenium-ftest-testng-container-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-testng-container/2.0.0.Alpha2/graphene-selenium-ftest-testng-container-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    graphene-selenium-ftest-testng-standalone
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-testng-standalone/2.0.0.Alpha2/graphene-selenium-ftest-testng-standalone-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-testng-standalone/2.0.0.Alpha2/graphene-selenium-ftest-testng-standalone-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    graphene-selenium-impl
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-impl/2.0.0.Alpha2/graphene-selenium-impl-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-impl/2.0.0.Alpha2/graphene-selenium-impl-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    graphene-webdriver-drone
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-drone/2.0.0.Alpha2/graphene-webdriver-drone-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-drone/2.0.0.Alpha2/graphene-webdriver-drone-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    graphene-webdriver-ftest
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-ftest/2.0.0.Alpha2/graphene-webdriver-ftest-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-ftest/2.0.0.Alpha2/graphene-webdriver-ftest-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    graphene-webdriver-impl
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-impl/2.0.0.Alpha2/graphene-webdriver-impl-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-impl/2.0.0.Alpha2/graphene-webdriver-impl-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    graphene-webdriver-spi
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-spi/2.0.0.Alpha2/graphene-webdriver-spi-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-spi/2.0.0.Alpha2/graphene-webdriver-spi-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;30&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Bug&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-6&quot;&gt;ARQGRA-6&lt;/a&gt; -         Using of JQuery 1.5 causes that JQuery selectors are not escaped properly&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-151&quot;&gt;ARQGRA-151&lt;/a&gt; -         Graphene.getProxyForInterfaces returns wrong proxy&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-159&quot;&gt;ARQGRA-159&lt;/a&gt; -         Use Drone depchain in Graphene depchain&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Component  Upgrade&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-150&quot;&gt;ARQGRA-150&lt;/a&gt; -         Upgrade to Arquillian Core 1.0.2.Final&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Feature Request&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-40&quot;&gt;ARQGRA-40&lt;/a&gt; -         Support for Component Objects pattern for Selenium 2&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-41&quot;&gt;ARQGRA-41&lt;/a&gt; -         Support for Java-to-JavaScript calling interfaces&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-62&quot;&gt;ARQGRA-62&lt;/a&gt; -         Umbrella: Adopt Graphene for usage of WebDriver/Selenium 2 API&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-67&quot;&gt;ARQGRA-67&lt;/a&gt; -         Migrate request guards to Selenium 2&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-71&quot;&gt;ARQGRA-71&lt;/a&gt; -         Adopt JavaScript injection (Page Extensions) for Selenium 2&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-74&quot;&gt;ARQGRA-74&lt;/a&gt; -         Support Graphene utility in original scope with Selenium 2&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-156&quot;&gt;ARQGRA-156&lt;/a&gt; -         Introduce Opera and RemoteWebDriver factory wrappers&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-157&quot;&gt;ARQGRA-157&lt;/a&gt; -         Support XHR interception&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-160&quot;&gt;ARQGRA-160&lt;/a&gt; -         Create a configurator for Graphene 2 using arquillian.xml&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-161&quot;&gt;ARQGRA-161&lt;/a&gt; -         Introduce profile to enable execution from several browsers&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-179&quot;&gt;ARQGRA-179&lt;/a&gt; -         Document difference between Graphene 1 and Graphene 2 (Selenium 1 and WebDriver)&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-180&quot;&gt;ARQGRA-180&lt;/a&gt; -         Document Graphene - Getting Started&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-181&quot;&gt;ARQGRA-181&lt;/a&gt; -         Document Using WebDriver&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-182&quot;&gt;ARQGRA-182&lt;/a&gt; -         Document Using Drone&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-183&quot;&gt;ARQGRA-183&lt;/a&gt; -         Document Testing AJAX&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Task&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-132&quot;&gt;ARQGRA-132&lt;/a&gt; -         Add BOM usage into documentation&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-158&quot;&gt;ARQGRA-158&lt;/a&gt; -         Check and complete all documentation for all features in Alpha2&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-163&quot;&gt;ARQGRA-163&lt;/a&gt; -         Refactor Graphene Webdriver SPI module&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-171&quot;&gt;ARQGRA-171&lt;/a&gt; -         Refactor Component Objects - mainly make Component Obejcts as POJO&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-172&quot;&gt;ARQGRA-172&lt;/a&gt; -         Documentation for Page Extensions&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-173&quot;&gt;ARQGRA-173&lt;/a&gt; -         Documentation for Page Fragments&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-175&quot;&gt;ARQGRA-175&lt;/a&gt; -         Documentation for JavaScript interfaces&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-176&quot;&gt;ARQGRA-176&lt;/a&gt; -         Documentation for GrapheneContext and proxies&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-177&quot;&gt;ARQGRA-177&lt;/a&gt; -         Documentation for Request Guards&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-178&quot;&gt;ARQGRA-178&lt;/a&gt; -         Documentation for Graphene utility class&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-186&quot;&gt;ARQGRA-186&lt;/a&gt; -         Rename Component Objects dependencies to Page Fragments&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/lfryc&quot;&gt;Lukas Fryc&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/jhuska&quot;&gt;Juraj Huska&lt;/a&gt;, &lt;a href=&quot;https://github.com/papousek&quot;&gt;Jan PapoušEk&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/jhuska&quot;&gt;Juraj Huska&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/bleathem&quot;&gt;Brian Leathem&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/09/11/arquillian-extension-drone-1-1-0-CR3/</id>
    <title>Arquillian Drone Extension 1.1.0.CR3 Released</title>
    <updated>2012-09-12T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/09/11/arquillian-extension-drone-1-1-0-CR3/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="drone" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.1.0.CR3 release of the Arquillian Drone Extension component!
      After some thought we realized that the current options for configuration (and implementation for that matter) were too complicated. While browserCapabilities allowed you to ignore the implementing class of WebDriver, you were still required to remember how to set up various capabilities.
      We dropped the capability configuration support as you know it from CR1 and CR2 and replaced it with something much easier to use. You can now set up the capabilities directly as they come from WebDriver.
      Some of the highlights in this release
       Direct capability......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.1.0.CR3&lt;/em&gt; release of the &lt;em&gt;Arquillian Drone Extension&lt;/em&gt; component!&lt;/p&gt;
&lt;p&gt;After some thought we realized that the current options for configuration (and implementation for that matter) were too complicated. While &lt;code&gt;browserCapabilities&lt;/code&gt; allowed you to ignore the implementing class of WebDriver, you were still required to remember how to set up various capabilities.&lt;/p&gt;
&lt;p&gt;We dropped the capability configuration support as you know it from CR1 and CR2 and replaced it with something much easier to use. You can now set up the capabilities directly as they come from WebDriver.&lt;/p&gt;
&lt;h3 class=&quot;highlights&quot;&gt;Some of the highlights in this release&lt;/h3&gt;
&lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Direct capability mapping. Think of any WebDriver capability, such as &lt;code&gt;opera.no_restart&lt;/code&gt; or &lt;code&gt;acceptSSLCerts&lt;/code&gt;, you can now specify them directly in &lt;code&gt;arquillian.xml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;filename&quot;&gt;arquillian.xml&lt;/div&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=&quot;webdriver&quot;&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;browserCapabilities&quot;&amp;gt;firefox&amp;lt;/property&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;opera.no_restart&quot;&amp;gt;true&amp;lt;/property&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;acceptSSLCerts&quot;&amp;gt;false&amp;lt;/property&amp;gt;&amp;#x000A;&amp;lt;/extension&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Deprecated Arquillian Drone system properties configuration in favor of the system properties configuration provided by Arquillian Core. The old style of system properties still work, but using them will produce warnings in the log and will be removed completely in a later version.&lt;/p&gt;
&lt;p&gt;In the previous &lt;code&gt;arquilian.xml&lt;/code&gt; snippet, &lt;code&gt;browserCapabilities&lt;/code&gt; would map to &lt;code&gt;arquillian.webdriver.browser.capabilities&lt;/code&gt;. The correct way to override this property is now &lt;code&gt;arq.extension.webdriver.browserCapabilities&lt;/code&gt;. With the new properties handling you can also provide the properties in a file by spcifying the file name in the &lt;code&gt;arquillian.properties&lt;/code&gt; system property.&lt;/p&gt;
&lt;p&gt;The same apply to the qualifiers support. Given the following &lt;code&gt;arquillian.xml&lt;/code&gt; snippet you would now use &lt;code&gt;arq.extension.webdriver-myqualifier.browserCapabilities&lt;/code&gt; instead of the legacy &lt;code&gt;arquillian.webdriver.myqualifier.browser.capabilities&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;filename&quot;&gt;arquillian.xml&lt;/div&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=&quot;webdriver-myqualifier&quot;&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;browserCapabilities&quot;&amp;gt;chrome&amp;lt;/property&amp;gt;&amp;#x000A;&amp;lt;/extension&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We hope that this will make Arquillian Drone easier to use, especially for people who have already tried to use &lt;code&gt;browserCapabilities&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We look forward to hearing your feedback about this release in the &lt;a href=&quot;http://community.jboss.org/en/arquillian&quot;&gt;community forums&lt;/a&gt;!&lt;/p&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;
        &lt;a href=&quot;http://arquillian.org/modules/drone-extension/&quot;&gt;Arquillian Drone Extension&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.1.0.CR3
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-drone/commit/833113aa75a75ad64b90de312bc61433d46ef51b.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-09-10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Aslak Knutsen&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.2.Final&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-api
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-api/1.1.0.CR3/arquillian-drone-api-1.1.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-api/1.1.0.CR3/arquillian-drone-api-1.1.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-bom
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-bom/1.1.0.CR3/arquillian-drone-bom-1.1.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-configuration
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-configuration/1.1.0.CR3/arquillian-drone-configuration-1.1.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-configuration/1.1.0.CR3/arquillian-drone-configuration-1.1.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-impl
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-impl/1.1.0.CR3/arquillian-drone-impl-1.1.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-impl/1.1.0.CR3/arquillian-drone-impl-1.1.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-selenium
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium/1.1.0.CR3/arquillian-drone-selenium-1.1.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium/1.1.0.CR3/arquillian-drone-selenium-1.1.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-selenium-depchain
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-depchain/1.1.0.CR3/arquillian-drone-selenium-depchain-1.1.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-selenium-server
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-server/1.1.0.CR3/arquillian-drone-selenium-server-1.1.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-server/1.1.0.CR3/arquillian-drone-selenium-server-1.1.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-spi
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-spi/1.1.0.CR3/arquillian-drone-spi-1.1.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-spi/1.1.0.CR3/arquillian-drone-spi-1.1.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-webdriver
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver/1.1.0.CR3/arquillian-drone-webdriver-1.1.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver/1.1.0.CR3/arquillian-drone-webdriver-1.1.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-webdriver-depchain
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver-depchain/1.1.0.CR3/arquillian-drone-webdriver-depchain-1.1.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;6&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Bug&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1047&quot;&gt;ARQ-1047&lt;/a&gt; -         RemoteAddress nor Remote property does not trigger remote webdriver&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1064&quot;&gt;ARQ-1064&lt;/a&gt; -         Can't set WebDriver capability with name containing '_'&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1090&quot;&gt;ARQ-1090&lt;/a&gt; -         Remove chromeSwitches from tests&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1091&quot;&gt;ARQ-1091&lt;/a&gt; -         Make capability setting in Drone easier&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Component  Upgrade&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1088&quot;&gt;ARQ-1088&lt;/a&gt; -         Upgrade and align AS7 versions in Drone tests&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/kpiwko&quot;&gt;Karel Piwko&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/lfryc&quot;&gt;Lukas Fryc&lt;/a&gt;, &lt;a href=&quot;https://github.com/papousek&quot;&gt;Jan PapoušEk&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/08/31/arquillian-extension-persistence-1-0-0-Alpha5/</id>
    <title>Arquillian Persistence Extension 1.0.0.Alpha5 Released</title>
    <updated>2012-09-01T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/08/31/arquillian-extension-persistence-1-0-0-Alpha5/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="persistence" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha5 release of the Arquillian Persistence Extension component!
      We are back with a bunch of handy new additions and some bug fixes, so keep on reading..
      Big kudos goes to Tomas Hradec for his great contribution on the &#8220;JPA Cache Eviction&#8221; support. You can now control your second level cache directly from the Arquillian tests. I would also like to thank Adrian Gonzalez, Alex Holmansky, Anton Shaykin and Christoph Rohr for their feedback which led us to fix some minor annoyances and shortcomings of APE. We are proud of the vibrant and active community......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha5&lt;/em&gt; release of the &lt;em&gt;Arquillian Persistence Extension&lt;/em&gt; component!&lt;/p&gt;
&lt;p&gt;We are back with a bunch of handy new additions and some bug fixes, so keep on reading..&lt;/p&gt;
&lt;p&gt;Big kudos goes to &lt;a href=&quot;https://github.com/thradec&quot;&gt;Tomas Hradec&lt;/a&gt; for his great contribution on the &amp;#8220;JPA Cache Eviction&amp;#8221; support. You can now control your second level cache directly from the Arquillian tests. I would also like to thank Adrian Gonzalez, Alex Holmansky, Anton Shaykin and Christoph Rohr for their feedback which led us to fix some minor annoyances and shortcomings of APE. We are proud of the vibrant and active community around Arquillian!&lt;/p&gt;
&lt;h3 class=&quot;highlights&quot;&gt;Some of the highlights in this release&lt;/h3&gt;
&lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Instead of relying on the JPA provider you can now use your custom scripts to create the schema and populate data for each test. The only thing you have to do is decorate your test class with the following annotation:&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@CreateSchema({&quot;create-schema.sql&quot;, &quot;populate-data.sql&quot;})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Thanks to Tomas Hradec we have taken control over the Second Level JPA cache eviction. This initial implementation gives you a possibility to evict the cache before or after your test. Just specify which persistence unit(s) should be used by APE:&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@JpaCacheEviction(entityManager = { &quot;java:comp/env/MyPersistenceUnit&quot; })&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; One of the shortcomings of the previous versions was the fact that you were always forced to provide the data source name explicitly. Either through &lt;code&gt;arquillian.xml&lt;/code&gt; or by using the &lt;code&gt;@DataSource&lt;/code&gt; annotation. With Alpha 5 you won&amp;#8217;t have to. If you only use one data source in the test case, it will be inferred automatically from the &lt;code&gt;persistence.xml&lt;/code&gt; used by your test.&lt;/p&gt;
&lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; You can also tell DBUnit which schema needs to be used for seeding the database. Just add the &lt;code&gt;schema&lt;/code&gt; property to your &lt;code&gt;arquillian.xml&lt;/code&gt; configuration as illustrated in the snippet below:&lt;/p&gt;
&lt;div class=&quot;filename&quot;&gt;arquillian.xml&lt;/div&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=&quot;persistence-dbunit&quot;&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;schema&quot;&amp;gt;ape&amp;lt;/property&amp;gt;&amp;#x000A;&amp;lt;/extension&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We&amp;#8217;ve also extended our test suite by adding the following databases to our continuous integration pipeline&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;MySQL 5.5.24&lt;/li&gt;
	&lt;li&gt;PostgreSQL 9.1.4&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&quot;important&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;em&gt;Important change&lt;/em&gt;&lt;/strong&gt;: We renamed two properties used in &lt;code&gt;arquillian.xml&lt;/code&gt; giving them more appropriate names:&lt;br /&gt;
	&lt;em&gt;initStatement&lt;/em&gt; became &lt;em&gt;scriptsToExecuteBeforeTest&lt;/em&gt;&lt;br /&gt;
	&lt;em&gt;cleanupStatement&lt;/em&gt; became &lt;em&gt;scriptsToExecuteAfterTest&lt;/em&gt;&lt;br /&gt;
Moreover you can now specify list of scripts (or files) seperated by comma.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;We look forward to hearing your feedback about this release in the &lt;a href=&quot;http://community.jboss.org/en/arquillian&quot;&gt;community forums&lt;/a&gt;!&lt;/p&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;
        &lt;a href=&quot;http://arquillian.org/modules/persistence-extension/&quot;&gt;Arquillian Persistence Extension&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.0.0.Alpha5
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-persistence/commit/9755a39ab2a900a1a9bbb2e668d9b3d41c0ae794.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-08-31&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Aslak Knutsen&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.2.Final&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-persistence-api
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-persistence-api/1.0.0.Alpha5/arquillian-persistence-api-1.0.0.Alpha5.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-persistence-api/1.0.0.Alpha5/arquillian-persistence-api-1.0.0.Alpha5.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-persistence-impl
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-persistence-impl/1.0.0.Alpha5/arquillian-persistence-impl-1.0.0.Alpha5.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-persistence-impl/1.0.0.Alpha5/arquillian-persistence-impl-1.0.0.Alpha5.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-persistence-integration-tests-testng
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-persistence-integration-tests-testng/1.0.0.Alpha5/arquillian-persistence-integration-tests-testng-1.0.0.Alpha5.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-persistence-integration-tests-testng/1.0.0.Alpha5/arquillian-persistence-integration-tests-testng-1.0.0.Alpha5.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;22&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Bug&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-872&quot;&gt;ARQ-872&lt;/a&gt; -         Integration tests are failing with Glassfish 3.1.2 embedded&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-901&quot;&gt;ARQ-901&lt;/a&gt; -         NPE when using @Cleanup(strategy=CleanupStrategy.USED_ROWS_ONLY)&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1083&quot;&gt;ARQ-1083&lt;/a&gt; -         Closing connection might cause memory leak&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Enhancement&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-763&quot;&gt;ARQ-763&lt;/a&gt; -         Introduce TestNG tests&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-873&quot;&gt;ARQ-873&lt;/a&gt; -         Provide flexible maven configuration for handling combination of different containers and databases&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-877&quot;&gt;ARQ-877&lt;/a&gt; -         Improve DBUnit cleanup handling&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-882&quot;&gt;ARQ-882&lt;/a&gt; -         Should be possible to specify data insert strategy per @Test&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-885&quot;&gt;ARQ-885&lt;/a&gt; -         Improve init/cleanupStatement handling&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1017&quot;&gt;ARQ-1017&lt;/a&gt; -         Update APE to Core 1.0.1.Final&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1084&quot;&gt;ARQ-1084&lt;/a&gt; -         Fix failing tests in JDK7&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Feature Request&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-884&quot;&gt;ARQ-884&lt;/a&gt; -         Should be possible to globally define columns to be excluded when comparing data sets.&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-899&quot;&gt;ARQ-899&lt;/a&gt; -         Should be able to read data source name from persistence.xml attached to test archive&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-900&quot;&gt;ARQ-900&lt;/a&gt; -         Should be able to prepare database using custom scripts&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1029&quot;&gt;ARQ-1029&lt;/a&gt; -         Arquillian Persistence Extension: Use specific Schema&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1058&quot;&gt;ARQ-1058&lt;/a&gt; -         Implement JPA Cache eviction control&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1065&quot;&gt;ARQ-1065&lt;/a&gt; -         Improve SQL script handling&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Sub-task&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-878&quot;&gt;ARQ-878&lt;/a&gt; -         Make default cleanup phase globally configurable&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-879&quot;&gt;ARQ-879&lt;/a&gt; -         Change default cleanup strategy back to AFTER test execution&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-881&quot;&gt;ARQ-881&lt;/a&gt; -         Should be possible to exclude arbitrary tables from cleanup procedure&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-886&quot;&gt;ARQ-886&lt;/a&gt; -         Rename properties to more meaningful ones&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-887&quot;&gt;ARQ-887&lt;/a&gt; -         Allow to use to more than one SQL script file&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/bmajsak&quot;&gt;Bartosz Majsak&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/thradec&quot;&gt;Tomas Hradec&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/08/17/arquillian-extension-spring-1-0-0-Beta1/</id>
    <title>Arquillian Spring Framework Extension 1.0.0.Beta1 Released</title>
    <updated>2012-08-18T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/08/17/arquillian-extension-spring-1-0-0-Beta1/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="gsoc" />
    <category scheme="http://arquillian.org/blog/tags" term="gsoc" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="spring" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Beta1 release of the Arquillian Spring Framework Extension component!
      The first Beta release of the Arquillian Spring extension is here.
      Some of the highlights in this release
       Client side application context registration
       Spring transaction support
      Client side tests with Spring
      So far the Spring extension has only allowed application context creation and bean injection to occure when the tests were deployed in a container. We wanted to bring the same functionality to the client side. With the two new annotations @SpringClientConfiguration and @SpringClientAnnotationConfiguration it is now possible to set up the application context and inject beans......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Beta1&lt;/em&gt; release of the &lt;em&gt;Arquillian Spring Framework Extension&lt;/em&gt; component!&lt;/p&gt;
&lt;p&gt;The first Beta release of the Arquillian Spring extension is here.&lt;/p&gt;
&lt;h3 class=&quot;highlights&quot;&gt;Some of the highlights in this release&lt;/h3&gt;
&lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Client side application context registration&lt;br /&gt;
&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Spring transaction support&lt;/p&gt;
&lt;h3&gt;Client side tests with Spring&lt;/h3&gt;
&lt;p&gt;So far the Spring extension has only allowed application context creation and bean injection to occure when the tests were deployed in a container. We wanted to bring the same functionality to the client side. With the two new annotations &lt;code&gt;@SpringClientConfiguration&lt;/code&gt; and &lt;code&gt;@SpringClientAnnotationConfiguration&lt;/code&gt; it is now possible to set up the application context and inject beans into Arquillian tests that are running on the client.&lt;/p&gt;
&lt;p&gt;An example of use would be to test a deployed REST service using the Spring RestTemplate configured in the client context.&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@RunWith(Arquillian.class)&amp;#x000A;@SpringClientConfiguration(&quot;applicationContext-rest.xml&quot;)&amp;#x000A;public class ClientRestServiceTestCase {&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Deployment(testable = false)&amp;#x000A;    @OverProtocol(&quot;Servlet 3.0&quot;)&amp;#x000A;    public static Archive createTestArchive() {&amp;#x000A;        return Deployments.createWebApplication()&amp;#x000A;                .addAsWebInfResource(&quot;mvc/web.xml&quot;, &quot;web.xml&quot;)&amp;#x000A;                .addAsWebInfResource(&quot;service-servlet.xml&quot;);&amp;#x000A;    }&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @ArquillianResource&amp;#x000A;    private URL contextPath;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Autowired&amp;#x000A;    private RestTemplate restTemplate;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Test&amp;#x000A;    public void testGetEmployees() {&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        Employee result = restTemplate.getForObject(contextPath + &quot;/Employees/1&quot;, Employee.class);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        assertEquals(&quot;The returned employee has invalid name.&quot;, &quot;John Smith&quot;, result.getName());&amp;#x000A;    }&amp;#x000A;}&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Spring transaction support&lt;/h3&gt;
&lt;p&gt;The recent release of the &lt;a href=&quot;http://arquillian.org/modules/transaction-extension/&quot;&gt;Arquillian Transaction Extension&lt;/a&gt; allow us to control the transactional behavior of our test methods. With the help of the Spring Extension you can now control your Spring configured transaction manager using the same API. The set up is done in the normal Spring way by defining a transaction manager in the application context.&lt;/p&gt;
&lt;div class=&quot;filename&quot;&gt;applicationContext.xml&lt;/div&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&amp;#x000A;&amp;lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;&amp;#x000A;      xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&amp;#x000A;      xmlns:context=&quot;http://www.springframework.org/schema/context&quot;&amp;#x000A;      xmlns:tx=&quot;http://www.springframework.org/schema/tx&quot;&amp;#x000A;      xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd&quot;&amp;gt;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;   &amp;lt;!-- Creates local entity manager factory --&amp;gt;&amp;#x000A;   &amp;lt;bean id=&quot;entityManagerFactory&quot; class=&quot;org.springframework.orm.jpa.LocalEntityManagerFactoryBean&quot;&amp;gt;&amp;#x000A;       &amp;lt;property name=&quot;persistenceUnitName&quot; value=&quot;ArquillianTestUnit&quot;/&amp;gt;&amp;#x000A;   &amp;lt;/bean&amp;gt;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;   &amp;lt;!-- Enables the declarative transaction support --&amp;gt;&amp;#x000A;   &amp;lt;tx:annotation-driven transaction-manager=&quot;txManager&quot;/&amp;gt;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;   &amp;lt;!-- Creates transaction manager --&amp;gt;&amp;#x000A;   &amp;lt;bean id=&quot;txManager&quot; class=&quot;org.springframework.orm.jpa.JpaTransactionManager&quot;&amp;gt;&amp;#x000A;       &amp;lt;property name=&quot;entityManagerFactory&quot; ref=&quot;entityManagerFactory&quot;/&amp;gt;&amp;#x000A;   &amp;lt;/bean&amp;gt;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;/beans&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You define which transaction manager to use in your test class via the &lt;code&gt;manager&lt;/code&gt; attribute on the &lt;code&gt;@Transactional&lt;/code&gt; annotation.&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@RunWith(Arquillian.class)&amp;#x000A;@Transactional(manager = &quot;txManager&quot;)&amp;#x000A;@SpringConfiguration(&quot;applicationContext.xml&quot;)&amp;#x000A;public class JpaEmployeeRepositoryTestCase {&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Autowired&amp;#x000A;    private EmployeeRepository employeeRepository;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @PersistenceContext&amp;#x000A;    private EntityManager entityManager;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Test&amp;#x000A;    public void testSave() {&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        Employee employee = new Employee();&amp;#x000A;        employee.setName(&quot;Test employee&quot;);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        employeeRepository.save(employee);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        List&amp;lt;Employee&amp;gt; result = entityManager.createQuery(&quot;from Employee&quot;).getResultList();&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        assertEquals(&quot;Two employees were expected.&quot;, 1, result.size());&amp;#x000A;    }&amp;#x000A;}&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Migrating from 1.0.0.Alpha2&lt;/h3&gt;
&lt;ul&gt;
	&lt;li&gt;Artifact &lt;code&gt;arquillian-container-spring&lt;/code&gt; has been renamed to &lt;code&gt;arquillian-service-container-spring&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We look forward to your feedback on this new release on the &lt;a href=&quot;http://community.jboss.org/en/arquillian&quot;&gt;community forums&lt;/a&gt;!&lt;/p&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;
        &lt;a href=&quot;http://arquillian.org/modules/spring-extension/&quot;&gt;Arquillian Spring Framework Extension&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.0.0.Beta1
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-spring/commit/24516832e4a84f1032ecdbe6e0ee42e5b1f7f25e.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-08-17&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Aslak Knutsen&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.1.Final&lt;/li&gt;
          &lt;li&gt;JUnit &amp;#8211; 4.8.1&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-service-container-spring
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-container-spring/1.0.0.Beta1/arquillian-service-container-spring-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-container-spring/1.0.0.Beta1/arquillian-service-container-spring-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-service-deployer-spring-2.5
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-2.5/1.0.0.Beta1/arquillian-service-deployer-spring-2.5-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-2.5/1.0.0.Beta1/arquillian-service-deployer-spring-2.5-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-service-deployer-spring-3
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-3/1.0.0.Beta1/arquillian-service-deployer-spring-3-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-3/1.0.0.Beta1/arquillian-service-deployer-spring-3-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-service-deployer-spring-common
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-common/1.0.0.Beta1/arquillian-service-deployer-spring-common-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-common/1.0.0.Beta1/arquillian-service-deployer-spring-common-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-service-integration-spring
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-integration-spring/1.0.0.Beta1/arquillian-service-integration-spring-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-integration-spring/1.0.0.Beta1/arquillian-service-integration-spring-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-service-integration-spring-inject
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-integration-spring-inject/1.0.0.Beta1/arquillian-service-integration-spring-inject-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-integration-spring-inject/1.0.0.Beta1/arquillian-service-integration-spring-inject-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-service-integration-spring-javaconfig
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-integration-spring-javaconfig/1.0.0.Beta1/arquillian-service-integration-spring-javaconfig-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-integration-spring-javaconfig/1.0.0.Beta1/arquillian-service-integration-spring-javaconfig-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-transaction-spring
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-spring/1.0.0.Beta1/arquillian-transaction-spring-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-spring/1.0.0.Beta1/arquillian-transaction-spring-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-warp-spring
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-spring/1.0.0.Beta1/arquillian-warp-spring-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-spring/1.0.0.Beta1/arquillian-warp-spring-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-warp-spring-ftest
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-spring-ftest/1.0.0.Beta1/arquillian-warp-spring-ftest-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-spring-ftest/1.0.0.Beta1/arquillian-warp-spring-ftest-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;3&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;Arquillian Transaction Extension support and Client side ApplicationContext creation&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Feature Request&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-958&quot;&gt;ARQ-958&lt;/a&gt; -         Provide support for Spring transactions&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-985&quot;&gt;ARQ-985&lt;/a&gt; -         Register the Spring Extension on client side.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/jmnarloch&quot;&gt;Jakub Narloch&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/08/13/arquillian-extension-transaction-1-0-0-Alpha1/</id>
    <title>Arquillian Transaction Extension 1.0.0.Alpha1 Released</title>
    <updated>2012-08-14T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/08/13/arquillian-extension-transaction-1-0-0-Alpha1/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="transaction" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha1 release of the Arquillian Transaction Extension component!
      Motivation
      Until this point, the only special transaction support in Arquillian has come from the Arquillian Persistence Extension. But as the extension universe expand, the need for other extensions to interact with transactions expand as well. To avoid you having to deal with the individual extensions transaction support in different ways, different apis, we concluded it was time to make Transactions it&#8217;s own top level extension.
      Usage
      The current API takes a declarative approach to configure the transactional behavior of the Test case. By annotating the TestClass or......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha1&lt;/em&gt; release of the &lt;em&gt;Arquillian Transaction Extension&lt;/em&gt; component!&lt;/p&gt;
&lt;h3&gt;Motivation&lt;/h3&gt;
&lt;p&gt;Until this point, the only special transaction support in Arquillian has come from the &lt;a href=&quot;http://arquillian.org/modules/persistence-extension&quot;&gt;Arquillian Persistence Extension&lt;/a&gt;. But as the extension universe expand, the need for other extensions to interact with transactions expand as well. To avoid you having to deal with the individual extensions transaction support in different ways, different apis, we concluded it was time to make Transactions it&amp;#8217;s own top level extension.&lt;/p&gt;
&lt;h3&gt;Usage&lt;/h3&gt;
&lt;p&gt;The current API takes a declarative approach to configure the transactional behavior of the Test case. By annotating the TestClass or the TestMethod with &lt;code&gt;@Transactional&lt;/code&gt; you control how the transaction should be handled after TestMethod execution.&lt;br /&gt;
Should Arquillian &lt;code&gt;COMMIT&lt;/code&gt;, &lt;code&gt;ROLLBACK&lt;/code&gt; or &lt;code&gt;DISABLE&lt;/code&gt; the transaction for this method?&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@RunWith(Arquillian.class)&amp;#x000A;@Transactional&amp;#x000A;public class GreeterTestClass {&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    public void defaultTest() throws Exception {&amp;#x000A;        // test code&amp;#x000A;    }&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Transactional(TransactionMode.ROLLBACK)&amp;#x000A;    public void rollbackTest() throws Exception {&amp;#x000A;        // test code&amp;#x000A;    }&amp;#x000A;}&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;SPI integration&lt;/h3&gt;
&lt;p&gt;The extension itself does not come with any implementation for a concrete transaction API, the implementations will be provided by separate modules. During execution, the transactional handling is delegated to a &lt;code&gt;TransactionProvider&lt;/code&gt; service implementation which is registered within Arquillian. The SPI defines a set of transaction lifecycle events (&lt;code&gt;(Before|After)Transaction(Started|Ended)&lt;/code&gt;) and a separate transactional scope (&lt;code&gt;@TransactionScope&lt;/code&gt;) which is bound to the executing transaction.&lt;/p&gt;
&lt;h3&gt;Implementations&lt;/h3&gt;
&lt;p&gt;Besides the JTA implementation provided by the &lt;a href=&quot;http://arquillian.org/modules/persistence-extension&quot;&gt;Arquillian Persistence Extension&lt;/a&gt;, the next extensions which will provide support is the Spring Extension. More details to come.&lt;/p&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;
        &lt;a href=&quot;http://arquillian.org/modules/transaction-extension/&quot;&gt;Arquillian Transaction Extension&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.0.0.Alpha1
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-transaction/commit/fbca9f5eb141b9172c4356d934bd4908fd3cc819.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-08-13&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Aslak Knutsen&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.0.Final&lt;/li&gt;
          &lt;li&gt;ShrinkWrap Resolvers &amp;#8211; 2.0.0-alpha-1&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-transaction-api
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-api/1.0.0.Alpha1/arquillian-transaction-api-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-api/1.0.0.Alpha1/arquillian-transaction-api-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-transaction-bom
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-bom/1.0.0.Alpha1/arquillian-transaction-bom-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-transaction-impl-base
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-impl-base/1.0.0.Alpha1/arquillian-transaction-impl-base-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-impl-base/1.0.0.Alpha1/arquillian-transaction-impl-base-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-transaction-spi
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-spi/1.0.0.Alpha1/arquillian-transaction-spi-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-spi/1.0.0.Alpha1/arquillian-transaction-spi-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;2&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;The basic setup for rollback/commit on a TestClass with multiple Manager implementation&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Feature Request&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1033&quot;&gt;ARQ-1033&lt;/a&gt; -         Extract the transaction support out of Arquillian Persistence Extension&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/jmnarloch&quot;&gt;Jakub Narloch&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/07/25/arquillian-core-1-0-2-Final/</id>
    <title>Arquillian Core 1.0.2.Final Released</title>
    <updated>2012-07-26T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/07/25/arquillian-core-1-0-2-Final/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="platform" />
    <category scheme="http://arquillian.org/blog/tags" term="core" />
    <category scheme="http://arquillian.org/blog/tags" term="jbosscentral" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.2.Final release of the Arquillian Core component!
Another little maintenance release in the Arquillian 1.0 series.
The @Deployment can now be defined on private and protected methods. The same package and protected support is applicable to the SPI level for service and observer implementations.
@Deployment&#x000A;static JavaArchive createDeployment() {&#x000A;   ...&#x000A;}
Using environment variables in arquillian.xml is now possible via the property expression ENV.name
&lt;container qualifier="example"&gt;&#x000A;   &lt;property name="jbossHome"&gt;${ENV.JBOSS_HOME}&lt;/property&gt;&#x000A;&lt;/container&gt;
Ever run into this exception? &#8220;UnsupportedOperationException: Multiple WebArchives found in X.ear. Can not determine which to enrich.&#8221;
The exception happens when the Servlet Protocol in Arquillian attempts to enrich......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.2.Final&lt;/em&gt; release of the &lt;em&gt;Arquillian Core&lt;/em&gt; component!&lt;/p&gt;
&lt;p&gt;Another little maintenance release in the Arquillian 1.0 series.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;@Deployment&lt;/code&gt; can now be defined on private and protected methods. The same package and protected support is applicable to the SPI level for service and observer implementations.&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@Deployment&amp;#x000A;static JavaArchive createDeployment() {&amp;#x000A;   ...&amp;#x000A;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using environment variables in &lt;code&gt;arquillian.xml&lt;/code&gt; is now possible via the property expression &lt;code&gt;ENV.name&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;container qualifier=&quot;example&quot;&amp;gt;&amp;#x000A;   &amp;lt;property name=&quot;jbossHome&quot;&amp;gt;${ENV.JBOSS_HOME}&amp;lt;/property&amp;gt;&amp;#x000A;&amp;lt;/container&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ever run into this exception? &amp;#8220;UnsupportedOperationException: Multiple WebArchives found in X.ear. Can not determine which to enrich.&amp;#8221;&lt;br /&gt;
The exception happens when the &lt;code&gt;Servlet Protocol&lt;/code&gt; in Arquillian attempts to enrich an &lt;code&gt;EnterpriseArchive&lt;/code&gt; for &lt;code&gt;in-container&lt;/code&gt; testing, but multiple &lt;code&gt;WebArchives&lt;/code&gt; were found in the Deployment, and it can&amp;#8217;t determine which you want to test. With the help of &lt;a href=&quot;profile://robertpanzer&quot;&gt;Robert Panzer&lt;/a&gt; this is now supported. You can give a &lt;code&gt;Protocol&lt;/code&gt; a hint to which &lt;code&gt;Archive&lt;/code&gt; is under test by using the new &lt;code&gt;Testable.archiveToTest(Archive)&lt;/code&gt; method.&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@Deployment&amp;#x000A;static EnterpriseArchive create() {&amp;#x000A;   return ShrinkWrap.create(EnterpriseArchive.class)&amp;#x000A;      .addAsModule(...some..war..)&amp;#x000A;      .addAsModule(&amp;#x000A;         Testable.archiveToTest(&amp;#x000A;            ShrinkWrap.create(WebArchive.class)&amp;#x000A;               .addXYZ(...)&amp;#x000A;         )&amp;#x000A;      );&amp;#x000A;}&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;
        &lt;a href=&quot;http://arquillian.org/modules/core-platform/&quot;&gt;Arquillian Core&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.0.2.Final
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-core/commit/92d943b36ffffb0883898c9896533dbcafa30d8e.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-07-23&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Aslak Knutsen&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;ShrinkWrap Core &amp;#8211; 1.0.1&lt;/li&gt;
          &lt;li&gt;ShrinkWrap Descriptors &amp;#8211; 2.0.0-alpha-3&lt;/li&gt;
          &lt;li&gt;JUnit &amp;#8211; 4.8.1&lt;/li&gt;
          &lt;li&gt;TestNG &amp;#8211; 5.14.6&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian
    &amp;raquo;
    arquillian-bom
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/arquillian-bom/1.0.2.Final/arquillian-bom-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.config
    &amp;raquo;
    arquillian-config-api
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-api/1.0.2.Final/arquillian-config-api-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-api/1.0.2.Final/arquillian-config-api-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.config
    &amp;raquo;
    arquillian-config-impl-base
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-impl-base/1.0.2.Final/arquillian-config-impl-base-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-impl-base/1.0.2.Final/arquillian-config-impl-base-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.config
    &amp;raquo;
    arquillian-config-spi
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-spi/1.0.2.Final/arquillian-config-spi-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-spi/1.0.2.Final/arquillian-config-spi-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-container-impl-base
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-impl-base/1.0.2.Final/arquillian-container-impl-base-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-impl-base/1.0.2.Final/arquillian-container-impl-base-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-container-spi
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-spi/1.0.2.Final/arquillian-container-spi-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-spi/1.0.2.Final/arquillian-container-spi-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-container-test-api
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-api/1.0.2.Final/arquillian-container-test-api-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-api/1.0.2.Final/arquillian-container-test-api-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-container-test-impl-base
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-impl-base/1.0.2.Final/arquillian-container-test-impl-base-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-impl-base/1.0.2.Final/arquillian-container-test-impl-base-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-container-test-spi
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-spi/1.0.2.Final/arquillian-container-test-spi-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-spi/1.0.2.Final/arquillian-container-test-spi-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.core
    &amp;raquo;
    arquillian-core-api
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-api/1.0.2.Final/arquillian-core-api-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-api/1.0.2.Final/arquillian-core-api-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.core
    &amp;raquo;
    arquillian-core-impl-base
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-impl-base/1.0.2.Final/arquillian-core-impl-base-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-impl-base/1.0.2.Final/arquillian-core-impl-base-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.core
    &amp;raquo;
    arquillian-core-spi
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-spi/1.0.2.Final/arquillian-core-spi-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-spi/1.0.2.Final/arquillian-core-spi-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.junit
    &amp;raquo;
    arquillian-junit-container
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-container/1.0.2.Final/arquillian-junit-container-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-container/1.0.2.Final/arquillian-junit-container-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.junit
    &amp;raquo;
    arquillian-junit-core
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-core/1.0.2.Final/arquillian-junit-core-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-core/1.0.2.Final/arquillian-junit-core-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.junit
    &amp;raquo;
    arquillian-junit-standalone
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-standalone/1.0.2.Final/arquillian-junit-standalone-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-standalone/1.0.2.Final/arquillian-junit-standalone-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.protocol
    &amp;raquo;
    arquillian-protocol-jmx
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-jmx/1.0.2.Final/arquillian-protocol-jmx-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-jmx/1.0.2.Final/arquillian-protocol-jmx-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.protocol
    &amp;raquo;
    arquillian-protocol-servlet
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-servlet/1.0.2.Final/arquillian-protocol-servlet-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-servlet/1.0.2.Final/arquillian-protocol-servlet-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.test
    &amp;raquo;
    arquillian-test-api
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-api/1.0.2.Final/arquillian-test-api-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-api/1.0.2.Final/arquillian-test-api-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.test
    &amp;raquo;
    arquillian-test-impl-base
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-impl-base/1.0.2.Final/arquillian-test-impl-base-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-impl-base/1.0.2.Final/arquillian-test-impl-base-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.test
    &amp;raquo;
    arquillian-test-spi
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-spi/1.0.2.Final/arquillian-test-spi-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-spi/1.0.2.Final/arquillian-test-spi-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.testenricher
    &amp;raquo;
    arquillian-testenricher-cdi
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-cdi/1.0.2.Final/arquillian-testenricher-cdi-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-cdi/1.0.2.Final/arquillian-testenricher-cdi-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.testenricher
    &amp;raquo;
    arquillian-testenricher-ejb
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-ejb/1.0.2.Final/arquillian-testenricher-ejb-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-ejb/1.0.2.Final/arquillian-testenricher-ejb-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.testenricher
    &amp;raquo;
    arquillian-testenricher-initialcontext
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-initialcontext/1.0.2.Final/arquillian-testenricher-initialcontext-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-initialcontext/1.0.2.Final/arquillian-testenricher-initialcontext-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.testenricher
    &amp;raquo;
    arquillian-testenricher-resource
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-resource/1.0.2.Final/arquillian-testenricher-resource-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-resource/1.0.2.Final/arquillian-testenricher-resource-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.testng
    &amp;raquo;
    arquillian-testng-container
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-container/1.0.2.Final/arquillian-testng-container-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-container/1.0.2.Final/arquillian-testng-container-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.testng
    &amp;raquo;
    arquillian-testng-core
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-core/1.0.2.Final/arquillian-testng-core-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-core/1.0.2.Final/arquillian-testng-core-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.testng
    &amp;raquo;
    arquillian-testng-standalone
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-standalone/1.0.2.Final/arquillian-testng-standalone-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-standalone/1.0.2.Final/arquillian-testng-standalone-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;9&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;Maintenance release + Multi war support&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Bug&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-376&quot;&gt;ARQ-376&lt;/a&gt; -         Environment configuration is overridden by arquillian.xml&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-620&quot;&gt;ARQ-620&lt;/a&gt; -         arquillian-core-impl-base needs a non-optional dependency on jboss-logmanager&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Enhancement&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-920&quot;&gt;ARQ-920&lt;/a&gt; -         Support @Deployment on non-public member (method or field)&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-921&quot;&gt;ARQ-921&lt;/a&gt; -         Make environment variables available for property replacement in configuration&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Feature Request&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-990&quot;&gt;ARQ-990&lt;/a&gt; -         Update dependencies to simplify downstream Fedora Packaging&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1024&quot;&gt;ARQ-1024&lt;/a&gt; -         Support package private implementation&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1035&quot;&gt;ARQ-1035&lt;/a&gt; -         Should support enriching a specific module in a multi module deployment&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Task&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-956&quot;&gt;ARQ-956&lt;/a&gt; -         Remove dependency on jboss-logging in JMX protocol&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/thomas.diesler&quot;&gt;Thomas Diesler&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/Robert.Panzer&quot;&gt;Robert.panzer&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/dan.j.allen&quot;&gt;Dan Allen&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/07/24/arquillian-testrunner-spock-1-0-0-Alpha2/</id>
    <title>Arquillian TestRunner Spock 1.0.0.Alpha2 Released</title>
    <updated>2012-07-25T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/07/24/arquillian-testrunner-spock-1-0-0-Alpha2/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="test-runner" />
    <category scheme="http://arquillian.org/blog/tags" term="spock" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha2 release of the Arquillian TestRunner Spock component!
      Some of the Highlights
      This minor release of the intergalactic cooperation between Spock and Arquillian comes with the following updates:
      
      	Update to the latest stable version of Spock &#8211; 0.6
      	Update Arquillian Core to 1.0.1.Final
      
      Smashing bugs has never been easier!
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha2&lt;/em&gt; release of the &lt;em&gt;Arquillian TestRunner Spock&lt;/em&gt; component!&lt;/p&gt;
&lt;h3&gt;Some of the Highlights&lt;/h3&gt;
&lt;p&gt;This minor release of the intergalactic cooperation between &lt;a href=&quot;http://code.google.com/p/spock/&quot;&gt;Spock&lt;/a&gt; and Arquillian comes with the following updates:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Update to the latest stable version of Spock &amp;#8211; 0.6&lt;/li&gt;
	&lt;li&gt;Update Arquillian Core to 1.0.1.Final&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Smashing bugs has never been easier!&lt;/p&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;
        &lt;a href=&quot;http://arquillian.org/modules/spock-test-runner/&quot;&gt;Arquillian TestRunner Spock&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.0.0.Alpha2
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-testrunner-spock/commit/18477fe1043b66e617afbf77d72bbd17bdf8ceda.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-07-23&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Aslak Knutsen&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.1.Final&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.spock&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.spock
    &amp;raquo;
    arquillian-spock-container
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/spock/arquillian-spock-container/1.0.0.Alpha2/arquillian-spock-container-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/spock/arquillian-spock-container/1.0.0.Alpha2/arquillian-spock-container-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.spock
    &amp;raquo;
    arquillian-spock-core
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/spock/arquillian-spock-core/1.0.0.Alpha2/arquillian-spock-core-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/spock/arquillian-spock-core/1.0.0.Alpha2/arquillian-spock-core-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.spock
    &amp;raquo;
    arquillian-spock-standalone
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/spock/arquillian-spock-standalone/1.0.0.Alpha2/arquillian-spock-standalone-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/spock/arquillian-spock-standalone/1.0.0.Alpha2/arquillian-spock-standalone-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;4&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Bug&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-895&quot;&gt;ARQ-895&lt;/a&gt; -         Arquillian config-impl-base is not a part of spock-standalone&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Enhancement&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1041&quot;&gt;ARQ-1041&lt;/a&gt; -         Update Spock to the lastest (0.6) version&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Task&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1039&quot;&gt;ARQ-1039&lt;/a&gt; -         Update Spock Test Runner to 1.0.1.Final of Arquillian Core&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/bmajsak&quot;&gt;Bartosz Majsak&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/dan.j.allen&quot;&gt;Dan Allen&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/07/24/arquillian-extension-spring-1-0-0-Alpha2/</id>
    <title>Arquillian Spring Framework Extension 1.0.0.Alpha2 Released</title>
    <updated>2012-07-25T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/07/24/arquillian-extension-spring-1-0-0-Alpha2/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="gsoc" />
    <category scheme="http://arquillian.org/blog/tags" term="gsoc" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="spring" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha2 release of the Arquillian Spring Framework Extension component!
      This release contain many improvements on the existing extension, but also some new features.
      Some of the highlights in this release
       Warp Spring MVC Extension
       Spring Embedded Container
       Separated the integration capabilities
      Testing Spring MVC with Warp
      Arquillian Warp is a powerful tool that let you run the functional tests against your web front end and at the same time verify the internal state of your application. With this release we are introducing the Warp extension for testing Spring MVC applications that run in a real servlet......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha2&lt;/em&gt; release of the &lt;em&gt;Arquillian Spring Framework Extension&lt;/em&gt; component!&lt;/p&gt;
&lt;p&gt;This release contain many improvements on the existing extension, but also some new features.&lt;/p&gt;
&lt;h3 class=&quot;highlights&quot;&gt;Some of the highlights in this release&lt;/h3&gt;
&lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Warp Spring MVC Extension&lt;br /&gt;
&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Spring Embedded Container&lt;br /&gt;
&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Separated the integration capabilities&lt;/p&gt;
&lt;h3&gt;Testing Spring MVC with Warp&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://arquillian.org/modules/warp-extension/&quot;&gt;Arquillian Warp&lt;/a&gt; is a powerful tool that let you run the functional tests against your web front end and at the same time verify the internal state of your application. With this release we are introducing the Warp extension for testing Spring MVC applications that run in a real servlet container.&lt;/p&gt;
&lt;p&gt;Let&amp;#8217;s dive into an example of how to test a Spring MVC application using Arquillian Warp. First we need to prepare the application descriptor.&lt;/p&gt;
&lt;div class=&quot;filename&quot;&gt;web.xml&lt;/div&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;web-app xmlns=&quot;http://java.sun.com/xml/ns/javaee&quot;&amp;#x000A;         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&amp;#x000A;         xsi:schemaLocation=&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&quot;&amp;#x000A;         version=&quot;3.0&quot;&amp;gt;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    &amp;lt;servlet&amp;gt;&amp;#x000A;        &amp;lt;servlet-name&amp;gt;welcome&amp;lt;/servlet-name&amp;gt;&amp;#x000A;        &amp;lt;servlet-class&amp;gt;org.jboss.arquillian.warp.extension.spring.servlet.WarpDispatcherServlet&amp;lt;/servlet-class&amp;gt;&amp;#x000A;        &amp;lt;load-on-startup&amp;gt;1&amp;lt;/load-on-startup&amp;gt;&amp;#x000A;    &amp;lt;/servlet&amp;gt;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    &amp;lt;servlet-mapping&amp;gt;&amp;#x000A;        &amp;lt;servlet-name&amp;gt;welcome&amp;lt;/servlet-name&amp;gt;&amp;#x000A;        &amp;lt;url-pattern&amp;gt;*.do&amp;lt;/url-pattern&amp;gt;&amp;#x000A;    &amp;lt;/servlet-mapping&amp;gt;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;/web-app&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You&amp;#8217;ll notice that instead of using Spring&amp;#8217;s DispatcherServlet we instead use the WarpDispatcherServlet.&lt;/p&gt;
&lt;p&gt;And the testing code:&lt;/p&gt;
&lt;div class=&quot;filename&quot;&gt;LoginControllerTestCase.java&lt;/div&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@WarpTest&amp;#x000A;@RunWith(Arquillian.class)&amp;#x000A;public class LoginControllerTestCase {&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Drone&amp;#x000A;    WebDriver browser;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @ArquillianResource&amp;#x000A;    URL contextPath;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Test&amp;#x000A;    @RunAsClient&amp;#x000A;    public void testLoginValidationErrors() {&amp;#x000A;        browser.navigate().to(contextPath + &quot;login.do&quot;);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        Warp.execute(new ClientAction() {&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;            @Override&amp;#x000A;            public void action() {&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;                browser.findElement(By.id(&quot;loginForm&quot;)).submit();&amp;#x000A;            }&amp;#x000A;        }).verify(new LoginControllerValidationErrorsVerification());&amp;#x000A;    }&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Test&amp;#x000A;    @RunAsClient&amp;#x000A;    public void testLoginSuccess() {&amp;#x000A;        browser.navigate().to(contextPath + &quot;login.do&quot;);&amp;#x000A;        browser.findElement(By.id(&quot;login&quot;)).sendKeys(&quot;warp&quot;);&amp;#x000A;        browser.findElement(By.id(&quot;password&quot;)).sendKeys(&quot;warp&quot;);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        Warp.execute(new ClientAction() {&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;            @Override&amp;#x000A;            public void action() {&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;                browser.findElement(By.id(&quot;loginForm&quot;)).submit();&amp;#x000A;            }&amp;#x000A;        }).verify(new LoginSuccessVerification());&amp;#x000A;    }&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    public static class LoginControllerValidationErrorsVerification extends ServerAssertion {&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;            private static final long serialVersionUID = 1L;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;            @SpringMvcResource&amp;#x000A;            private ModelAndView modelAndView;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;            @SpringMvcResource&amp;#x000A;            private Errors errors;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;            @AfterServlet&amp;#x000A;            public void testGetLogin() {&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;                assertEquals(&quot;login&quot;, modelAndView.getViewName());&amp;#x000A;                assertNotNull(modelAndView.getModel().get(&quot;userCredentials&quot;));&amp;#x000A;                assertEquals(&quot;Two errors were expected.&quot;, 2, errors.getAllErrors().size());&amp;#x000A;                assertTrue(&quot;The login hasn't been validated.&quot;, errors.hasFieldErrors(&quot;login&quot;));&amp;#x000A;                assertTrue(&quot;The password hasn't been validated.&quot;, errors.hasFieldErrors(&quot;password&quot;));&amp;#x000A;            }&amp;#x000A;        }&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    public static class LoginSuccessVerification extends ServerAssertion {&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        private static final long serialVersionUID = 1L;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        @SpringMvcResource&amp;#x000A;        private ModelAndView modelAndView;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        @SpringMvcResource&amp;#x000A;        private Errors errors;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        @AfterServlet&amp;#x000A;        public void testGetLogin() {&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;            assertEquals(&quot;welcome&quot;, modelAndView.getViewName());&amp;#x000A;            assertFalse(errors.hasErrors());&amp;#x000A;        }&amp;#x000A;    }&amp;#x000A;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the above example we are using &lt;a href=&quot;http://arquillian.org/modules/drone-extension/&quot;&gt;Arquillian Drone&lt;/a&gt; to navigate to the login page of our application and then filling in the login form with our user credentials.&lt;/p&gt;
&lt;p&gt;The internal state of the DispatcherServlet is caught in a SpringMvcResult object which can be injected into the ServerAssertion. We can also inject other required objects like the ModelAndView.&lt;/p&gt;
&lt;h3&gt;Spring Embedded Container&lt;/h3&gt;
&lt;p&gt;Each development cycle may end in repeatedly re-running the integration tests, each time taking significant amount of time. The embedded container was thought to aid this situation. Running the tests embedded will decrease the execution time from seconds to milliseconds. It will help testing business objects, but since it&amp;#8217;s not a full servlet container you won&amp;#8217;t be able to use it for testing servlet requests in a web application.&lt;/p&gt;
&lt;h3&gt;Migrating from 1.0.0.Alpha1&lt;/h3&gt;
&lt;p&gt;1.0.0.Alpha2 comes with a couple significant changes from the previous version.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;The Spring integration functionality has been separated out to its own module and is now part of the arquillian-service-integration-spring-inject module, and additional the arquillian-service-integration-spring-inject and the arquillian-service-integration-spring-javaconfig that does not target any specific Spring version, but rather provide functionality like XML or Java-based configuration.&lt;/li&gt;
	&lt;li&gt;The arquillian-service-deployer-spring module&amp;#8217;s can still be used for autopackging the Spring artifacts.&lt;/li&gt;
	&lt;li&gt;The @SpringAnnotatedConfiguration has been renamed to @SpringAnnotationConfiguration.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Roadmap&lt;/h3&gt;
&lt;p&gt;The next release is planned to include Spring transaction support and will introduce even better Warp integration on the client side in order make REST testing even simpler.&lt;/p&gt;
&lt;p&gt;We look forward to hearing your feedback about this release in the &lt;a href=&quot;http://community.jboss.org/en/arquillian&quot;&gt;community forums&lt;/a&gt;!&lt;/p&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;
        &lt;a href=&quot;http://arquillian.org/modules/spring-extension/&quot;&gt;Arquillian Spring Framework Extension&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.0.0.Alpha2
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-spring/commit/ef41e3fb2c87c3163680df3767daaa92e5e8b6ec.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-07-21&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Aslak Knutsen&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.1.Final&lt;/li&gt;
          &lt;li&gt;JUnit &amp;#8211; 4.8.1&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-container-spring
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-container-spring/1.0.0.Alpha2/arquillian-container-spring-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-container-spring/1.0.0.Alpha2/arquillian-container-spring-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-service-deployer-spring-2.5
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-2.5/1.0.0.Alpha2/arquillian-service-deployer-spring-2.5-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-2.5/1.0.0.Alpha2/arquillian-service-deployer-spring-2.5-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-service-deployer-spring-3
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-3/1.0.0.Alpha2/arquillian-service-deployer-spring-3-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-3/1.0.0.Alpha2/arquillian-service-deployer-spring-3-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-service-deployer-spring-common
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-common/1.0.0.Alpha2/arquillian-service-deployer-spring-common-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-common/1.0.0.Alpha2/arquillian-service-deployer-spring-common-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-service-integration-spring
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-integration-spring/1.0.0.Alpha2/arquillian-service-integration-spring-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-integration-spring/1.0.0.Alpha2/arquillian-service-integration-spring-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-service-integration-spring-inject
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-integration-spring-inject/1.0.0.Alpha2/arquillian-service-integration-spring-inject-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-integration-spring-inject/1.0.0.Alpha2/arquillian-service-integration-spring-inject-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-service-integration-spring-javaconfig
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-integration-spring-javaconfig/1.0.0.Alpha2/arquillian-service-integration-spring-javaconfig-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-integration-spring-javaconfig/1.0.0.Alpha2/arquillian-service-integration-spring-javaconfig-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-warp-spring
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-spring/1.0.0.Alpha2/arquillian-warp-spring-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-spring/1.0.0.Alpha2/arquillian-warp-spring-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-warp-spring-ftest
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-spring-ftest/1.0.0.Alpha2/arquillian-warp-spring-ftest-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-spring-ftest/1.0.0.Alpha2/arquillian-warp-spring-ftest-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;5&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;Spring Embedded Container + Warp&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Feature Request&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-219&quot;&gt;ARQ-219&lt;/a&gt; -         Implement an embedded Spring container&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-945&quot;&gt;ARQ-945&lt;/a&gt; -         Extract Spring Integration out of Spring Deployer&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-978&quot;&gt;ARQ-978&lt;/a&gt; -         Provide Warp with extension for testing SpringMVC.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Task&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1019&quot;&gt;ARQ-1019&lt;/a&gt; -         Spring Extension: Update the Arquiilian Core to 1.0.1&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/jmnarloch&quot;&gt;Jakub Narloch&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/07/23/arquillian-extension-drone-1-1-0-CR2/</id>
    <title>Arquillian Drone Extension 1.1.0.CR2 Released</title>
    <updated>2012-07-24T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/07/23/arquillian-extension-drone-1-1-0-CR2/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="drone" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.1.0.CR2 release of the Arquillian Drone Extension component!
Some of the Highlights in This Release
Drone 1.1.0.CR2 is a bugfix release form the previous 1.1.0 CR release. We fixed browserCapability usage, reusing browers sessions and Selenium Server user extensions support.
Big thanks to the community
I&#8217;d like to thank Arquillian Drone Community, especially Ste Gr and Simon Søndergaard for helping us test and patch the release by proactively using new features. 
It&#8217;s a pleasure to work with you guys!
What is Arquillian?
Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.1.0.CR2&lt;/em&gt; release of the &lt;em&gt;Arquillian Drone Extension&lt;/em&gt; component!&lt;/p&gt;
&lt;h3&gt;Some of the Highlights in This Release&lt;/h3&gt;
&lt;p&gt;Drone 1.1.0.CR2 is a bugfix release form the previous 1.1.0 CR release. We fixed browserCapability usage, reusing browers sessions and Selenium Server user extensions support.&lt;/p&gt;
&lt;h3&gt;Big thanks to the community&lt;/h3&gt;
&lt;p&gt;I&amp;#8217;d like to thank Arquillian Drone Community, especially Ste Gr and Simon Søndergaard for helping us test and patch the release by proactively using new features. &lt;br /&gt;
It&amp;#8217;s a pleasure to work with you guys!&lt;/p&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;
        &lt;a href=&quot;http://arquillian.org/modules/drone-extension/&quot;&gt;Arquillian Drone Extension&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.1.0.CR2
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-drone/commit/3f8919a6a0942f46f692a8c7a40a6f36cb2e926a.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-07-18&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Lukas Fryc&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.0.Final&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-api
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-api/1.1.0.CR2/arquillian-drone-api-1.1.0.CR2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-api/1.1.0.CR2/arquillian-drone-api-1.1.0.CR2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-bom
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-bom/1.1.0.CR2/arquillian-drone-bom-1.1.0.CR2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-configuration
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-configuration/1.1.0.CR2/arquillian-drone-configuration-1.1.0.CR2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-configuration/1.1.0.CR2/arquillian-drone-configuration-1.1.0.CR2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-impl
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-impl/1.1.0.CR2/arquillian-drone-impl-1.1.0.CR2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-impl/1.1.0.CR2/arquillian-drone-impl-1.1.0.CR2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-selenium
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium/1.1.0.CR2/arquillian-drone-selenium-1.1.0.CR2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium/1.1.0.CR2/arquillian-drone-selenium-1.1.0.CR2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-selenium-depchain
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-depchain/1.1.0.CR2/arquillian-drone-selenium-depchain-1.1.0.CR2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-selenium-server
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-server/1.1.0.CR2/arquillian-drone-selenium-server-1.1.0.CR2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-server/1.1.0.CR2/arquillian-drone-selenium-server-1.1.0.CR2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-spi
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-spi/1.1.0.CR2/arquillian-drone-spi-1.1.0.CR2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-spi/1.1.0.CR2/arquillian-drone-spi-1.1.0.CR2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-webdriver
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver/1.1.0.CR2/arquillian-drone-webdriver-1.1.0.CR2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver/1.1.0.CR2/arquillian-drone-webdriver-1.1.0.CR2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-webdriver-depchain
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver-depchain/1.1.0.CR2/arquillian-drone-webdriver-depchain-1.1.0.CR2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;6&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Bug&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1021&quot;&gt;ARQ-1021&lt;/a&gt; -         Internet Explorer could not be created from capabilities&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1022&quot;&gt;ARQ-1022&lt;/a&gt; -         BrowserCapability overrides direct @Drone class type&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1023&quot;&gt;ARQ-1023&lt;/a&gt; -         Selenium Server does not load user extensions&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1026&quot;&gt;ARQ-1026&lt;/a&gt; -         Selenium session is not persisted to a file store when file does not exists&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1030&quot;&gt;ARQ-1030&lt;/a&gt; -         Driving capabilities using arquillin.xml does not work&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1031&quot;&gt;ARQ-1031&lt;/a&gt; -         Drone doesn't remove non-reusable sessions from the queue&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/kpiwko&quot;&gt;Karel Piwko&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/lfryc&quot;&gt;Lukas Fryc&lt;/a&gt;, &lt;a href=&quot;https://github.com/papousek&quot;&gt;Jan PapoušEk&lt;/a&gt;, &lt;a href=&quot;https://github.com/john7doe&quot;&gt;Simon Søndergaard&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/06/27/arquillian-extension-drone-1-1-0-CR1/</id>
    <title>Arquillian Drone Extension 1.1.0.CR1 Released</title>
    <updated>2012-06-28T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/06/27/arquillian-extension-drone-1-1-0-CR1/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="drone" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.1.0.CR1 release of the Arquillian Drone Extension component!
Some of the Highlights in This Release

	underlying Selenium upgraded to 2.24.1
	support for Opera browser added
	webdriver configuration improved
	reusable session for RemoteWebDriver introduced

Configuration Improvement
Have you ever been stucked because you didn&#8217;t remember full qualified class name of the webdriver you wanted to use in your tests? Last Drone version required setting of implementationClass property and we should admit it wasn&#8217;t really comfortable. So we present a new property called browserCapabilities which can have the following values: android, chrome, firefox, htmlUnit, internetExplorer, iphone and opera. The values ​​correspond......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.1.0.CR1&lt;/em&gt; release of the &lt;em&gt;Arquillian Drone Extension&lt;/em&gt; component!&lt;/p&gt;
&lt;h3&gt;Some of the Highlights in This Release&lt;/h3&gt;
&lt;ul&gt;
	&lt;li&gt;underlying &lt;strong&gt;Selenium&lt;/strong&gt; upgraded to 2.24.1&lt;/li&gt;
	&lt;li&gt;support for Opera browser added&lt;/li&gt;
	&lt;li&gt;webdriver configuration improved&lt;/li&gt;
	&lt;li&gt;reusable session for &lt;a href=&quot;http://selenium.googlecode.com/svn/tags/selenium-2.24.1/docs/api/java/org/openqa/selenium/remote/RemoteWebDriver.html&quot;&gt;RemoteWebDriver&lt;/a&gt; introduced&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Configuration Improvement&lt;/h3&gt;
&lt;p&gt;Have you ever been stucked because you didn&amp;#8217;t remember full qualified class name of the webdriver you wanted to use in your tests? Last Drone version required setting of &lt;strong&gt;implementationClass&lt;/strong&gt; property and we should admit it wasn&amp;#8217;t really comfortable. So we present a new property called &lt;strong&gt;browserCapabilities&lt;/strong&gt; which can have the following values: android, chrome, firefox, htmlUnit, internetExplorer, iphone and opera. The values ​​correspond to the factory methods of &lt;a href=&quot;http://selenium.googlecode.com/svn/tags/selenium-2.24.1/docs/api/java/org/openqa/selenium/remote/DesiredCapabilities.html&quot;&gt;DesiredCapabilities&lt;/a&gt; class.&lt;/p&gt;
&lt;p&gt;We have also enabled webdriver configuration via &lt;a href=&quot;http://selenium.googlecode.com/svn/tags/selenium-2.24.1/docs/api/java/org/openqa/selenium/Capabilities.html&quot;&gt;Capabilities&lt;/a&gt; interface. Now you can use the configuration as you know it from documentation of each webdriver. Use &lt;strong&gt;capability&lt;/strong&gt; prefix and camel case instead of dots in the property name to set the capability value.&lt;/p&gt;
&lt;p&gt;So assume you want to use Firefox browser and specify the path to its binary file. We know &lt;strong&gt;webdriver.firefox.bin&lt;/strong&gt; configuration property from &lt;a href=&quot;http://code.google.com/p/selenium/wiki/FirefoxDriver&quot;&gt;FirefoxDriver documention&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;filename&quot;&gt;arquillian.xml&lt;/div&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=&quot;webdriver&quot;&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;browserCapabilities&quot;&amp;gt;firefox&amp;lt;/property&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;capabilityWebdriverFirefoxBin&quot;&amp;gt;/path/to/my/firefox/installation/firefox&amp;lt;/property&amp;gt;&amp;#x000A;&amp;lt;/extension&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Reusable Session for RemoteWebDriver&lt;/h3&gt;
&lt;p&gt;To increase your productivity in test development Drone presents a new feature to reuse session from previous test execution. Skip creating a new session to save your time. You can check the speed-up in the following table. The table contains time needed to run a test (including deployment on JBoss AS 7.1.1.Final).&lt;/p&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
	&lt;tr&gt;
		&lt;td&gt;&lt;/td&gt;
		&lt;th&gt;Common Session&lt;/th&gt;
		&lt;th&gt;Reusable Session&lt;/th&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th&gt;Firefox&lt;/th&gt;
		&lt;td&gt;3.98 &amp;plusmn; 0.27 s&lt;/td&gt;
		&lt;td&gt;2.15 &amp;plusmn; 0.15 s&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th&gt;Google Chrome&lt;/th&gt;
		&lt;td&gt;4.75 &amp;plusmn; 0.03 s&lt;/td&gt;
		&lt;td&gt;2.57 &amp;plusmn; 0.05 s&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;The feature requires &lt;a href=&quot;http://code.google.com/p/selenium/downloads/list&quot;&gt;standalone selenium server&lt;/a&gt; running, &lt;strong&gt;remoteReusable&lt;/strong&gt; enabled and &lt;strong&gt;remoteAddress&lt;/strong&gt; pointed to your selenium server.&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=&quot;webdriver&quot;&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;browserCapabilities&quot;&amp;gt;firefox&amp;lt;/property&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;remoteReusable&quot;&amp;gt;true&amp;lt;/property&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;remoteAddress&quot;&amp;gt;http://localhost:4444/wd/hub&amp;lt;/property&amp;gt;&amp;#x000A;&amp;lt;/extension&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using the reusable session the browser stays open after the test completion, so all its settings are kept alive. If you need to debug your tests on the client side, you can easily prepare break points in the browser and run tests with &lt;strong&gt;remoteReusable&lt;/strong&gt; flag.&lt;/p&gt;
&lt;p&gt;After the proper configuration of reusable session &lt;a href=&quot;http://selenium.googlecode.com/svn/tags/selenium-2.24.1/docs/api/java/org/openqa/selenium/remote/RemoteWebDriver.html&quot;&gt;RemoteWebDriver&lt;/a&gt; will be chosen automatically. That means you have to use compatible types in your test code (&lt;a href=&quot;http://selenium.googlecode.com/svn/tags/selenium-2.24.1/docs/api/java/org/openqa/selenium/WebDriver.html&quot;&gt;WebDriver&lt;/a&gt; ideally).&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;public void testMethod(@Drone WebDriver driver) {&amp;#x000A;    // test code&amp;#x000A;}&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;
        &lt;a href=&quot;http://arquillian.org/modules/drone-extension/&quot;&gt;Arquillian Drone Extension&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.1.0.CR1
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-drone/commit/ec8a04877edac248ac4b37cfcf1ea324859da700.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-06-27&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Lukas Fryc&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.0.Final&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-api
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-api/1.1.0.CR1/arquillian-drone-api-1.1.0.CR1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-api/1.1.0.CR1/arquillian-drone-api-1.1.0.CR1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-bom
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-bom/1.1.0.CR1/arquillian-drone-bom-1.1.0.CR1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-configuration
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-configuration/1.1.0.CR1/arquillian-drone-configuration-1.1.0.CR1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-configuration/1.1.0.CR1/arquillian-drone-configuration-1.1.0.CR1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-impl
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-impl/1.1.0.CR1/arquillian-drone-impl-1.1.0.CR1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-impl/1.1.0.CR1/arquillian-drone-impl-1.1.0.CR1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-selenium
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium/1.1.0.CR1/arquillian-drone-selenium-1.1.0.CR1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium/1.1.0.CR1/arquillian-drone-selenium-1.1.0.CR1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-selenium-depchain
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-depchain/1.1.0.CR1/arquillian-drone-selenium-depchain-1.1.0.CR1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-selenium-server
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-server/1.1.0.CR1/arquillian-drone-selenium-server-1.1.0.CR1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-server/1.1.0.CR1/arquillian-drone-selenium-server-1.1.0.CR1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-spi
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-spi/1.1.0.CR1/arquillian-drone-spi-1.1.0.CR1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-spi/1.1.0.CR1/arquillian-drone-spi-1.1.0.CR1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-webdriver
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver/1.1.0.CR1/arquillian-drone-webdriver-1.1.0.CR1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver/1.1.0.CR1/arquillian-drone-webdriver-1.1.0.CR1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-webdriver-depchain
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver-depchain/1.1.0.CR1/arquillian-drone-webdriver-depchain-1.1.0.CR1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;6&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;Support for Reusable sessions&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Feature Request&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-847&quot;&gt;ARQ-847&lt;/a&gt; -         Support OperaDriver in Drone&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-926&quot;&gt;ARQ-926&lt;/a&gt; -         Fast development turnaround using Selenium Server and RemoteWebDriver session reusal&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-995&quot;&gt;ARQ-995&lt;/a&gt; -         Allow Arquillian Drone configuration to map java.util.Map for property values&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Task&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-868&quot;&gt;ARQ-868&lt;/a&gt; -         Update Selenium version to 2.24.1&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-970&quot;&gt;ARQ-970&lt;/a&gt; -         Drone: Merge tests for reusable remote session&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Sub-task&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-927&quot;&gt;ARQ-927&lt;/a&gt; -         Configuration for RemoteWebDriver Drone extension&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/lfryc&quot;&gt;Lukas Fryc&lt;/a&gt;, &lt;a href=&quot;https://github.com/papousek&quot;&gt;Jan PapoušEk&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/kpiwko&quot;&gt;Karel Piwko&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/06/05/arquillian-extension-byteman-1-0-0-Alpha2/</id>
    <title>Arquillian Extension Byteman 1.0.0.Alpha2 Released</title>
    <updated>2012-06-06T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/06/05/arquillian-extension-byteman-1-0-0-Alpha2/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="byteman" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha2 release of the Arquillian Extension Byteman component!
      
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.
      Release details
      
        
          
            Component
        ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha2&lt;/em&gt; release of the &lt;em&gt;Arquillian Extension Byteman&lt;/em&gt; component!&lt;/p&gt;
      
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;
        &lt;tbody&gt;
          &lt;tr&gt;
            &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/byteman-extension/&quot;&gt;Arquillian Extension Byteman&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.Alpha2
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-byteman/commit/c31a1cf7ab354b655afcb59521da0e1b9cdfd7d4.html&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-06-05&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
                &lt;li&gt;Arquillian Core &amp;#8211; 1.0.1.Final&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
        &lt;/tbody&gt;
      &lt;/table&gt;
      &lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          &amp;raquo;
          arquillian-extension-byteman
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-extension-byteman/1.0.0.Alpha2/arquillian-extension-byteman-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-extension-byteman/1.0.0.Alpha2/arquillian-extension-byteman-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
      &lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;2&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;Support for Client JVM instrumentation&lt;/p&gt;
      &lt;dl&gt;
        &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
            &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-737&quot;&gt;ARQ-737&lt;/a&gt; -         Support Byteman Rules in client mode&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/dd&gt;
      &lt;/dl&gt;
      &lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/06/01/arquillian-core-1-0-1-Final/</id>
    <title>Arquillian Core 1.0.1.Final Released</title>
    <updated>2012-06-02T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/06/01/arquillian-core-1-0-1-Final/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="platform" />
    <category scheme="http://arquillian.org/blog/tags" term="core" />
    <category scheme="http://arquillian.org/blog/tags" term="jbosscentral" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.1.Final release of the Arquillian Core component!
      The first maintenance release of the Arquillian 1.0 series is out. The release focus mainly on fixing some dependency scope problems introduced in the 1.0.0.Final Arquillian BOM.
      The following components have been upgraded, which are defined in the Arquillian BOM:
      
      	ShrinkWrap 1.0.1
      	ShrinkWrap Resolver 1.0.0-beta-7
      	ShrinkWrap Descriptors 2.0.0-alpha-3
      
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.1.Final&lt;/em&gt; release of the &lt;em&gt;Arquillian Core&lt;/em&gt; component!&lt;/p&gt;
      &lt;p&gt;The first maintenance release of the Arquillian 1.0 series is out. The release focus mainly on fixing some dependency scope problems introduced in the 1.0.0.Final Arquillian BOM.&lt;/p&gt;
      &lt;p&gt;The following components have been upgraded, which are defined in the Arquillian &lt;acronym title=&quot;Bill of Materials&quot;&gt;BOM&lt;/acronym&gt;:&lt;/p&gt;
      &lt;ul&gt;
      	&lt;li&gt;ShrinkWrap 1.0.1&lt;/li&gt;
      	&lt;li&gt;ShrinkWrap Resolver 1.0.0-beta-7&lt;/li&gt;
      	&lt;li&gt;ShrinkWrap Descriptors 2.0.0-alpha-3&lt;/li&gt;
      &lt;/ul&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;
        &lt;tbody&gt;
          &lt;tr&gt;
            &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/core-platform/&quot;&gt;Arquillian Core&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.1.Final
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://github.com/arquillian/arquillian-core/commit/d2a8b0eb0cd7d8b4e09112820b80fff1efd5bd84.html&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-06-01&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
                &lt;li&gt;ShrinkWrap Core &amp;#8211; 1.0.1&lt;/li&gt;
                &lt;li&gt;ShrinkWrap Descriptors &amp;#8211; 2.0.0-alpha-3&lt;/li&gt;
                &lt;li&gt;JUnit &amp;#8211; 4.8.1&lt;/li&gt;
                &lt;li&gt;TestNG &amp;#8211; 5.14.6&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
        &lt;/tbody&gt;
      &lt;/table&gt;
      &lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
        &lt;li&gt;
          org.jboss.arquillian
          &amp;raquo;
          arquillian-bom
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/arquillian-bom/1.0.1.Final/arquillian-bom-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.config
          &amp;raquo;
          arquillian-config-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-api/1.0.1.Final/arquillian-config-api-1.0.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-api/1.0.1.Final/arquillian-config-api-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.config
          &amp;raquo;
          arquillian-config-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-impl-base/1.0.1.Final/arquillian-config-impl-base-1.0.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-impl-base/1.0.1.Final/arquillian-config-impl-base-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.config
          &amp;raquo;
          arquillian-config-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-spi/1.0.1.Final/arquillian-config-spi-1.0.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-spi/1.0.1.Final/arquillian-config-spi-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          &amp;raquo;
          arquillian-container-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-impl-base/1.0.1.Final/arquillian-container-impl-base-1.0.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-impl-base/1.0.1.Final/arquillian-container-impl-base-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          &amp;raquo;
          arquillian-container-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-spi/1.0.1.Final/arquillian-container-spi-1.0.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-spi/1.0.1.Final/arquillian-container-spi-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          &amp;raquo;
          arquillian-container-test-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-api/1.0.1.Final/arquillian-container-test-api-1.0.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-api/1.0.1.Final/arquillian-container-test-api-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          &amp;raquo;
          arquillian-container-test-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-impl-base/1.0.1.Final/arquillian-container-test-impl-base-1.0.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-impl-base/1.0.1.Final/arquillian-container-test-impl-base-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          &amp;raquo;
          arquillian-container-test-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-spi/1.0.1.Final/arquillian-container-test-spi-1.0.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-spi/1.0.1.Final/arquillian-container-test-spi-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.core
          &amp;raquo;
          arquillian-core-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-api/1.0.1.Final/arquillian-core-api-1.0.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-api/1.0.1.Final/arquillian-core-api-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.core
          &amp;raquo;
          arquillian-core-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-impl-base/1.0.1.Final/arquillian-core-impl-base-1.0.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-impl-base/1.0.1.Final/arquillian-core-impl-base-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.core
          &amp;raquo;
          arquillian-core-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-spi/1.0.1.Final/arquillian-core-spi-1.0.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-spi/1.0.1.Final/arquillian-core-spi-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.junit
          &amp;raquo;
          arquillian-junit-container
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-container/1.0.1.Final/arquillian-junit-container-1.0.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-container/1.0.1.Final/arquillian-junit-container-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.junit
          &amp;raquo;
          arquillian-junit-core
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-core/1.0.1.Final/arquillian-junit-core-1.0.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-core/1.0.1.Final/arquillian-junit-core-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.junit
          &amp;raquo;
          arquillian-junit-standalone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-standalone/1.0.1.Final/arquillian-junit-standalone-1.0.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-standalone/1.0.1.Final/arquillian-junit-standalone-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.protocol
          &amp;raquo;
          arquillian-protocol-jmx
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-jmx/1.0.1.Final/arquillian-protocol-jmx-1.0.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-jmx/1.0.1.Final/arquillian-protocol-jmx-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.protocol
          &amp;raquo;
          arquillian-protocol-servlet
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-servlet/1.0.1.Final/arquillian-protocol-servlet-1.0.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-servlet/1.0.1.Final/arquillian-protocol-servlet-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.test
          &amp;raquo;
          arquillian-test-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-api/1.0.1.Final/arquillian-test-api-1.0.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-api/1.0.1.Final/arquillian-test-api-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.test
          &amp;raquo;
          arquillian-test-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-impl-base/1.0.1.Final/arquillian-test-impl-base-1.0.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-impl-base/1.0.1.Final/arquillian-test-impl-base-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.test
          &amp;raquo;
          arquillian-test-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-spi/1.0.1.Final/arquillian-test-spi-1.0.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-spi/1.0.1.Final/arquillian-test-spi-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          &amp;raquo;
          arquillian-testenricher-cdi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-cdi/1.0.1.Final/arquillian-testenricher-cdi-1.0.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-cdi/1.0.1.Final/arquillian-testenricher-cdi-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          &amp;raquo;
          arquillian-testenricher-ejb
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-ejb/1.0.1.Final/arquillian-testenricher-ejb-1.0.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-ejb/1.0.1.Final/arquillian-testenricher-ejb-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          &amp;raquo;
          arquillian-testenricher-initialcontext
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-initialcontext/1.0.1.Final/arquillian-testenricher-initialcontext-1.0.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-initialcontext/1.0.1.Final/arquillian-testenricher-initialcontext-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          &amp;raquo;
          arquillian-testenricher-resource
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-resource/1.0.1.Final/arquillian-testenricher-resource-1.0.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-resource/1.0.1.Final/arquillian-testenricher-resource-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testng
          &amp;raquo;
          arquillian-testng-container
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-container/1.0.1.Final/arquillian-testng-container-1.0.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-container/1.0.1.Final/arquillian-testng-container-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testng
          &amp;raquo;
          arquillian-testng-core
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-core/1.0.1.Final/arquillian-testng-core-1.0.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-core/1.0.1.Final/arquillian-testng-core-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testng
          &amp;raquo;
          arquillian-testng-standalone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-standalone/1.0.1.Final/arquillian-testng-standalone-1.0.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-standalone/1.0.1.Final/arquillian-testng-standalone-1.0.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
      &lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;5&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;Maintenance release&lt;/p&gt;
      &lt;dl&gt;
        &lt;dt&gt;Bug&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
            &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-793&quot;&gt;ARQ-793&lt;/a&gt; -         Arquillian config-impl-base is not a part of junit|testng-standalone&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-889&quot;&gt;ARQ-889&lt;/a&gt; -         Arquillian BOM causes ShrinkWrap dependencies to be included in the lib folder of a WAR archive&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/dd&gt;
      &lt;/dl&gt;
      &lt;dl&gt;
        &lt;dt&gt;Enhancement&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
            &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-846&quot;&gt;ARQ-846&lt;/a&gt; -         Protect ExceptionProxy againts Non-Serializable origin&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/dd&gt;
      &lt;/dl&gt;
      &lt;dl&gt;
        &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
            &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-971&quot;&gt;ARQ-971&lt;/a&gt; -         DeploymentGenerator should allow AuxiliaryArchiveAppenders to return null Archives&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/dd&gt;
      &lt;/dl&gt;
      &lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/blabno&quot;&gt;Bernard Labno&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/05/27/arquillian-extension-warp-1-0-0-Alpha1/</id>
    <title>Arquillian Warp 1.0.0.Alpha1 Released</title>
    <updated>2012-05-28T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/05/27/arquillian-extension-warp-1-0-0-Alpha1/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="warp" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha1 release of the Arquillian Warp component!
      
      	Have you ever wanted to test a web application using real HTTP requests, but still have the opportunity to verify server-side state and behavior?
      	Wouldn&#8217;t it be great to have the full power of Arquillian Drone, driving Selenium or WebDriver on the client, then combine that with an Arquillian in-container test?
      
      Now you can!
      Ike&#8217;s innovative army has created yet another powerful weapon for your testing arsenal, Arquillian Warp.
      Testing on both sides of the request
      Arquillian Warp fills the void between client-side and server-side testing. Using Warp, you can initiate......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha1&lt;/em&gt; release of the &lt;em&gt;Arquillian Warp&lt;/em&gt; component!&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Have you ever wanted to test a web application using &lt;em&gt;real&lt;/em&gt; HTTP requests, but still have the opportunity to verify &lt;em&gt;server-side&lt;/em&gt; state and behavior?&lt;/li&gt;
	&lt;li&gt;Wouldn&amp;#8217;t it be great to have the full power of Arquillian Drone, driving Selenium or WebDriver on the client, then combine that with an Arquillian in-container test?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Now you can!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ike&amp;#8217;s innovative army has created yet another powerful weapon for your testing arsenal, Arquillian Warp.&lt;/p&gt;
&lt;h3&gt;Testing on both sides of the request&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Arquillian Warp fills the void between client-side and server-side testing.&lt;/strong&gt; Using Warp, you can initiate an HTTP request using a client-side testing tool such as WebDriver and, &lt;em&gt;in the same request cycle&lt;/em&gt;, execute in-container server-side tests. This powerful combination lets you cover integration across client and server.&lt;/p&gt;
&lt;p&gt;Now you can send &lt;em&gt;real&lt;/em&gt; requests that execute &lt;em&gt;real&lt;/em&gt; application logic and render content in a &lt;em&gt;real&lt;/em&gt; browser and test it &lt;em&gt;end-to-end&lt;/em&gt;. Mocks? Who needs those? Imagine the debugging possibilities this opens up!&lt;/p&gt;
&lt;p&gt;This may sound like sci-fi, but it&amp;#8217;s a reality. &lt;strong&gt;It&amp;#8217;s advanced alien technology for killing real bugs that you can get your hands on today!&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;Let&amp;#8217;s warp to the code&lt;/h3&gt;
&lt;p&gt;We&amp;#8217;ll start with a normal Arquillian Drone client-side test with one enhancement, a &lt;code&gt;@WarpTest&lt;/code&gt; annotation on the test class. This extra annotation instructs Arquillian Warp to enhance the request.&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@WarpTest&amp;#x000A;@RunWith(Arquillian.class)&amp;#x000A;public class BasicWarpTest {&amp;#x000A;    @Drone&amp;#x000A;    WebDriver browser;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @ArquillianResource&amp;#x000A;    URL contextPath;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Deployment&amp;#x000A;    public static WebArchive createDeployment() { ... }&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Test&amp;#x000A;    @RunAsClient&amp;#x000A;    public void test_initial_page() {&amp;#x000A;        // triggers a HTTP request to a server&amp;#x000A;        browser.navigate().to(contextPath);&amp;#x000A;        // stay tuned...&amp;#x000A;    }&amp;#x000A;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that you can use &lt;em&gt;any HTTP client&lt;/em&gt;. For the sake of simplicity we&amp;#8217;ve used &lt;code&gt;@Drone&lt;/code&gt; to hook WebDriver (Selenium 2) into our test. Additionally, we&amp;#8217;ve declared a web archive to be tested and injected its URL into the test case.&lt;/p&gt;
&lt;p&gt;So far, we&amp;#8217;ve defined a basic Drone test. Let&amp;#8217;s start to warp this test so we can use it to test server-side logic as well. We begin by defining an implementation of &lt;code&gt;ServerAssertion&lt;/code&gt; as an inner class of the test:&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;public static class InitialRequestAssertion extends ServerAssertion {&amp;#x000A;    @Inject&amp;#x000A;    TowelBean towel;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @AfterPhase(RENDER_RESPONSE)&amp;#x000A;    public void test_initial_state() {&amp;#x000A;        // verify we are on right viewId&amp;#x000A;        assertEquals(&quot;/index.xhtml&quot;, FacesContext.getCurrentInstance().getViewRoot().getViewId());&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        // assert the bean state&amp;#x000A;        assertNull(42, towelBean.getAnswerToLife());&amp;#x000A;    }&amp;#x000A;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An object of this assertion class will be later enriched on the server (i.e., &lt;code&gt;TowelBean&lt;/code&gt; will be injected) and then the lifecycle method annotated with &lt;code&gt;@AfterPhase&lt;/code&gt; will be invoked in an appropriate phase of the request (after the response is rendered in the JSF lifecycle). This lifecycle method is effectively our server-side test.&lt;/p&gt;
&lt;p&gt;All we need to do now is hook this assertion class to the request that is initiated by the browser. To do that, we warp the Selenium call in a Warp action:&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@Test&amp;#x000A;@RunAsClient&amp;#x000A;public void test_initial_page() {&amp;#x000A;    // define the client action which will lead to HTTP request&amp;#x000A;    Warp.execute(new ClientAction() {&amp;#x000A;        public void action() {&amp;#x000A;            // the original request&amp;#x000A;            browser.navigate().to(contextPath);&amp;#x000A;        }&lt;/code&gt;&amp;#x000A;    &amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    // enhance the subsequent HTTP request with ServerAssertion&amp;#x000A;    }).verify(new InitialRequestAssertion());&amp;#x000A;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That&amp;#8217;s it! Here&amp;#8217;s how it plays out:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;The Selenium-controlled browser initiates an HTTP request&lt;/li&gt;
	&lt;li&gt;The request is trapped and enhanced with the &lt;code&gt;InitialRequestAssertion&lt;/code&gt; object (which gets added as a payload of the request)&lt;/li&gt;
	&lt;li&gt;When the request arrives at the server, the &lt;code&gt;InitialRequestAssertion&lt;/code&gt; assertion object is registered with Arquillian and the request lifecycle proceeds&lt;/li&gt;
	&lt;li&gt;After the response is rendered on the server, the &lt;code&gt;InitialRequestAssertion&lt;/code&gt; object is enriched with all the required resources (EJB beans, CDI beans, Spring beans or Arquillian resources) and the lifecycle (test) method is invoked&lt;/li&gt;
	&lt;li&gt;Once the request is complete, the &lt;code&gt;InitialRequestAssertion&lt;/code&gt; object is sent back to the client&lt;/li&gt;
	&lt;li&gt;If anything on the server-side failed (including assertions you defined), the failure is propagated back to the client and handled as a test failure&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Currently, Warp supports lifecycle callbacks for the Servlet and JSF lifecycles, but it&amp;#8217;s designed to be able to handle any server-side lifecycle.&lt;/p&gt;
&lt;h3&gt;Some of the highlights in this release&lt;/h3&gt;
&lt;dl&gt;
	&lt;dt&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Support for Servlet events&lt;/dt&gt;
	&lt;dd&gt;&lt;p&gt;Warp gives you the ability to test any Servlet lifecycle with these two lifecycle annotations:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@BeforeServlet&lt;/code&gt; &amp;#8211; triggered before the request is processed by the Servlet&lt;br /&gt;
&lt;code&gt;@AfterServlet&lt;/code&gt; &amp;#8211; triggered after the request is processed by the Servlet&lt;/p&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
	&lt;dt&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Support for JSF lifecycle events (Phaser extension)&lt;/dt&gt;
	&lt;dd&gt;&lt;p&gt;Warp&amp;#8217;s Phaser extension provides integration with the JSF lifecycle. You can use these lifecycle annotations to test the application in any JSF phase:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@BeforePhase(Phase)&lt;/code&gt; &amp;#8211; triggered before the given JSF phase is executed&lt;br /&gt;
&lt;code&gt;@AfterPhase(Phase)&lt;/code&gt; &amp;#8211; triggered after the given JSF phase is executed&lt;/p&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
	&lt;dt&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Compatible with any HTTP client&lt;/dt&gt;
	&lt;dd&gt;&lt;p&gt;Warp works with any HTTP client: Selenium, HtmlUnit, HttpUnit, REST client, JavaScript test, Android device. No boundaries here!&lt;/p&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
	&lt;dt&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Open to more protocols&lt;/dt&gt;
	&lt;dd&gt;&lt;p&gt;Only the HTTP protocol is supported currently, but other protocols can be supported as well! (An SPI will be defined in a later releases)&lt;/p&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
	&lt;dt&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Open to more frameworks&lt;/dt&gt;
	&lt;dd&gt;&lt;p&gt;Warp is designed to support any server-side web framework based on the Servlets API&lt;/p&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3&gt;Need to know more?&lt;/h3&gt;
&lt;p&gt;You can find the complete Maven-based sample usage in the &lt;a href=&quot;https://github.com/arquillian/arquillian-showcase/tree/master/warp&quot;&gt;Arquillian Showcase&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Additionally, you can look at the functional tests in the Warp test suite:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://github.com/arquillian/arquillian-extension-warp/blob/1.0.0.Alpha1/ftest/src/test/java/org/jboss/arquillian/warp/ftest/WarpBasicTest.java&quot;&gt;Servlet integration&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://github.com/arquillian/arquillian-extension-warp/blob/1.0.0.Alpha1/extension/phaser-ftest/src/test/java/org/jboss/arquillian/warp/extension/phaser/ftest/PhaserBasicTest.java&quot;&gt;Phaser (JSF) integration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Roadmap&lt;/h3&gt;
&lt;p&gt;In future releases, we&amp;#8217;ll be looking into further improving the extension, most notably by providing framework-specific enrichments:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Injectable &lt;code&gt;HttpServletRequest&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;Injectable &lt;code&gt;FacesContext&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Warp offers many possibilities for integration:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Support for wide range of &lt;strong&gt;server-side web frameworks&lt;/strong&gt; (Wicket, Vaadin, GWT, Tapestry, &amp;#8230;)&lt;/li&gt;
	&lt;li&gt;Support for &lt;strong&gt;alternative protocols&lt;/strong&gt; (WebSockets)&lt;/li&gt;
	&lt;li&gt;Built-in support for variety of &lt;strong&gt;client-side testing tools&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Call to action&lt;/h3&gt;
&lt;p&gt;If you would like to have support for your favorite web framework, you see features that are missing or you can see room for improvement, don&amp;#8217;t hesitate and come to the &lt;a href=&quot;http://community.jboss.org/en/arquillian/dev?view=discussions&quot;&gt;Arquillian forums&lt;/a&gt; or the #jbosstesting channel on Freenode IRC!&lt;/p&gt;
&lt;p&gt;We would love to hear your ideas and feedback for how to stretch Warp to reach beyond the boundaries of the test galaxy!&lt;/p&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;
        &lt;a href=&quot;http://arquillian.org/modules/warp-extension/&quot;&gt;Arquillian Warp&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.0.0.Alpha1
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-warp/commit/d3496a6141433059c30d10ce7e944a327b405107.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-05-24&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Lukas Fryc&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.0.Final&lt;/li&gt;
          &lt;li&gt;ShrinkWrap Resolvers &amp;#8211; 2.0.0-alpha-1&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-warp-api
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-api/1.0.0.Alpha1/arquillian-warp-api-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-api/1.0.0.Alpha1/arquillian-warp-api-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-warp-bom
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-bom/1.0.0.Alpha1/arquillian-warp-bom-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-warp-build-resources
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-build-resources/1.0.0.Alpha1/arquillian-warp-build-resources-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-build-resources/1.0.0.Alpha1/arquillian-warp-build-resources-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-warp-ftest
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-ftest/1.0.0.Alpha1/arquillian-warp-ftest-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-ftest/1.0.0.Alpha1/arquillian-warp-ftest-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-warp-impl
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-impl/1.0.0.Alpha1/arquillian-warp-impl-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-impl/1.0.0.Alpha1/arquillian-warp-impl-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-warp-phaser
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-phaser/1.0.0.Alpha1/arquillian-warp-phaser-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-phaser/1.0.0.Alpha1/arquillian-warp-phaser-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-warp-phaser-ftest
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-phaser-ftest/1.0.0.Alpha1/arquillian-warp-phaser-ftest-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-phaser-ftest/1.0.0.Alpha1/arquillian-warp-phaser-ftest-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-warp-spi
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-spi/1.0.0.Alpha1/arquillian-warp-spi-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-spi/1.0.0.Alpha1/arquillian-warp-spi-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;9&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;First Release of Warp Extension&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Bug&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-935&quot;&gt;ARQ-935&lt;/a&gt; -         Should handle de-enrich of final fields&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-943&quot;&gt;ARQ-943&lt;/a&gt; -         Should be able to detect Serialization problems&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Enhancement&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-931&quot;&gt;ARQ-931&lt;/a&gt; -         Warp: Define API/SPI&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-933&quot;&gt;ARQ-933&lt;/a&gt; -         Warp: server exception propagation&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-948&quot;&gt;ARQ-948&lt;/a&gt; -         Make the ServerAssertion abstract class to ensure future compatibility&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-955&quot;&gt;ARQ-955&lt;/a&gt; -         Warp: Define BOM&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Feature Request&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-578&quot;&gt;ARQ-578&lt;/a&gt; -         Create a Extension for handling Server State assertion during normal Servlet/JSF requests&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-957&quot;&gt;ARQ-957&lt;/a&gt; -         Add Warp Showcase sample&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/lfryc&quot;&gt;Lukas Fryc&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/kenfinni&quot;&gt;Ken Finnigan&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/05/24/arquillian-graphene-2-0-0-Alpha1/</id>
    <title>Graphene 2.0.0.Alpha1 Released</title>
    <updated>2012-05-25T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/05/24/arquillian-graphene-2-0-0-Alpha1/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="graphene" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 2.0.0.Alpha1 release of the Graphene component!
      
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.
      Release details
      
        
          
            Component
          ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;2.0.0.Alpha1&lt;/em&gt; release of the &lt;em&gt;Graphene&lt;/em&gt; component!&lt;/p&gt;
      
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;
        &lt;tbody&gt;
          &lt;tr&gt;
            &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/graphene-extension/&quot;&gt;Graphene&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              2.0.0.Alpha1
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://github.com/arquillian/arquillian-graphene/commit/5ee2189f85ec1d93f2de7674d29592096abe26dd.html&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-05-24&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Lukas Fryc&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
                &lt;li&gt;Arquillian Core &amp;#8211; 1.0.0.Final&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
        &lt;/tbody&gt;
      &lt;/table&gt;
      &lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.graphene&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          &amp;raquo;
          graphene-build-resources
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-build-resources/2.0.0.Alpha1/graphene-build-resources-2.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-build-resources/2.0.0.Alpha1/graphene-build-resources-2.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          &amp;raquo;
          graphene-selenium-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-api/2.0.0.Alpha1/graphene-selenium-api-2.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-api/2.0.0.Alpha1/graphene-selenium-api-2.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          &amp;raquo;
          graphene-selenium-drone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-drone/2.0.0.Alpha1/graphene-selenium-drone-2.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-drone/2.0.0.Alpha1/graphene-selenium-drone-2.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          &amp;raquo;
          graphene-selenium-ftest-junit-container
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-junit-container/2.0.0.Alpha1/graphene-selenium-ftest-junit-container-2.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-junit-container/2.0.0.Alpha1/graphene-selenium-ftest-junit-container-2.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          &amp;raquo;
          graphene-selenium-ftest-junit-standalone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-junit-standalone/2.0.0.Alpha1/graphene-selenium-ftest-junit-standalone-2.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-junit-standalone/2.0.0.Alpha1/graphene-selenium-ftest-junit-standalone-2.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          &amp;raquo;
          graphene-selenium-ftest-testng-container
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-testng-container/2.0.0.Alpha1/graphene-selenium-ftest-testng-container-2.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-testng-container/2.0.0.Alpha1/graphene-selenium-ftest-testng-container-2.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          &amp;raquo;
          graphene-selenium-ftest-testng-standalone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-testng-standalone/2.0.0.Alpha1/graphene-selenium-ftest-testng-standalone-2.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-testng-standalone/2.0.0.Alpha1/graphene-selenium-ftest-testng-standalone-2.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          &amp;raquo;
          graphene-selenium-impl
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-impl/2.0.0.Alpha1/graphene-selenium-impl-2.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-impl/2.0.0.Alpha1/graphene-selenium-impl-2.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          &amp;raquo;
          graphene-webdriver-drone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-drone/2.0.0.Alpha1/graphene-webdriver-drone-2.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-drone/2.0.0.Alpha1/graphene-webdriver-drone-2.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          &amp;raquo;
          graphene-webdriver-ftest
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-ftest/2.0.0.Alpha1/graphene-webdriver-ftest-2.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-ftest/2.0.0.Alpha1/graphene-webdriver-ftest-2.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          &amp;raquo;
          graphene-webdriver-impl
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-impl/2.0.0.Alpha1/graphene-webdriver-impl-2.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-impl/2.0.0.Alpha1/graphene-webdriver-impl-2.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
      &lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;3&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;&lt;/p&gt;
      &lt;dl&gt;
        &lt;dt&gt;Enhancement&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
            &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-136&quot;&gt;ARQGRA-136&lt;/a&gt; -         Replace mockito dependency with cglib&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/dd&gt;
      &lt;/dl&gt;
      &lt;dl&gt;
        &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
            &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-56&quot;&gt;ARQGRA-56&lt;/a&gt; -         Support Thread-Local Context with Selenium 2&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/dd&gt;
      &lt;/dl&gt;
      &lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/lfryc&quot;&gt;Lukas Fryc&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/05/21/arquillian-extension-spring-1-0-0-Alpha1/</id>
    <title>Arquillian Spring Framework Extension 1.0.0.Alpha1 Released</title>
    <updated>2012-05-22T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/05/21/arquillian-extension-spring-1-0-0-Alpha1/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="gsoc" />
    <category scheme="http://arquillian.org/blog/tags" term="gsoc" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="spring" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha1 release of the Arquillian Spring Framework Extension component!
We&#8217;re moving the boundaries of Arquillian into a completely new area by including built-in support for testing applications that use the Spring Framework. This release is the first milestone for this extension. The focus so far has been on providing support for Spring&#8217;s core features (e.g., IoC container, data sources, persistence, transactions, javax.inject and EJB integration, etc.).
I&#8217;m working on the Spring extension for my Google Summer of Code 2012 project. This post also serves as my first status update. Coding began yesterday, but I&#8217;ve......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha1&lt;/em&gt; release of the &lt;em&gt;Arquillian Spring Framework Extension&lt;/em&gt; component!&lt;/p&gt;
&lt;p&gt;We&amp;#8217;re moving the boundaries of Arquillian into a completely new area by including built-in support for testing applications that use the &lt;a href=&quot;http://springsource.org&quot;&gt;Spring Framework&lt;/a&gt;. This release is the first milestone for this extension. The focus so far has been on providing support for Spring&amp;#8217;s core features (e.g., IoC container, data sources, persistence, transactions, javax.inject and EJB integration, etc.).&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m working on the Spring extension for my &lt;a href=&quot;http://www.google-melange.com/gsoc/project/google/gsoc2012/jnarloch/41002&quot;&gt;Google Summer of Code 2012 project&lt;/a&gt;. This post also serves as my first status update. Coding began yesterday, but I&amp;#8217;ve already been hard at work ;)&lt;/p&gt;
&lt;h3 class=&quot;highlights&quot;&gt;Some of the highlights in this release&lt;/h3&gt;
&lt;dl&gt;
	&lt;dt&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Dependency injection&lt;/dt&gt;
	&lt;dd&gt;&lt;p&gt;The extension provides three simple ways to enable Spring support in Arquillian test case. In other to create application context from XML simply add to the test &lt;code&gt;@SpringConfiguration&lt;/code&gt; with locations of the XML files. Java-based config is supported as well with &lt;code&gt;@SpringAnnotatedConfiguration&lt;/code&gt; which can be configured with concrete classes or names of packages to scan. The last possibility, &lt;code&gt;@SpringWebConfiguration&lt;/code&gt; that allows to retrieve the application context of the specific DispatcherServlet running in the container, can be used only with web applications.&lt;/p&gt;&lt;/dd&gt;
	&lt;dt&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Custom context classes&lt;/dt&gt;
	&lt;dd&gt;&lt;p&gt;There are situations when plain Spring context isn&amp;#8217;t enough, so we allowed to register custom context classes that will be instantiated for each test. The context classes could be customized through annotations or through extension settings provided with arquillian.xml. A typical scenario would be for example running the Spring in JBoss AS using &lt;a href=&quot;http://jboss.org/snowdrop&quot;&gt;Snowdrop&lt;/a&gt; custom context classes.&lt;/p&gt;&lt;/dd&gt;
	&lt;dt&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Artifact packaging&lt;/dt&gt;
	&lt;dd&gt;&lt;p&gt;The extension, by default, handles packaging of spring-context and spring-web automatically with each test.&lt;/p&gt;&lt;/dd&gt;
	&lt;dt&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Intuitive configuration&lt;/dt&gt;
	&lt;dd&gt;&lt;p&gt;The extension can be easily configured through the arquillian.xml. All the settings like e.g. artifacts versions can be overridden here.&lt;/p&gt;
&lt;div class=&quot;filename&quot;&gt;arquillian.xml&lt;/div&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=&quot;spring&quot;&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;autoPackage&quot;&amp;gt;true&amp;lt;/property&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;springVersion&quot;&amp;gt;3.0.0.RELEASE&amp;lt;/property&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;cglibVersion&quot;&amp;gt;2.2&amp;lt;/property&amp;gt;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    &amp;lt;property name=&quot;includeSnowdrop&quot;&amp;gt;true&amp;lt;/property&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;snowdropVersion&quot;&amp;gt;2.0.3.Final&amp;lt;/property&amp;gt;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    &amp;lt;property name=&quot;customContextClass&quot;&amp;gt;org.jboss.spring.vfs.context.VFSClassPathXmlApplicationContext&amp;lt;/property&amp;gt;&amp;#x000A;&amp;lt;/extension&amp;gt; &lt;/code&gt;&lt;/pre&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Here&amp;#8217;s an example of a basic Spring test with Arquillian:&lt;/p&gt;
&lt;div class=&quot;filename&quot;&gt;DefaultStockRepositoryTestCase.java&lt;/div&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@RunWith(Arquillian.class)&amp;#x000A;@SpringConfiguration(&quot;applicationContext.xml&quot;)&amp;#x000A;public class DefaultStockRepositoryTestCase {&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Deployment&amp;#x000A;    public static JavaArchive createTestArchive() {&amp;#x000A;        return ShrinkWrap.create(JavaArchive.class)&amp;#x000A;                .addClasses(Stock.class, StockRepository.class, StockService.class,&amp;#x000A;                        DefaultStockRepository.class, DefaultStockService.class)&amp;#x000A;                .addAsResource(&quot;applicationContext.xml&quot;);&amp;#x000A;    }&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Autowired&amp;#x000A;    StockRepository stockRepository;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Test&amp;#x000A;    public void testSave() {&amp;#x000A;        Stock acme = createStock(&quot;Acme&quot;, &quot;ACM&quot;, 123.21D, new Date());&amp;#x000A;        Stock redhat = createStock(&quot;Red Hat&quot;, &quot;RHC&quot;, 59.61D, new Date());&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        stockRepository.save(acme);&amp;#x000A;        stockRepository.save(redhat);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        assertTrue(&quot;The stock id hasn't been assigned.&quot;, acme.getId() &amp;gt; 0);&amp;#x000A;        assertTrue(&quot;The stock id hasn't been assigned.&quot;, redhat.getId() &amp;gt; 0);&amp;#x000A;    }&amp;#x000A;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For more examples on how to use these extensions and quickly get started with development you can take a look at prepared &lt;a href=&quot;https://github.com/arquillian/arquillian-showcase/tree/master/spring&quot;&gt;showcase&lt;/a&gt;. Additionally, you can browse the &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-spring&quot;&gt;integration tests&lt;/a&gt; that are part of project source code.&lt;/p&gt;
&lt;p&gt;For help with preparing this release, I&amp;#8217;d like to especially thank &lt;a href=&quot;profile://dan.j.allen&quot;&gt;Dan Allen&lt;/a&gt;, &lt;a href=&quot;profile://marius.bogoevici&quot;&gt;Marius Bogoevici&lt;/a&gt; and &lt;a href=&quot;profile://aslak&quot;&gt;Aslak Knutsen&lt;/a&gt; for sharing their knowledge and providing helping hand.&lt;/p&gt;
&lt;p&gt;We look forward to hearing your feedback about this release in the &lt;a href=&quot;http://community.jboss.org/en/arquillian&quot;&gt;community forums&lt;/a&gt;!&lt;/p&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;
        &lt;a href=&quot;http://arquillian.org/modules/spring-extension/&quot;&gt;Arquillian Spring Framework Extension&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.0.0.Alpha1
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-spring/commit/76b87c61566c28d16b0d6c9abe34bf6ac6b5ae1e.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-05-21&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Aslak Knutsen&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.0.Final&lt;/li&gt;
          &lt;li&gt;JUnit &amp;#8211; 4.8.1&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-service-deployer-spring-2.5
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-2.5/1.0.0.Alpha1/arquillian-service-deployer-spring-2.5-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-2.5/1.0.0.Alpha1/arquillian-service-deployer-spring-2.5-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-service-deployer-spring-3
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-3/1.0.0.Alpha1/arquillian-service-deployer-spring-3-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-3/1.0.0.Alpha1/arquillian-service-deployer-spring-3-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-service-deployer-spring-common
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-common/1.0.0.Alpha1/arquillian-service-deployer-spring-common-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-common/1.0.0.Alpha1/arquillian-service-deployer-spring-common-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;2&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;Support for Spring enrichment in other Containers&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Feature Request&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-301&quot;&gt;ARQ-301&lt;/a&gt; -         Create a Spring framework integration (for non-standalone containers)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/jmnarloch&quot;&gt;Jakub Narloch&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/05/08/arquillian-extension-portal-1-0-0-Alpha1/</id>
    <title>Arquillian Portal Extension 1.0.0.Alpha1 Released</title>
    <updated>2012-05-09T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/05/08/arquillian-extension-portal-1-0-0-Alpha1/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="portal" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha1 release of the Arquillian Portal Extension component!
      This is the first release of a new Arquillian Extension for assisting in the complex task of testing portlets in a portal environment.
      Some of the highlights in this release
      
      	 Portal URL resource
      	
      	The SPI provides PortalURLProvider for portal specific implementations to provide a different URL when injecting a @ArquillianResource of type URL into a test. All that is required to use it is add @PortalURL onto the injection point, it&#8217;s that simple.
      	 Additional portal deployments
      	
      	The SPI provides PortalContainerDeploymentProvider for portal specific implementations to provide additional deployments......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha1&lt;/em&gt; release of the &lt;em&gt;Arquillian Portal Extension&lt;/em&gt; component!&lt;/p&gt;
&lt;p&gt;This is the first release of a new Arquillian Extension for assisting in the complex task of testing portlets in a portal environment.&lt;/p&gt;
&lt;h3 class=&quot;highlights&quot;&gt;Some of the highlights in this release&lt;/h3&gt;
&lt;dl&gt;
	&lt;dt&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Portal URL resource&lt;/dt&gt;
	&lt;dd&gt;&lt;/dd&gt;
	&lt;dd&gt;The SPI provides &lt;code&gt;PortalURLProvider&lt;/code&gt; for portal specific implementations to provide a different URL when injecting a &lt;code&gt;@ArquillianResource&lt;/code&gt; of type &lt;code&gt;URL&lt;/code&gt; into a test. All that is required to use it is add &lt;code&gt;@PortalURL&lt;/code&gt; onto the injection point, it&amp;#8217;s that simple.&lt;/dd&gt;
	&lt;dt&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Additional portal deployments&lt;/dt&gt;
	&lt;dd&gt;&lt;/dd&gt;
	&lt;dd&gt;The SPI provides &lt;code&gt;PortalContainerDeploymentProvider&lt;/code&gt; for portal specific implementations to provide additional deployments that are required by the container to initiate the portal.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Currently there are two implementations of this extension for use with &lt;a href=&quot;https://github.com/jbossportletbridge/pluto-testing&quot;&gt;Pluto&lt;/a&gt; and &lt;a href=&quot;https://github.com/jbossportletbridge/gatein-testing&quot;&gt;GateIn&lt;/a&gt; portal containers.&lt;/p&gt;
&lt;p&gt;For examples on how to use these extensions with their respective portal containers, you can take a look at the &lt;a href=&quot;https://github.com/jbossportletbridge/jbossportletbridge/tree/master/testsuites&quot;&gt;testsuite&lt;/a&gt; of JBoss Portlet Bridge.&lt;/p&gt;
&lt;p&gt;We look forward to hearing your feedback about this release in the &lt;a href=&quot;http://community.jboss.org/en/arquillian&quot;&gt;community forums&lt;/a&gt;!&lt;/p&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;
        &lt;a href=&quot;http://arquillian.org/modules/portal-extension/&quot;&gt;Arquillian Portal Extension&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.0.0.Alpha1
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-portal/commit/9ebfab1a51aae4470a53d02e72536b57575a7a4b.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-05-08&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Ken Finnigan&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.0.Final&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-portal-api
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-api/1.0.0.Alpha1/arquillian-portal-api-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-api/1.0.0.Alpha1/arquillian-portal-api-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-portal-impl-base
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-impl-base/1.0.0.Alpha1/arquillian-portal-impl-base-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-impl-base/1.0.0.Alpha1/arquillian-portal-impl-base-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-portal-spi
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-spi/1.0.0.Alpha1/arquillian-portal-spi-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-spi/1.0.0.Alpha1/arquillian-portal-spi-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;4&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;First Release of Portal Extension&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Task&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-902&quot;&gt;ARQ-902&lt;/a&gt; -         Add README to portal extension project&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-903&quot;&gt;ARQ-903&lt;/a&gt; -         Update pom.xml with missing information&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-904&quot;&gt;ARQ-904&lt;/a&gt; -         Update license to ASLv2&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/kenfinni&quot;&gt;Ken Finnigan&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/04/24/arquillian-extension-jacoco-1-0-0-Alpha3/</id>
    <title>Arquillian Extension Jacoco 1.0.0.Alpha3 Released</title>
    <updated>2012-04-25T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/04/24/arquillian-extension-jacoco-1-0-0-Alpha3/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="jacoco" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha3 release of the Arquillian Extension Jacoco component!
      
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.
      Release details
      
        
          
            Component
        ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha3&lt;/em&gt; release of the &lt;em&gt;Arquillian Extension Jacoco&lt;/em&gt; component!&lt;/p&gt;
      
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;
        &lt;tbody&gt;
          &lt;tr&gt;
            &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/jacoco-extension/&quot;&gt;Arquillian Extension Jacoco&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.Alpha3
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-jacoco/commit/9d51814046cc8272c3413d226a0b958d1ffc8292.html&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-04-24&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
                &lt;li&gt;Arquillian Core &amp;#8211; 1.0.0.Final&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
        &lt;/tbody&gt;
      &lt;/table&gt;
      &lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          &amp;raquo;
          arquillian-jacoco
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-jacoco/1.0.0.Alpha3/arquillian-jacoco-1.0.0.Alpha3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-jacoco/1.0.0.Alpha3/arquillian-jacoco-1.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
      &lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;2&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;Upgrade Jacoco version&lt;/p&gt;
      &lt;dl&gt;
        &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
            &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-738&quot;&gt;ARQ-738&lt;/a&gt; -         Update integration Jacoco integration to 0.5.6 level&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/dd&gt;
      &lt;/dl&gt;
      &lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://github.com/samaxes&quot;&gt;Samuel Santos&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/04/23/bug-killing-proposals-accepted-for-gsoc2012/</id>
    <title>Bug killing proposals accepted for 2012 Google Summer of Code!</title>
    <updated>2012-04-24T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/04/23/bug-killing-proposals-accepted-for-gsoc2012/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="gsoc" />
    <category scheme="http://arquillian.org/blog/tags" term="jboss" />
    <category scheme="http://arquillian.org/blog/tags" term="announcement" />
    <category scheme="http://arquillian.org/blog/tags" term="2012" />
    <category scheme="http://arquillian.org/blog/tags" term="nonrelease" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
       The much anticipated announcement about which students were selected to participate in the 2012 Google Summer of Code program was published earlier today. In total, there are 1,212 students participating. We&#8217;d like to congratulate all the students accepted and wish you all best of luck this summer!
The JBoss Community is proud to be participating as an independent mentor organization for the first time this year. We were selected thanks to a strong showing of volunteer mentors and an overwhelming number of compelling and creative ideas. More than half of the ideas came from the Arquillian community 
I&#8217;d like to......
    </summary>
    <content type="html">
      &lt;p&gt;&lt;img src=&quot;http://arquillian.org/images/blog/gsoc2012_official_350.jpg&quot; class=&quot;pull-right&quot; alt=&quot;&quot; /&gt; The &lt;a href=&quot;http://google-opensource.blogspot.com/2012/04/students-announced-for-google-summer-of.html&quot;&gt;much anticipated announcement&lt;/a&gt; about which students were selected to participate in the &lt;a href=&quot;http://www.google-melange.com/gsoc/homepage/google/gsoc2012&quot;&gt;2012 Google Summer of Code program&lt;/a&gt; was published earlier today. In total, there are 1,212 students participating. We&amp;#8217;d like to congratulate all the students accepted and wish you all best of luck this summer!&lt;/p&gt;
&lt;p&gt;The JBoss Community is proud to be participating as an independent mentor organization for the first time this year. We were selected thanks to a strong showing of volunteer mentors and an &lt;a href=&quot;https://community.jboss.org/wiki/GSoC12Ideas&quot;&gt;overwhelming number of compelling and creative ideas&lt;/a&gt;. More than half of the ideas came from the Arquillian community &lt;img src=&quot;http://arquillian.org/images/emoticons/smile.png&quot; alt=&quot;:)&quot; class=&quot;emoticon&quot; /&gt;&lt;/p&gt;
&lt;p&gt;I&amp;#8217;d like to extend a big &lt;strong&gt;thank you&lt;/strong&gt; to everyone who came forward with ideas. Acceptances aside, these ideas are already helping shape the future of the various JBoss projects.&lt;/p&gt;
&lt;h3&gt;Accepted projects&lt;/h3&gt;
&lt;p&gt;The Arquillian project is excited to announce that we have 2 students participating this year!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://arquillian.org/images/blog/gsoc2012_jboss_480.jpg&quot; style=&quot;margin-top: 6px;&quot; class=&quot;pull-left&quot; alt=&quot;&quot; /&gt; Google granted the JBoss Community 8 student slots. From those 8 slots, Arquillian was allotted 2 slots&amp;#8212;far less than the number of excellent proposals submitted. After much agonizing over the decision for the last week, the Arquillian mentors decided to award the slots to the following two student proposals:&lt;/p&gt;
&lt;h4&gt;Project #1&lt;/h4&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
	&lt;tr&gt;
		&lt;th style=&quot;width: 20%;&quot;&gt;Title&lt;/th&gt;
		&lt;td&gt;Extend Arquillian to support Spring testing (beans and MVC controllers)&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th&gt;Student&lt;/th&gt;
		&lt;td&gt;&lt;a href=&quot;profile://jmnarloch&quot;&gt;Jakub Narloch&lt;/a&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th&gt;Mentor&lt;/th&gt;
		&lt;td&gt;&lt;a href=&quot;profile://marius.bogoevici&quot;&gt;Marius Bogoevici&lt;/a&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th&gt;Summary&lt;/th&gt;
		&lt;td&gt;Arquillian provides an extensible testing platform that can be used for testing any type of Java-based component. The initial focus for Arquillian was testing Java EE components, such as CDI beans, EJBs and JPA. However, Arquillian provides all the infrastructure and hooks necessary to make it an ideal testing platform for Spring applications. So the main of this project would be introducing suport for Spring testing.&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h4&gt;Project #2&lt;/h4&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
	&lt;tr&gt;
		&lt;th style=&quot;width: 20%;&quot;&gt;Title&lt;/th&gt;
		&lt;td&gt;Automated Visual Verification&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th&gt;Student&lt;/th&gt;
		&lt;td&gt;&lt;a href=&quot;profile://fafnir88&quot;&gt;Jakub Dunia&lt;/a&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th&gt;Mentor&lt;/th&gt;
		&lt;td&gt;&lt;a href=&quot;profile://lfryc&quot;&gt;Lukas Fryc&lt;/a&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th&gt;Summary&lt;/th&gt;
		&lt;td&gt;Testing is important part of development. It is a procedure we need to perform many times, that is why there are many tools to automate it. There are cases where it is not that easy, like Visual Verification. Normally we need real person to check whether the web page looks good or not. The goal of this project is to write a tool that allows to easily review set of automatically collected screenshots generated by tests, and also improve existing comparision algorithms.&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;Jakub Narloch is already well on his way to bringing Spring testing support to Arquillian having implemented a prototype. You can read about the status of his prototype in the &lt;a href=&quot;https://community.jboss.org/thread/197356&quot;&gt;GSoC &amp;#8211; Arquillian Spring integration&lt;/a&gt; forum thread.&lt;/p&gt;
&lt;p&gt;Jakub Dunia, with his insight into problem solving, has already demonstrated he&amp;#8217;ll be invaluable member of our community. The project he has chosen to support is extremely innovative, not only in scope of Arquillian, but in UI testing in general.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Congratulations Jakub * 2!&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;There&amp;#8217;s an additional testing-related proposal, sponsored by the Errai team, that was also accepted:&lt;/p&gt;
&lt;h4&gt;Project #3&lt;/h4&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
	&lt;tr&gt;
		&lt;th style=&quot;width: 20%;&quot;&gt;Title&lt;/th&gt;
		&lt;td&gt;A Jenkins plugin to visualize Jacoco code coverage reports&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th&gt;Student&lt;/th&gt;
		&lt;td&gt;&lt;a href=&quot;profile://ognjenb&quot;&gt;Ognjen Bubalo&lt;/a&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th&gt;Mentor&lt;/th&gt;
		&lt;td&gt;&lt;a href=&quot;profile://jfuerth&quot;&gt;Jonathan Fuerth&lt;/a&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;th&gt;Summary&lt;/th&gt;
		&lt;td&gt;JaCoCo is a tool which generates code coverage reports based on Java unit tests. The project is about writing a Jenkins plugin to visualize JaCoCo code coverage reports.&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;&lt;b&gt;Congratulations Ognjen!&lt;/b&gt;&lt;/p&gt;
&lt;h4&gt;Next steps&lt;/h4&gt;
&lt;p&gt;Jakub, Jakub and Ognjen, please contact your mentors immediately. Make a plan to communicate with your mentor regularly, at minimum, once each week. Since we&amp;#8217;re big believers in openness, the best way to keep in touch is through a public channel such as the &lt;a href=&quot;http://community.jboss.org/en/arquillian/dev?view=discussions&quot;&gt;Arquillian development forum&lt;/a&gt; or the #jbosstesting channel on Freenode IRC.&lt;/p&gt;
&lt;p&gt;We plan to publish status reports on these projects here at &lt;a href=&quot;http://arquillian.org&quot;&gt;arquillian.org&lt;/a&gt; to allow the community to follow your progress and provide feedback. For those watching, stay tuned!&lt;/p&gt;
&lt;h3&gt;Promising proposals&lt;/h3&gt;
&lt;p&gt;Although we could only accept two proposals, there were &lt;em&gt;many&lt;/em&gt; well-written proposals that truly deserved a slot (if only we had more to give). I&amp;#8217;d like to thank the students for the time they spent preparing and submitting the proposals by highlighting them here. The rating shown under each proposal is the average rating (out of 5) given by the JBoss mentors who voted.&lt;/p&gt;
&lt;dl&gt;
	&lt;dt&gt;Unleash the Jester on integration tests by adding support for mutation testing in Arquillian&lt;/dt&gt;
	&lt;dd&gt;&lt;p&gt;&lt;strong&gt;Student:&lt;/strong&gt; Adam Sznajder&lt;br /&gt;
&lt;strong&gt;Rating:&lt;/strong&gt; 5 / 5&lt;/p&gt;&lt;/dd&gt;
	&lt;dt&gt;Server-Side Performance Testing Framework reusing Arquillian Core&lt;/dt&gt;
	&lt;dd&gt;&lt;p&gt;&lt;strong&gt;Student:&lt;/strong&gt; Oliver Kišš&lt;br /&gt;
&lt;strong&gt;Rating:&lt;/strong&gt; 4.8 / 5&lt;/p&gt;&lt;/dd&gt;
	&lt;dt&gt;RushEye Manager for Automated Visual Verification&lt;/dt&gt;
	&lt;dd&gt;&lt;p&gt;&lt;strong&gt;Student:&lt;/strong&gt; Udesh Liyanaarachchi&lt;br /&gt;
&lt;strong&gt;Rating:&lt;/strong&gt; 4.5 / 5&lt;/p&gt;&lt;/dd&gt;
	&lt;dt&gt;Integrate Robotium into Arquillian Drone and Android extensions for complete automated application testing on Android&lt;/dt&gt;
	&lt;dd&gt;&lt;p&gt;&lt;strong&gt;Student:&lt;/strong&gt; Aleksey Shilin&lt;br /&gt;
&lt;strong&gt;Rating:&lt;/strong&gt; 4.25 / 5&lt;/p&gt;&lt;/dd&gt;
	&lt;dt&gt;Provide an object-oriented format for defining test data for the Arquillian Persistence Extension&lt;/dt&gt;
	&lt;dd&gt;&lt;p&gt;&lt;strong&gt;Student:&lt;/strong&gt; Martin Skurla&lt;br /&gt;
&lt;strong&gt;Rating:&lt;/strong&gt; 4 / 5&lt;/p&gt;&lt;/dd&gt;
	&lt;dt&gt;Automate JavaScript tests in an integration environment using Arquillian&lt;/dt&gt;
	&lt;dd&gt;&lt;p&gt;&lt;strong&gt;Student:&lt;/strong&gt; Chaitanya Nalla&lt;br /&gt;
&lt;strong&gt;Rating:&lt;/strong&gt; 3.67 / 5&lt;/p&gt;&lt;/dd&gt;
	&lt;dt&gt;Provide an object-oriented format for defining test data for the Arquillian Persistence Extension&lt;/dt&gt;
	&lt;dd&gt;&lt;p&gt;&lt;strong&gt;Student:&lt;/strong&gt; Houssem&lt;br /&gt;
&lt;strong&gt;Rating:&lt;/strong&gt; 3.67 / 5&lt;/p&gt;&lt;/dd&gt;
	&lt;dt&gt;Integrate Sahi into Arquillian Drone for automated browser testing&lt;/dt&gt;
	&lt;dd&gt;&lt;p&gt;&lt;strong&gt;Student:&lt;/strong&gt; Asanka Amarasinghe&lt;br /&gt;
&lt;strong&gt;Rating:&lt;/strong&gt; 3.5 / 5&lt;/p&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Despite the fact that these proposals were not accepted into GSoC, we &lt;em&gt;really&lt;/em&gt; want to see them pursued. We view this program as an opportunity to interact with the next generation of the JBoss Community and to help them discover, or reinforce, their passion for open source. In fact, several students, including Chaitanya Nalla, have already expressed interest in contributing to Arquillian despite not being accepted to GSoC. That&amp;#8217;s the spirit!&lt;/p&gt;
&lt;p&gt;As Anil mentioned on the &lt;a href=&quot;http://lists.jboss.org/pipermail/gsoc/2012-April/000100.html&quot;&gt;JBoss GSoC mailinglist&lt;/a&gt;, we&amp;#8217;re exploring a diverse approach to enable students to continue their proposals, ranging from Red Hat summer internships to community-supported projects. Our plan is to closely track the GSoC schedule to keep the projects on track and to give you, the students, the experience the comes with completing a summer project (and likely increase your chance of being awarded a slot next year). Stay tuned for details.&lt;/p&gt;
&lt;h4&gt;What&amp;#8217;s next?&lt;/h4&gt;
&lt;p&gt;Keep an eye on this blog for periodic progress reports about the GSoC student projects and any additional non-GSoC summer projects.&lt;/p&gt;
&lt;p&gt;The first milestone is May 21st, when coding officially begins (trust me, these guys will be way ahead of that scheduled date). The mid-term evaluations happen mid July and the projects wrap up in mid August. See the &lt;a href=&quot;http://www.google-melange.com/gsoc/events/google/gsoc2012&quot;&gt;official timeline&lt;/a&gt; for all the dates.&lt;/p&gt;
&lt;p&gt;Even when GSoC ends, the community continues on! We hope summer students stay involved in the community long after the hacking days of summer.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/04/13/the-danger-of-embedded-containers/</id>
    <title>The Danger of Embedded Containers</title>
    <updated>2012-04-14T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/04/13/the-danger-of-embedded-containers/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="best-practice" />
    <category scheme="http://arquillian.org/blog/tags" term="container-adapter" />
    <category scheme="http://arquillian.org/blog/tags" term="2012" />
    <category scheme="http://arquillian.org/blog/tags" term="nonrelease" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      In the Arquillian project, we&#8217;re all about real tests. There&#8217;s a good reason for this philosophy. If you use mocks or a substitute container when testing code that uses a programming model (i.e., CDI), all you can be sure of is that you&#8217;ve faked out enough functionality to get the test to work. You can&#8217;t be certain that your code works&#8212;really, truly works.
Obviously, we provide adapters for embedded containers (i.e., substitute containers). The reason is, they often do a decent enough job of simultating the real environment that we are willing to make the trade-off for its variations when we......
    </summary>
    <content type="html">
      &lt;p&gt;In the Arquillian project, we&amp;#8217;re all about &lt;em&gt;real&lt;/em&gt; tests. There&amp;#8217;s a good reason for this philosophy. If you use mocks or a substitute container when testing code that uses a programming model (i.e., CDI), all you can be sure of is that you&amp;#8217;ve faked out enough functionality to get the test to work. You can&amp;#8217;t be certain that your code works&amp;#8212;really, truly works.&lt;/p&gt;
&lt;p&gt;Obviously, we provide adapters for embedded containers (i.e., substitute containers). The reason is, they often do a decent enough job of simultating the real environment that we are willing to make the trade-off for its variations when we are working in development. I would expect, though, that you are also running the same tests in CI using a real container&amp;#8230;just to get that peace of mind.&lt;/p&gt;
&lt;h3&gt;How do you know when &lt;em&gt;not&lt;/em&gt; to use an embedded container?&lt;/h3&gt;
&lt;p&gt;If you write a test that you are positive should work, but instead throws some wacky exception, &lt;em&gt;immediately stop and try the same test in a real container&lt;/em&gt;. For example, if you are using Embedded GlassFish, I would advise running the test in managed or remote GlassFish. The latter two adapters both use an authentic GlassFish instance. If the test passes, then you have answered the question of this section.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;When the embedded container begins to act inconsistently, drop it.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As with all things, there are exceptions to the rule. If the code really &lt;em&gt;should&lt;/em&gt; work on the embedded container, then it may be worth exploring why it isn&amp;#8217;t. That may lead you to the discovery of a bug in the library you&amp;#8217;re using. If debugging the library is your main concern, chase it down. If you are just trying to get a test written for your application, stop using the embedded container (or save debugging it for a rainy day).&lt;/p&gt;
&lt;h3&gt;Examples&lt;/h3&gt;
&lt;p&gt;See &lt;a href=&quot;https://community.jboss.org/message/729776&quot;&gt;this thread&lt;/a&gt; in the Seam 3 forums for an example where the Embedded GlassFish container was acting more of a hindrence than a help. The thread includes the steps I took to get a &lt;strong class=&quot;greenbar&quot;&gt;green bar&lt;/strong&gt; using a different GlassFish container adapter.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;profile://myfear&quot;&gt;Markus Eisele&lt;/a&gt; identifies another hazard. He points out in a &lt;a href=&quot;http://blog.eisele.net/2012/01/arquillian-with-netbeans-glassfish_18.html&quot;&gt;recent blog post&lt;/a&gt; that testing JPA using Embedded GlassFish is problematic because JPA weaving (in EclipseLink) does not occur:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[Weaving] only works when the entity classes to be weaved only exist in the application classloader. The combination of Embedded GlassFish, Arquillian and the Maven Surefire Plugin mix this up a bit and the end of the story is, that exactly none of your entities are enhanced at all.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Again, testing on Embedded GlassFish is not serving us well in this scenario. Graduate.&lt;/p&gt;
&lt;h3&gt;Closing thoughts&lt;/h3&gt;
&lt;p&gt;Code that uses Solder works fine on GlassFish 3.1.2, but it does not play very nicely with Embedded GlassFish&amp;#8212;it&amp;#8217;s just a hostile environment for CDI because of the visibility issues that come with starting an embedded container inside an existing Java process. The same goes for JPA. You end up in a minefield of class visibility and access problems, and far from making any progress writing tests (your ultimate goal).&lt;/p&gt;
&lt;p&gt;If you want the container to start automatically like with embedded, then switch to a managed container. It works almost exactly the same as the remote container, except that Arquillian will start the standalone process at the beginning of the test execution and stop it at the end. In other words:&lt;/p&gt;
&lt;p&gt;managed &amp;gt;&amp;gt;&amp;gt;&amp;gt; embedded&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s clean. It&amp;#8217;s true.&lt;/p&gt;
&lt;p&gt;For speed of development:&lt;/p&gt;
&lt;p&gt;remote &amp;gt; managed&lt;/p&gt;
&lt;p&gt;With remote, you don&amp;#8217;t have to wait for the container to start&amp;#8230;and you can start it in debug mode very easily and keep it there. That&amp;#8217;s why I say that the best container adapters for development are the remote adapters and the best adapters for CI are the managed adapters. I personally don&amp;#8217;t like the embedded container adapters much (with the exception of embedded CDI since that&amp;#8217;s mostly a pure standalone CDI environment).&lt;/p&gt;
&lt;p&gt;Keep that advice in mind.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/04/12/arquillian-extension-persistence-1-0-0-Alpha4/</id>
    <title>Arquillian Persistence Extension 1.0.0.Alpha4 Released</title>
    <updated>2012-04-13T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/04/12/arquillian-extension-persistence-1-0-0-Alpha4/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="persistence" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha4 release of the Arquillian Persistence Extension component!
        It&#8217;s been a while since the Alpha3 release. After three long months, we&#8217;re excited to announce Alpha 4 with a lot of improvements and enhancements suggested by our great community. Best of all, we finally have complete documentation in the reference guide!
        I would especially like to thank Michael Brill for nailing down  DBUnit clean up strategies, Pål Oliver Kristiansen and Jarek Gilewski for suggesting customization of DBUnit behaviour and Juergen Zimmermann for spotting a bug with transactional support. Last, but not least, many thanks......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha4&lt;/em&gt; release of the &lt;em&gt;Arquillian Persistence Extension&lt;/em&gt; component!&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s been a while since the &lt;a href=&quot;http://arquillian.org/2011/12/30/arquillian-extension-persistence-1-0-0-Alpha3&quot;&gt;Alpha3 release&lt;/a&gt;. After three long months, we&amp;#8217;re excited to announce Alpha 4 with &lt;strong&gt;a lot&lt;/strong&gt; of improvements and enhancements suggested by our great community. Best of all, we finally have &lt;a href=&quot;https://docs.jboss.org/author/display/ARQ/Persistence&quot;&gt;complete documentation in the reference guide&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;I would especially like to thank &lt;a href=&quot;https://github.com/shogz&quot;&gt;Michael Brill&lt;/a&gt; for nailing down  DBUnit clean up strategies, &lt;a href=&quot;https://github.com/twistah&quot;&gt;Pål Oliver Kristiansen&lt;/a&gt; and &lt;a href=&quot;https://github.com/jagin&quot;&gt;Jarek Gilewski&lt;/a&gt; for suggesting customization of DBUnit behaviour and &lt;a href=&quot;profile://Juergen.Zimmermann&quot;&gt;Juergen Zimmermann&lt;/a&gt; for spotting a bug with transactional support. Last, but not least, many thanks to all who actively discussed the roadmap for next releases. There is plenty of great stuff on the way! Thank you very much for your feedback!&lt;/p&gt;
&lt;h3 class=&quot;highlights&quot;&gt;Some of the highlights in this release&lt;/h3&gt;
&lt;dl&gt;
	&lt;dt&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Custom SQL scripts for cleanup&lt;/dt&gt;
	&lt;dd&gt;You can now use custom SQL scripts to clean your database before or after the test. For this purpose use the &lt;code&gt;@CleanupUsingScript&lt;/code&gt; annotation and specify SQL files which have to be executed.&lt;/dd&gt;
	&lt;dt&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; More flexible custom SQL scripts execution&lt;/dt&gt;
	&lt;dd&gt;We&amp;#8217;ve removed the &lt;code&gt;@UsingScript&lt;/code&gt; annotation and replaced it with the &lt;code&gt;@ApplyScriptBefore&lt;/code&gt; and &lt;code&gt;@ApplyScriptAfter&lt;/code&gt; annotations.&lt;/dd&gt;
	&lt;dt&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; DBUnit insert strategies&lt;/dt&gt;
	&lt;dd&gt;&lt;p&gt;You can tell DBUnit how it should insert your data. The following strategies are available:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;code&gt;INSERT&lt;/code&gt; &amp;#8211; Performs insert of the data defined in provided data sets. &lt;em&gt;This is the default strategy&lt;/em&gt;.&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;CLEAN_INSERT&lt;/code&gt; &amp;#8211; Performs insert of the data defined in provided data sets, after removal of all data present in the tables referred in provided files.&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;REFRESH&lt;/code&gt; &amp;#8211; During this operation, existing rows are updated and new ones are inserted. Entries already existing in the database which are not defined in the provided data set are not affected.&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;UPDATE&lt;/code&gt; &amp;#8211; This strategy updates existing rows using data provided in the datasets. If the dataset contains a row which is not present in the database (identified by its primary key) then an exception is thrown.&lt;/li&gt;
&lt;/ul&gt;&lt;/dd&gt;
	&lt;dt&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; DBUnit cleanup modes&lt;/dt&gt;
	&lt;dd&gt;&lt;p&gt;You can specify when and how you would like your database to be cleaned. By default, your database is &lt;strong&gt;erased entirely&lt;/strong&gt; before each test. If you want to control this behavior, use the &lt;code&gt;@Cleanup&lt;/code&gt; annotation for this purpose. The following modes are currently supported:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;code&gt;STRICT&lt;/code&gt; &amp;#8211; Cleans the entire database. This strategy might require turning off database constraints (e.g. referential integrity).&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;USED_ROWS_ONLY&lt;/code&gt; &amp;#8211; Deletes only those entries that are defined in the datasets used for seeding.&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;USED_TABLES_ONLY&lt;/code&gt; &amp;#8211; Deletes only those tables that are referenced in datasets.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can also specify when you would like to invoke the cleanup procedure. For instance:&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@Cleanup(phase = TestExecutionPhase.AFTER, strategy = CleanupStrategy.USED_ROWS_ONLY)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can invoke cleanup &lt;code&gt;BEFORE&lt;/code&gt; or &lt;code&gt;AFTER&lt;/code&gt; the test. You can also disable cleanup by using &lt;code&gt;TestExecutionPhase.NONE&lt;/code&gt;.&lt;/p&gt;&lt;/dd&gt;
	&lt;dt&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Column filtering for data set matching&lt;/dt&gt;
	&lt;dd&gt;&lt;code&gt;@ShouldMatchDatSet&lt;/code&gt; has been enhanced with &lt;code&gt;columnsToExclude&lt;/code&gt; list, where you can specify which columns shouldn&amp;#8217;t be used for database content verification.&lt;/dd&gt;
	&lt;dt&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Nullable columns&lt;/dt&gt;
	&lt;dd&gt;For XML, JSON and YAML you can now set arbitary columns to &lt;code&gt;null&lt;/code&gt; using &lt;code&gt;[null]&lt;/code&gt; placeholder.&lt;/dd&gt;
	&lt;dt&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Separated configuration for core and (enhanced) DBUnit specific features&lt;/dt&gt;
	&lt;dd&gt;&lt;p&gt;&lt;strong&gt;We provide configuration for all DBUnit properties and features as of Alpha 4!&lt;/strong&gt; Moreover there is a split for core properties (such as default data source or JNDI of UserTransaction) and DBUnit related settings, as the example below illustrates:&lt;/p&gt;
&lt;div class=&quot;filename&quot;&gt;arquillian.xml&lt;/div&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=&quot;persistence&quot;&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;defaultDataSource&quot;&amp;gt;java:app/datasources/mssql_ds&amp;lt;/property&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;userTransactionJndi&quot;&amp;gt;java:jboss/UserTransaction&amp;lt;/property&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;initStatement&quot;&amp;gt;scripts/mssql-identity-insert-on.sql&amp;lt;/property&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;cleanupStatement&quot;&amp;gt;scripts/mssql-identity-insert-off.sql&amp;lt;/property&amp;gt;&amp;#x000A;&amp;lt;/extension&amp;gt;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=&quot;persistence-dbunit&quot;&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;datatypeFactory&quot;&amp;gt;org.dbunit.ext.mssql.MsSqlDataTypeFactory&amp;lt;/property&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;useIdentityInsert&quot;&amp;gt;true&amp;lt;/property&amp;gt;&amp;#x000A;&amp;lt;/extension&amp;gt;&amp;#x000A;&lt;/code&gt;&lt;/pre&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;For complete list, please refer to the &lt;a href=&quot;https://docs.jboss.org/author/display/ARQ/Persistence&quot;&gt;reference guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We look forward to hearing your feedback about this release in the &lt;a href=&quot;http://community.jboss.org/en/arquillian&quot;&gt;community forums&lt;/a&gt;!&lt;/p&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;
        &lt;a href=&quot;http://arquillian.org/modules/persistence-extension/&quot;&gt;Arquillian Persistence Extension&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.0.0.Alpha4
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-persistence/commit/4d7f59a7ff9c4575b8590a063d368b8f70cc259e.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-04-12&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Aslak Knutsen&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.0.Final&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-persistence-api
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-persistence-api/1.0.0.Alpha4/arquillian-persistence-api-1.0.0.Alpha4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-persistence-api/1.0.0.Alpha4/arquillian-persistence-api-1.0.0.Alpha4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-persistence-impl
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-persistence-impl/1.0.0.Alpha4/arquillian-persistence-impl-1.0.0.Alpha4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-persistence-impl/1.0.0.Alpha4/arquillian-persistence-impl-1.0.0.Alpha4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;21&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Bug&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-721&quot;&gt;ARQ-721&lt;/a&gt; -         Compilation error in older version of JDK 6&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-723&quot;&gt;ARQ-723&lt;/a&gt; -         TransactionalWrapper.afterTest() ignores SessionContext.setRollbackOnly()&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-751&quot;&gt;ARQ-751&lt;/a&gt; -         Empty YML file is causing error whereas it should be simply skipped&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-752&quot;&gt;ARQ-752&lt;/a&gt; -         Persistence extension is failing to enrich archive when there is no dataset defined&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-765&quot;&gt;ARQ-765&lt;/a&gt; -         Update ShrinkWrap Descriptors dependency&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Enhancement&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-755&quot;&gt;ARQ-755&lt;/a&gt; -         Introduce annotation based db cleanup configuration&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-756&quot;&gt;ARQ-756&lt;/a&gt; -         Improve error messages&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-805&quot;&gt;ARQ-805&lt;/a&gt; -         Convert test method names from camel to underscore&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-859&quot;&gt;ARQ-859&lt;/a&gt; -         Cleanup configuration - move dbunit related settings to its own configuration.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Feature Request&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-718&quot;&gt;ARQ-718&lt;/a&gt; -         Customization for DBUnit&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-719&quot;&gt;ARQ-719&lt;/a&gt; -         Enable column sensing for FlatXmlDataSet&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-720&quot;&gt;ARQ-720&lt;/a&gt; -         Enable nulls for FlatXmlDataSet&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-764&quot;&gt;ARQ-764&lt;/a&gt; -         Using DBUnit with IDENTITY or auto-increment columns&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-777&quot;&gt;ARQ-777&lt;/a&gt; -         Should be possible to run custom scripts before and after test&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-804&quot;&gt;ARQ-804&lt;/a&gt; -         Should be able to clean database using custom SQL script&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-869&quot;&gt;ARQ-869&lt;/a&gt; -         Move JavaDoc from Field level to Method level for Configuration objects&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Task&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-757&quot;&gt;ARQ-757&lt;/a&gt; -         Document extension in confluence.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Sub-task&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-771&quot;&gt;ARQ-771&lt;/a&gt; -         Global DBUnit configuration should be exposed in arquillian.xml&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-772&quot;&gt;ARQ-772&lt;/a&gt; -         Introduce column filtering for data set matching&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-806&quot;&gt;ARQ-806&lt;/a&gt; -         Should provide cleanup strategies to control what needs to be removed for the given test&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/bmajsak&quot;&gt;Bartosz Majsak&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/04/11/arquillian-graphene-1-0-0-Final/</id>
    <title>Graphene 1.0.0.Final Released</title>
    <updated>2012-04-12T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/04/11/arquillian-graphene-1-0-0-Final/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="graphene" />
    <category scheme="http://arquillian.org/blog/tags" term="jbosscentral" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Final release of the Graphene component!
        Graphene is joining rest of the Arquillian party, building on top of Arquillian testing platform Drone extension, both which reached their first stable version yesterday.
        The Mission
        Arquillian Graphene focuses on making real-browser automation a breeze.
        The project was started to address simplification of covering AJAX-enabled applications with browser automation tests.
        While Selenium project is focusing on unified API, integration with variety of browsers, Graphene project is addressing the real-world testing challenges:
        
        	rapid development
        	
        		straight-forward
        		readable API
        		fast turnaround
        	
        	object-oriented
        	
        		type-safe API
        		dependency injection of thread-local context
        	
        	instabilities and speed of execution in continuous integration
        	
        		jQuery selectors
        		request guards
        	
        
        Availability
        The Graphene bits......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Final&lt;/em&gt; release of the &lt;em&gt;Graphene&lt;/em&gt; component!&lt;/p&gt;
&lt;p&gt;Graphene is joining rest of the Arquillian party, building on top of Arquillian testing platform Drone extension, both which &lt;a href=&quot;http://arquillian.org/blog/2012/04/10/arquillian-first-stable-release/&quot;&gt;reached their first stable version yesterday&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;The Mission&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://arquillian.org/modules/graphene-extension&quot;&gt;Arquillian Graphene&lt;/a&gt; focuses on &lt;strong&gt;making real-browser automation a breeze&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The project was started to address simplification of covering AJAX-enabled applications with browser automation tests.&lt;/p&gt;
&lt;p&gt;While Selenium project is focusing on unified API, integration with variety of browsers, Graphene project is addressing the real-world testing challenges:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;rapid development
	&lt;ul&gt;
		&lt;li&gt;straight-forward&lt;/li&gt;
		&lt;li&gt;readable API&lt;/li&gt;
		&lt;li&gt;fast turnaround&lt;/li&gt;
	&lt;/ul&gt;&lt;/li&gt;
	&lt;li&gt;object-oriented
	&lt;ul&gt;
		&lt;li&gt;type-safe API&lt;/li&gt;
		&lt;li&gt;dependency injection of thread-local context&lt;/li&gt;
	&lt;/ul&gt;&lt;/li&gt;
	&lt;li&gt;instabilities and speed of execution in continuous integration
	&lt;ul&gt;
		&lt;li&gt;jQuery selectors&lt;/li&gt;
		&lt;li&gt;request guards&lt;/li&gt;
	&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Availability&lt;/h3&gt;
&lt;p&gt;The Graphene bits are available in &lt;a href=&quot;https://repository.jboss.org/nexus&quot;&gt;JBoss Community artifact repository&lt;/a&gt;, dual-licensed under LGPL v2.1 (backward-compatibility) and ASL v2.0 (which uses rest of the Arquillian sub-projects).&lt;/p&gt;
&lt;p&gt;For those who are already using Graphene in a Maven project, you can simply update the version to &lt;code&gt;1.0.0.Final&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can start with the tests using our &lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA/Getting+Started&quot;&gt;Getting Started with the JBoss Maven repository guide&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;The Future&lt;/h3&gt;
&lt;p&gt;Right now we are heavily working on making the new version of Graphene 2 on the road.&lt;/p&gt;
&lt;p&gt;Selenium 2 with its WebDriver API made huge progress with API &lt;strong&gt;accessibility and readability&lt;/strong&gt;. It&amp;#8217;s already pleasure to work with this API in Java world.&lt;/p&gt;
&lt;p&gt;However still there are &lt;strong&gt;many shortcomings we are going to address with Graphene 2&lt;/strong&gt;, building on top of concepts brought in Graphene 1 and adding new features, which opens world of new possibilities:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;dependency injection of thread-local context&lt;/li&gt;
	&lt;li&gt;fast development turnaround&lt;/li&gt;
	&lt;li&gt;cross-cutting concerns (command interception)&lt;/li&gt;
	&lt;li&gt;request guards&lt;/li&gt;
	&lt;li&gt;page extensions&lt;/li&gt;
	&lt;li&gt;component objects
	&lt;ul&gt;
		&lt;li&gt;extension of page objects concept&lt;/li&gt;
	&lt;/ul&gt;&lt;/li&gt;
	&lt;li&gt;JavaScript test execution from within Selenium test&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you enjoy testing and you are unsatisfied with the current browser automation tooling, it&amp;#8217;s &lt;strong&gt;perfect time&lt;/strong&gt; to step in and help us to &lt;strong&gt;bring the future&lt;/strong&gt;!&lt;/p&gt;
&lt;h3&gt;Project Links&lt;/h3&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://community.jboss.org/wiki/ArquillianGraphene&quot;&gt;Home page&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://github.com/arquillian/arquillian-graphene&quot;&gt;Source code&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA/Home&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA&quot;&gt;Issue tracker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;
        &lt;a href=&quot;http://arquillian.org/modules/graphene-extension/&quot;&gt;Graphene&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.0.0.Final
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-graphene/commit/4912115040b0ce4e9572ebabb647c9d7d1895b43.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-04-11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Lukas Fryc&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.0.Final&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.graphene&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    graphene-build-resources
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-build-resources/1.0.0.Final/graphene-build-resources-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-build-resources/1.0.0.Final/graphene-build-resources-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    graphene-selenium-api
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-api/1.0.0.Final/graphene-selenium-api-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-api/1.0.0.Final/graphene-selenium-api-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    graphene-selenium-drone
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-drone/1.0.0.Final/graphene-selenium-drone-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-drone/1.0.0.Final/graphene-selenium-drone-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    graphene-selenium-ftest-junit-container
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-junit-container/1.0.0.Final/graphene-selenium-ftest-junit-container-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-junit-container/1.0.0.Final/graphene-selenium-ftest-junit-container-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    graphene-selenium-ftest-junit-standalone
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-junit-standalone/1.0.0.Final/graphene-selenium-ftest-junit-standalone-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-junit-standalone/1.0.0.Final/graphene-selenium-ftest-junit-standalone-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    graphene-selenium-ftest-testng-container
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-testng-container/1.0.0.Final/graphene-selenium-ftest-testng-container-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-testng-container/1.0.0.Final/graphene-selenium-ftest-testng-container-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    graphene-selenium-ftest-testng-standalone
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-testng-standalone/1.0.0.Final/graphene-selenium-ftest-testng-standalone-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-testng-standalone/1.0.0.Final/graphene-selenium-ftest-testng-standalone-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    graphene-selenium-impl
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-impl/1.0.0.Final/graphene-selenium-impl-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-impl/1.0.0.Final/graphene-selenium-impl-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;8&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Bug&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-137&quot;&gt;ARQGRA-137&lt;/a&gt; -         SLF4J is no longer required&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Component  Upgrade&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-140&quot;&gt;ARQGRA-140&lt;/a&gt; -         Upgrade to Arquillian Core/Drone 1.0.0.Final&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Feature Request&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-142&quot;&gt;ARQGRA-142&lt;/a&gt; -         Refactor Graphene 1 to allow addition of Graphene 2 bits&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-143&quot;&gt;ARQGRA-143&lt;/a&gt; -         Add license file to the project&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-144&quot;&gt;ARQGRA-144&lt;/a&gt; -         Add section about Drone/Graphene usage in Getting Started guide&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Task&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-93&quot;&gt;ARQGRA-93&lt;/a&gt; -         Add README to the GitHub repository&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-139&quot;&gt;ARQGRA-139&lt;/a&gt; -         Blog about releasing Graphene 1 Final&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-145&quot;&gt;ARQGRA-145&lt;/a&gt; -         Update dependency versions in docs&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/lfryc&quot;&gt;Lukas Fryc&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/04/10/arquillian-first-stable-release/</id>
    <title>Death to all bugs! Arquillian testing platform reaches first stable release</title>
    <updated>2012-04-11T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/04/10/arquillian-first-stable-release/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="announcement" />
    <category scheme="http://arquillian.org/blog/tags" term="mission" />
    <category scheme="http://arquillian.org/blog/tags" term="roadmap" />
    <category scheme="http://arquillian.org/blog/tags" term="testing" />
    <category scheme="http://arquillian.org/blog/tags" term="2012" />
    <category scheme="http://arquillian.org/blog/tags" term="nonrelease" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
       Red Hat, Inc. and the JBoss Community today announced the 1.0.0.Final release of Arquillian, its award-winning testing platform built to run on the Java Virtual Machine (JVM). Arquillian substantially reduces the effort required to write and execute Java middleware integration and functional tests. It even enables test engineers to address scenarios previously considered untestable or too expensive to test.
The Arquillian project is led by Aslak Knutsen and has received contributions from over 100 contributors and community members (between Arquillian and ShrinkWrap combined). At the JavaOne 2011 conference, Arquillian received the Duke&#8217;s Choice Award for innovation in integration testing.
The 1.0.0.Final......
    </summary>
    <content type="html">
      &lt;p&gt;&lt;img src=&quot;http://arquillian.org/images/blog/celebration-ike.jpg&quot; class=&quot;pull-right&quot; alt=&quot;&quot; /&gt; Red Hat, Inc. and the JBoss Community today announced the 1.0.0.Final release of &lt;a href=&quot;http://arquillian.org&quot;&gt;Arquillian&lt;/a&gt;, its award-winning testing platform built to run on the Java Virtual Machine (JVM). Arquillian substantially reduces the effort required to write and execute Java middleware integration and functional tests. It even enables test engineers to address scenarios previously considered untestable or too expensive to test.&lt;/p&gt;
&lt;p&gt;The Arquillian project is led by &lt;a href=&quot;profile://aslak&quot;&gt;Aslak Knutsen&lt;/a&gt; and has received contributions from over 100 &lt;a href=&quot;http://arquillian.org/community/contributors&quot;&gt;contributors and community members&lt;/a&gt; (between Arquillian and ShrinkWrap combined). At the JavaOne 2011 conference, Arquillian &lt;a href=&quot;http://arquillian.org/blog/2011/10/02/arquillian-wins-a-duke-choice-award&quot;&gt;received the Duke&amp;#8217;s Choice Award&lt;/a&gt; for innovation in integration testing.&lt;/p&gt;
&lt;p&gt;The 1.0.0.Final release of &lt;a href=&quot;http://arquillian.org/modules/drone-extension&quot;&gt;Arquillian Drone&lt;/a&gt;, a key add-on to the platform, is included in this release. Final versions of select container adapters will be released later in the week. &lt;a href=&quot;http://jboss.org/shrinkwrap&quot;&gt;ShrinkWrap&lt;/a&gt;, a central component of Arquillian, announced its 1.0.0.Final release last week.&lt;/p&gt;
&lt;h3&gt;Mission and History&lt;/h3&gt;
&lt;p&gt;Arquillian adheres to three core principles:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Tests should be portable to any supported container&lt;/li&gt;
	&lt;li&gt;Tests should be executable from the IDE to eliminate the need for an explicit build step and to simplify debugging&lt;/li&gt;
	&lt;li&gt;The platform should unify the Java testing ecosystem by extending or integrating with existing test frameworks&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By focusing on these principles, Arquillian makes integration and functional tests as simple to write and execute as unit tests.&lt;/p&gt;
&lt;p&gt;Arquillian originated from the test harness developed for the CDI 1.0 (JSR-299) specification in 2009. It spun off as an independent project and has evolved into an extensible testing platform. Coming full circle, the test suite in CDI 1.1 (JSR-346), the next iteration of the CDI specification, has migrated to Arquillian. Other specifications are expected to follow. Arquillian is also used by numerous open source projects, including Hibernate, JBoss AS 7, Drools, RHQ, JClouds and Apache DeltaSpike.&lt;/p&gt;
&lt;h3&gt;Functionality&lt;/h3&gt;
&lt;p&gt;Arquillian brings test execution to the target runtime, alleviating the burden on the developer of managing the runtime from within the test or project build. To invert this control, Arquillian wraps a lifecycle around test execution that does the following:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Manages the lifecycle of one or more containers&lt;/li&gt;
	&lt;li&gt;Bundles the test case, dependent classes and resources as ShrinkWrap archives&lt;/li&gt;
	&lt;li&gt;Deploys the archives to the containers&lt;/li&gt;
	&lt;li&gt;Enriches the test case with dependency injection and other declarative services&lt;/li&gt;
	&lt;li&gt;Executes the tests inside (or against) the containers&lt;/li&gt;
	&lt;li&gt;Returns the results to the test runner for reporting&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Arquillian runs with Java 1.5 and above, integrates seamlessly with familiar testing frameworks such as JUnit and TestNG and allows tests to be launched using existing IDE, Ant and Maven test plugins.&lt;/p&gt;
&lt;h3&gt;Loving quotes about Arquillian&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;#8230;using Arquillian, we were able to cut the setup needed to run a plugin in-container by 90% and we were able to introduce a number of convenience annotations from which you can get a variety of data injected into your tests.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p style=&quot;text-align:right;&quot;&gt;&amp;#8212; Lukáš Krejčí, RHQ core developer&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Arquillian is a really great integration testing tool full of potential. It&amp;#8217;s just great that the JBoss guys are aiming to provide support for almost all widely used application servers and web containers. If you are writing an application for the Java EE 6 stack, not using Arquillian is a serious mistake!”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p style=&quot;text-align:right;&quot;&gt;&amp;#8212; Bartosz Majsak, Cambridge Technology Partners&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[Arquillian] reminds me of the old Cactus project back in the day, but done much, much better.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p style=&quot;text-align:right;&quot;&gt;&amp;#8212; Laird Nelson&lt;/p&gt;
&lt;h3&gt;Newest features&lt;/h3&gt;
&lt;p&gt;Arquillian can manage more than a dozen container vendors, including JBoss AS, GlassFish and Tomcat, and supports running tests in cloud services. The container support allows developers to target a variety of technology platforms, including Java EE 5 and 6, Servlet environments, OSGi, Embedded EJB and standalone CDI.&lt;/p&gt;
&lt;p&gt;Additional new features include:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Orchestration of multiple deployments across multiple containers in a single test&lt;/li&gt;
	&lt;li&gt;Support for multiple protocol contexts within a single deployment&lt;/li&gt;
	&lt;li&gt;Descriptor deployment&lt;/li&gt;
	&lt;li&gt;Assertions for deployment exceptions&lt;/li&gt;
	&lt;li&gt;A new configuration schema that supports multiple configurations per container&lt;/li&gt;
	&lt;li&gt;EL-like evaluation in properties and configuration overrides via Java properties&lt;/li&gt;
	&lt;li&gt;Explicit ordering of test methods&lt;/li&gt;
	&lt;li&gt;Control over when the container is started and stopped&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Arquillian’s extensibility is reflected in its growing ecosystem of extensions. The most mature extension, Arquillian Drone, is included in today’s release. Drone is an abstraction over browser controllers such as Selenium and WebDriver that enables the developer to write browser-based tests without having to fuss with the typical setup and plumbing. Other extensions under active development include an Android test controller, DBUnit integration, a SeamTest replacement for testing Seam 2, BDD runners (Spock and JBehave), performance metrics, code coverage (Jacoco) and Arquillian Graphene (a type-safe Selenium API). Expect more extensions to emerge now that the platform has reached a stable release.&lt;/p&gt;
&lt;h3&gt;Availability&lt;/h3&gt;
&lt;p&gt;The Arquillian platform and extensions are available in the &lt;a href=&quot;http://search.maven.org&quot;&gt;Maven Central&lt;/a&gt; and &lt;a href=&quot;https://repository.jboss.org/nexus&quot;&gt;JBoss Community&lt;/a&gt; artifact repositories. The Arquillian libraries are typically added to the test suite of a project using a dependency management tool such as Apache Maven or Apache Ivy. Instructions for setting up Arquillian in your project and writing Arquillian tests are covered in the newly-minted &lt;a href=&quot;http://arquillian.org/guides&quot;&gt;Arquillian Guides&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Arquillian is released under the Apache License, v2.0, an OSI-approved open source software license.&lt;/p&gt;
&lt;p&gt;For more information and updates about the Arquilian project, follow the &lt;a href=&quot;http://arquillian.org/blog&quot;&gt;Arquillian project blog&lt;/a&gt; and circle the &lt;a href=&quot;https://plus.google.com/b/100660127586085393031&quot;&gt;Arquillian project on Google+&lt;/a&gt;.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/04/10/arquillian-extension-drone-1-0-0-Final/</id>
    <title>Arquillian Drone Extension 1.0.0.Final Released</title>
    <updated>2012-04-11T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/04/10/arquillian-extension-drone-1-0-0-Final/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="drone" />
    <category scheme="http://arquillian.org/blog/tags" term="jbosscentral" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Final release of the Arquillian Drone Extension component!
        
        What is Arquillian?
        Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.
        Release details
        
          
            
              Component
          ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Final&lt;/em&gt; release of the &lt;em&gt;Arquillian Drone Extension&lt;/em&gt; component!&lt;/p&gt;
        &lt;p&gt;&lt;img src=&quot;http://arquillian.org/images/blog/drone_400.png&quot; class=&quot;graphic pull-right&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
        &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
        &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
        &lt;h3&gt;Release details&lt;/h3&gt;
        &lt;table class=&quot;table table-bordered table-striped&quot;&gt;
          &lt;tbody&gt;
            &lt;tr&gt;
              &lt;th&gt;Component&lt;/th&gt;
              &lt;td&gt;
                &lt;a href=&quot;http://arquillian.org/modules/drone-extension/&quot;&gt;Arquillian Drone Extension&lt;/a&gt;
              &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;th&gt;Version&lt;/th&gt;
              &lt;td&gt;
                1.0.0.Final
                &lt;span class=&quot;label tag&quot;&gt;
                  &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-drone/commit/8a860868c54132a8fa8807ba05e77ea605ae5118.html&quot;&gt;view tag&lt;/a&gt;
                &lt;/span&gt;
              &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;th&gt;Release date&lt;/th&gt;
              &lt;td&gt;2012-04-10&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;th&gt;Released by&lt;/th&gt;
              &lt;td&gt;Aslak Knutsen&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;th&gt;Compiled against&lt;/th&gt;
              &lt;td&gt;
                &lt;ul class=&quot;unstyled&quot;&gt;
                  &lt;li&gt;Arquillian Core &amp;#8211; 1.0.0.Final&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/td&gt;
            &lt;/tr&gt;
          &lt;/tbody&gt;
        &lt;/table&gt;
        &lt;h3&gt;
          Published artifacts
          &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
        &lt;/h3&gt;
        &lt;ul&gt;
          &lt;li&gt;
            org.jboss.arquillian.extension
            &amp;raquo;
            arquillian-drone-api
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-api/1.0.0.Final/arquillian-drone-api-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-api/1.0.0.Final/arquillian-drone-api-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.extension
            &amp;raquo;
            arquillian-drone-bom
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-bom/1.0.0.Final/arquillian-drone-bom-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.extension
            &amp;raquo;
            arquillian-drone-configuration
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-configuration/1.0.0.Final/arquillian-drone-configuration-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-configuration/1.0.0.Final/arquillian-drone-configuration-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.extension
            &amp;raquo;
            arquillian-drone-impl
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-impl/1.0.0.Final/arquillian-drone-impl-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-impl/1.0.0.Final/arquillian-drone-impl-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.extension
            &amp;raquo;
            arquillian-drone-selenium
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium/1.0.0.Final/arquillian-drone-selenium-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium/1.0.0.Final/arquillian-drone-selenium-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.extension
            &amp;raquo;
            arquillian-drone-selenium-depchain
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-depchain/1.0.0.Final/arquillian-drone-selenium-depchain-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.extension
            &amp;raquo;
            arquillian-drone-selenium-server
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-server/1.0.0.Final/arquillian-drone-selenium-server-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-server/1.0.0.Final/arquillian-drone-selenium-server-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.extension
            &amp;raquo;
            arquillian-drone-spi
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-spi/1.0.0.Final/arquillian-drone-spi-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-spi/1.0.0.Final/arquillian-drone-spi-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.extension
            &amp;raquo;
            arquillian-drone-webdriver
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver/1.0.0.Final/arquillian-drone-webdriver-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver/1.0.0.Final/arquillian-drone-webdriver-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.extension
            &amp;raquo;
            arquillian-drone-webdriver-depchain
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver-depchain/1.0.0.Final/arquillian-drone-webdriver-depchain-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
        &lt;h3&gt;
          Release notes and resolved issues
          &lt;small&gt;3&lt;/small&gt;
        &lt;/h3&gt;
        &lt;p&gt;Extension Drone - Final&lt;/p&gt;
        &lt;dl&gt;
          &lt;dt&gt;Enhancement&lt;/dt&gt;
          &lt;dd&gt;
            &lt;ul class=&quot;unstyled&quot;&gt;
              &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-551&quot;&gt;ARQ-551&lt;/a&gt; -         Update Arquillian Drone docs&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/dd&gt;
        &lt;/dl&gt;
        &lt;dl&gt;
          &lt;dt&gt;Task&lt;/dt&gt;
          &lt;dd&gt;
            &lt;ul class=&quot;unstyled&quot;&gt;
              &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-843&quot;&gt;ARQ-843&lt;/a&gt; -         Remove parent artifact from Arquillian-Drone-BOM&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/dd&gt;
        &lt;/dl&gt;
        &lt;p&gt;
          Thanks to the following list of contributors:
          &lt;a href=&quot;https://community.jboss.org/people/kpiwko&quot;&gt;Karel Piwko&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;
        &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/04/10/arquillian-core-1-0-0-Final/</id>
    <title>Arquillian Core 1.0.0.Final Released</title>
    <updated>2012-04-11T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/04/10/arquillian-core-1-0-0-Final/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="platform" />
    <category scheme="http://arquillian.org/blog/tags" term="core" />
    <category scheme="http://arquillian.org/blog/tags" term="jbosscentral" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Final release of the Arquillian Core component!
 Just over two years ago, we announced the first alpha release of Arquillian. We were excited back then to present a new way of testing where tests execute inside the container. We started out offering only support for testing Java EE and a handful of containers adapters.
Today, we are announcing the 1.0.0.Final release of Arquillian, now a sophisticated integration and functional testing platform that&#8217;s been rearchitected since it&#8217;s debut and is enhanced by a plethora of container adapters, test runners, extensions and tool plugins.
Over that......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Final&lt;/em&gt; release of the &lt;em&gt;Arquillian Core&lt;/em&gt; component!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://arquillian.org/images/arquillian_glossy_no_shadow_icon.png&quot; class=&quot;graphic pull-right&quot; alt=&quot;&quot; /&gt; Just over two years ago, &lt;a href=&quot;http://arquillian.org/blog/2010/03/11/arquillian-1-alpha-1-released&quot;&gt;we announced&lt;/a&gt; the first alpha release of Arquillian. We were excited back then to present a new way of testing where tests execute inside the container. We started out offering only support for testing Java EE and a handful of containers adapters.&lt;/p&gt;
&lt;p&gt;Today, we are announcing the 1.0.0.Final release of Arquillian, now a sophisticated integration and functional testing platform that&amp;#8217;s been rearchitected since it&amp;#8217;s debut and is enhanced by a plethora of container adapters, test runners, extensions and tool plugins.&lt;/p&gt;
&lt;p&gt;Over that two year period, Arquillian and our vision for it has matured dramatically. The goal, however, has remained the same: to make integration (and functional) tests as simple to write as unit tests. Now we just want it to be way more powerful and handle a whole lot more scenarios.&lt;/p&gt;
&lt;p&gt;The community has also grown significantly. Over 100 people have contributed to either Arquillian or ShrinkWrap. Several of those contributors are leading one or more modules. Not only do the contributions of these community members help the projects move forward, they bring ideas that take Arquillian down new pathways in pursuit of more advanced, capable and intelligent tests while at the same time driving down the effort to write them.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Thanks to all of you who have contributed to the Arquillian project!!&lt;/strong&gt; The &lt;a href=&quot;http://arquillian.org/community/contributors&quot;&gt;army of contributors&lt;/a&gt; are the true heros of the Arquillian invasion!&lt;/p&gt;
&lt;p&gt;Now for some details&amp;#8230;&lt;/p&gt;
&lt;p&gt;Since 1.0.0.CR8, the following component upgrades have been introduced, which are defined in the Arquillian &lt;acronym title=&quot;Bill of Materials&quot;&gt;BOM&lt;/acronym&gt;:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;ShrinkWrap 1.0.0&lt;/li&gt;
	&lt;li&gt;ShrinkWrap Resolver 1.0.0-beta-6&lt;/li&gt;
	&lt;li&gt;ShrinkWrap Descriptors 2.0.0-alpha-2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The ShrinkWrap Descriptor 2 release is quite different from the 1.x series, but it&amp;#8217;s the way forward :)&lt;/p&gt;
&lt;p&gt;The implementation jar, which previously had the artifactId &lt;code&gt;shrinkwrap-descriptors-impl&lt;/code&gt;, has been split into three artifacts:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;code&gt;shrinkwrap-descriptors-impl-javaee&lt;/code&gt; &amp;#8211; Java EE 5 &amp;amp; 6 Descriptors&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;shrinkwrap-descriptors-impl-jboss&lt;/code&gt; &amp;#8211; JBoss AS Specific Descriptors&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;shrinkwrap-descriptors-impl-misc&lt;/code&gt; &amp;#8211; Jetty Descriptors&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When upgrading to ShrinkWrap Descriptor 2, expect all package names and fluent APIs to have changed. The API still has the same feel, so it shouldn&amp;#8217;t be too hard to make the transition. Here&amp;#8217;s an example of how the new API looks:&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;Descriptors.create(BeansDescriptor.class)&amp;#x000A;	.createDecorators().clazz(MyDecorator.class.getName()).up()&amp;#x000A;	.createAlternatives().clazz(MyAlternative.class.getName()).up()&amp;#x000A;	.exportAsString()&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;
        &lt;a href=&quot;http://arquillian.org/modules/core-platform/&quot;&gt;Arquillian Core&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.0.0.Final
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-core/commit/624eb04a4e27bca1d80345fdf772adf514794ec3.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-04-10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Aslak Knutsen&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;ShrinkWrap Core &amp;#8211; 1.0.0&lt;/li&gt;
          &lt;li&gt;ShrinkWrap Descriptors &amp;#8211; 2.0.0-alpha-2&lt;/li&gt;
          &lt;li&gt;JUnit &amp;#8211; 4.8.1&lt;/li&gt;
          &lt;li&gt;TestNG &amp;#8211; 5.14.6&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian
    &amp;raquo;
    arquillian-bom
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/arquillian-bom/1.0.0.Final/arquillian-bom-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.config
    &amp;raquo;
    arquillian-config-api
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-api/1.0.0.Final/arquillian-config-api-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-api/1.0.0.Final/arquillian-config-api-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.config
    &amp;raquo;
    arquillian-config-impl-base
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-impl-base/1.0.0.Final/arquillian-config-impl-base-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-impl-base/1.0.0.Final/arquillian-config-impl-base-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.config
    &amp;raquo;
    arquillian-config-spi
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-spi/1.0.0.Final/arquillian-config-spi-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-spi/1.0.0.Final/arquillian-config-spi-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-container-impl-base
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-impl-base/1.0.0.Final/arquillian-container-impl-base-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-impl-base/1.0.0.Final/arquillian-container-impl-base-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-container-spi
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-spi/1.0.0.Final/arquillian-container-spi-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-spi/1.0.0.Final/arquillian-container-spi-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-container-test-api
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-api/1.0.0.Final/arquillian-container-test-api-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-api/1.0.0.Final/arquillian-container-test-api-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-container-test-impl-base
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-impl-base/1.0.0.Final/arquillian-container-test-impl-base-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-impl-base/1.0.0.Final/arquillian-container-test-impl-base-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-container-test-spi
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-spi/1.0.0.Final/arquillian-container-test-spi-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-spi/1.0.0.Final/arquillian-container-test-spi-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.core
    &amp;raquo;
    arquillian-core-api
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-api/1.0.0.Final/arquillian-core-api-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-api/1.0.0.Final/arquillian-core-api-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.core
    &amp;raquo;
    arquillian-core-impl-base
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-impl-base/1.0.0.Final/arquillian-core-impl-base-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-impl-base/1.0.0.Final/arquillian-core-impl-base-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.core
    &amp;raquo;
    arquillian-core-spi
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-spi/1.0.0.Final/arquillian-core-spi-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-spi/1.0.0.Final/arquillian-core-spi-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.junit
    &amp;raquo;
    arquillian-junit-container
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-container/1.0.0.Final/arquillian-junit-container-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-container/1.0.0.Final/arquillian-junit-container-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.junit
    &amp;raquo;
    arquillian-junit-core
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-core/1.0.0.Final/arquillian-junit-core-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-core/1.0.0.Final/arquillian-junit-core-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.junit
    &amp;raquo;
    arquillian-junit-standalone
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-standalone/1.0.0.Final/arquillian-junit-standalone-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-standalone/1.0.0.Final/arquillian-junit-standalone-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.protocol
    &amp;raquo;
    arquillian-protocol-jmx
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-jmx/1.0.0.Final/arquillian-protocol-jmx-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-jmx/1.0.0.Final/arquillian-protocol-jmx-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.protocol
    &amp;raquo;
    arquillian-protocol-servlet
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-servlet/1.0.0.Final/arquillian-protocol-servlet-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-servlet/1.0.0.Final/arquillian-protocol-servlet-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.test
    &amp;raquo;
    arquillian-test-api
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-api/1.0.0.Final/arquillian-test-api-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-api/1.0.0.Final/arquillian-test-api-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.test
    &amp;raquo;
    arquillian-test-impl-base
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-impl-base/1.0.0.Final/arquillian-test-impl-base-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-impl-base/1.0.0.Final/arquillian-test-impl-base-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.test
    &amp;raquo;
    arquillian-test-spi
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-spi/1.0.0.Final/arquillian-test-spi-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-spi/1.0.0.Final/arquillian-test-spi-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.testenricher
    &amp;raquo;
    arquillian-testenricher-cdi
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-cdi/1.0.0.Final/arquillian-testenricher-cdi-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-cdi/1.0.0.Final/arquillian-testenricher-cdi-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.testenricher
    &amp;raquo;
    arquillian-testenricher-ejb
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-ejb/1.0.0.Final/arquillian-testenricher-ejb-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-ejb/1.0.0.Final/arquillian-testenricher-ejb-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.testenricher
    &amp;raquo;
    arquillian-testenricher-initialcontext
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-initialcontext/1.0.0.Final/arquillian-testenricher-initialcontext-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-initialcontext/1.0.0.Final/arquillian-testenricher-initialcontext-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.testenricher
    &amp;raquo;
    arquillian-testenricher-resource
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-resource/1.0.0.Final/arquillian-testenricher-resource-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-resource/1.0.0.Final/arquillian-testenricher-resource-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.testng
    &amp;raquo;
    arquillian-testng-container
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-container/1.0.0.Final/arquillian-testng-container-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-container/1.0.0.Final/arquillian-testng-container-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.testng
    &amp;raquo;
    arquillian-testng-core
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-core/1.0.0.Final/arquillian-testng-core-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-core/1.0.0.Final/arquillian-testng-core-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.testng
    &amp;raquo;
    arquillian-testng-standalone
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-standalone/1.0.0.Final/arquillian-testng-standalone-1.0.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-standalone/1.0.0.Final/arquillian-testng-standalone-1.0.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;17&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Bug&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-619&quot;&gt;ARQ-619&lt;/a&gt; -         If multiple DeployableContainers are in the classpath the exception message is currently incorrect&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-632&quot;&gt;ARQ-632&lt;/a&gt; -         org.jboss.arquillian.container.spi.client.protocol.metadata.JMXContext should close the JMXConnector when use of MBeanServerConnection is complete&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-649&quot;&gt;ARQ-649&lt;/a&gt; -         Testsuite hangs using as7-managed-container&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-857&quot;&gt;ARQ-857&lt;/a&gt; -         Verify Arquillian Core can run on JDK 1.5&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Component  Upgrade&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-581&quot;&gt;ARQ-581&lt;/a&gt; -         Upgrade to ShrinkWrap Descriptors 1.1.0-beta-1&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-655&quot;&gt;ARQ-655&lt;/a&gt; -         Upgrade Arquillian-Bom to consume the new ShrinkWrap-Bom's&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Enhancement&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-618&quot;&gt;ARQ-618&lt;/a&gt; -         ValidationException &quot;DeploymentScenario contains targets not matching any defined Container in the registry.&quot; could be even more clear&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-842&quot;&gt;ARQ-842&lt;/a&gt; -         Better error message when container configuration cannot be read&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Feature Request&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-686&quot;&gt;ARQ-686&lt;/a&gt; -         Remove parent artifact from Arquillian-BOM&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-807&quot;&gt;ARQ-807&lt;/a&gt; -         Report unused configured container properties&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-840&quot;&gt;ARQ-840&lt;/a&gt; -         Should allow to define a Container configuration with only default options&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-852&quot;&gt;ARQ-852&lt;/a&gt; -         Remove examples in Core&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-853&quot;&gt;ARQ-853&lt;/a&gt; -         Verify SPI JavaDoc&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-858&quot;&gt;ARQ-858&lt;/a&gt; -         Should validate that a TestClass does not contain multiple same named Archives with the same Target&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Task&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-565&quot;&gt;ARQ-565&lt;/a&gt; -         Triage Arquillian JIRA before 1.0.0.Final&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-809&quot;&gt;ARQ-809&lt;/a&gt; -         Arquillian Build Broken Using Default Config&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/tommysdk&quot;&gt;Tommy Tynjä&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/04/05/arquillian-core-1-0-0-CR8/</id>
    <title>Arquillian Core 1.0.0.CR8 Released</title>
    <updated>2012-04-06T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/04/05/arquillian-core-1-0-0-CR8/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="platform" />
    <category scheme="http://arquillian.org/blog/tags" term="core" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.CR8 release of the Arquillian Core component!
        
        What is Arquillian?
        Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.
        Release details
        
          
            
              Component
           ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.CR8&lt;/em&gt; release of the &lt;em&gt;Arquillian Core&lt;/em&gt; component!&lt;/p&gt;
        
        &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
        &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
        &lt;h3&gt;Release details&lt;/h3&gt;
        &lt;table class=&quot;table table-bordered table-striped&quot;&gt;
          &lt;tbody&gt;
            &lt;tr&gt;
              &lt;th&gt;Component&lt;/th&gt;
              &lt;td&gt;
                &lt;a href=&quot;http://arquillian.org/modules/core-platform/&quot;&gt;Arquillian Core&lt;/a&gt;
              &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;th&gt;Version&lt;/th&gt;
              &lt;td&gt;
                1.0.0.CR8
                &lt;span class=&quot;label tag&quot;&gt;
                  &lt;a href=&quot;https://github.com/arquillian/arquillian-core/commit/f5521ecf83d775f50d11d9b9ced02b4d69eaec9f.html&quot;&gt;view tag&lt;/a&gt;
                &lt;/span&gt;
              &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;th&gt;Release date&lt;/th&gt;
              &lt;td&gt;2012-04-05&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;th&gt;Released by&lt;/th&gt;
              &lt;td&gt;Aslak Knutsen&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;th&gt;Compiled against&lt;/th&gt;
              &lt;td&gt;
                &lt;ul class=&quot;unstyled&quot;&gt;
                  &lt;li&gt;ShrinkWrap Core &amp;#8211; 1.0.0-cr-1&lt;/li&gt;
                  &lt;li&gt;ShrinkWrap Descriptors &amp;#8211; 1.1.0-beta-1&lt;/li&gt;
                  &lt;li&gt;ShrinkWrap Resolvers &amp;#8211; 1.0.0-beta-5&lt;/li&gt;
                  &lt;li&gt;JUnit &amp;#8211; 4.8.1&lt;/li&gt;
                  &lt;li&gt;TestNG &amp;#8211; 5.14.6&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/td&gt;
            &lt;/tr&gt;
          &lt;/tbody&gt;
        &lt;/table&gt;
        &lt;h3&gt;
          Published artifacts
          &lt;small&gt;org.jboss.arquillian&lt;/small&gt;
        &lt;/h3&gt;
        &lt;ul&gt;
          &lt;li&gt;
            org.jboss.arquillian
            &amp;raquo;
            arquillian-bom
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/arquillian-bom/1.0.0.CR8/arquillian-bom-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.config
            &amp;raquo;
            arquillian-config-api
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-api/1.0.0.CR8/arquillian-config-api-1.0.0.CR8.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-api/1.0.0.CR8/arquillian-config-api-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.config
            &amp;raquo;
            arquillian-config-impl-base
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-impl-base/1.0.0.CR8/arquillian-config-impl-base-1.0.0.CR8.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-impl-base/1.0.0.CR8/arquillian-config-impl-base-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.config
            &amp;raquo;
            arquillian-config-spi
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-spi/1.0.0.CR8/arquillian-config-spi-1.0.0.CR8.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-spi/1.0.0.CR8/arquillian-config-spi-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.container
            &amp;raquo;
            arquillian-container-impl-base
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-impl-base/1.0.0.CR8/arquillian-container-impl-base-1.0.0.CR8.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-impl-base/1.0.0.CR8/arquillian-container-impl-base-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.container
            &amp;raquo;
            arquillian-container-spi
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-spi/1.0.0.CR8/arquillian-container-spi-1.0.0.CR8.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-spi/1.0.0.CR8/arquillian-container-spi-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.container
            &amp;raquo;
            arquillian-container-test-api
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-api/1.0.0.CR8/arquillian-container-test-api-1.0.0.CR8.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-api/1.0.0.CR8/arquillian-container-test-api-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.container
            &amp;raquo;
            arquillian-container-test-impl-base
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-impl-base/1.0.0.CR8/arquillian-container-test-impl-base-1.0.0.CR8.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-impl-base/1.0.0.CR8/arquillian-container-test-impl-base-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.container
            &amp;raquo;
            arquillian-container-test-spi
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-spi/1.0.0.CR8/arquillian-container-test-spi-1.0.0.CR8.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-spi/1.0.0.CR8/arquillian-container-test-spi-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.core
            &amp;raquo;
            arquillian-core-api
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-api/1.0.0.CR8/arquillian-core-api-1.0.0.CR8.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-api/1.0.0.CR8/arquillian-core-api-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.core
            &amp;raquo;
            arquillian-core-impl-base
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-impl-base/1.0.0.CR8/arquillian-core-impl-base-1.0.0.CR8.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-impl-base/1.0.0.CR8/arquillian-core-impl-base-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.core
            &amp;raquo;
            arquillian-core-spi
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-spi/1.0.0.CR8/arquillian-core-spi-1.0.0.CR8.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-spi/1.0.0.CR8/arquillian-core-spi-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.junit
            &amp;raquo;
            arquillian-junit-container
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-container/1.0.0.CR8/arquillian-junit-container-1.0.0.CR8.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-container/1.0.0.CR8/arquillian-junit-container-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.junit
            &amp;raquo;
            arquillian-junit-core
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-core/1.0.0.CR8/arquillian-junit-core-1.0.0.CR8.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-core/1.0.0.CR8/arquillian-junit-core-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.junit
            &amp;raquo;
            arquillian-junit-standalone
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-standalone/1.0.0.CR8/arquillian-junit-standalone-1.0.0.CR8.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-standalone/1.0.0.CR8/arquillian-junit-standalone-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.protocol
            &amp;raquo;
            arquillian-protocol-jmx
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-jmx/1.0.0.CR8/arquillian-protocol-jmx-1.0.0.CR8.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-jmx/1.0.0.CR8/arquillian-protocol-jmx-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.protocol
            &amp;raquo;
            arquillian-protocol-servlet
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-servlet/1.0.0.CR8/arquillian-protocol-servlet-1.0.0.CR8.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-servlet/1.0.0.CR8/arquillian-protocol-servlet-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.test
            &amp;raquo;
            arquillian-test-api
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-api/1.0.0.CR8/arquillian-test-api-1.0.0.CR8.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-api/1.0.0.CR8/arquillian-test-api-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.test
            &amp;raquo;
            arquillian-test-impl-base
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-impl-base/1.0.0.CR8/arquillian-test-impl-base-1.0.0.CR8.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-impl-base/1.0.0.CR8/arquillian-test-impl-base-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.test
            &amp;raquo;
            arquillian-test-spi
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-spi/1.0.0.CR8/arquillian-test-spi-1.0.0.CR8.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-spi/1.0.0.CR8/arquillian-test-spi-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.testenricher
            &amp;raquo;
            arquillian-testenricher-cdi
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-cdi/1.0.0.CR8/arquillian-testenricher-cdi-1.0.0.CR8.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-cdi/1.0.0.CR8/arquillian-testenricher-cdi-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.testenricher
            &amp;raquo;
            arquillian-testenricher-ejb
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-ejb/1.0.0.CR8/arquillian-testenricher-ejb-1.0.0.CR8.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-ejb/1.0.0.CR8/arquillian-testenricher-ejb-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.testenricher
            &amp;raquo;
            arquillian-testenricher-initialcontext
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-initialcontext/1.0.0.CR8/arquillian-testenricher-initialcontext-1.0.0.CR8.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-initialcontext/1.0.0.CR8/arquillian-testenricher-initialcontext-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.testenricher
            &amp;raquo;
            arquillian-testenricher-resource
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-resource/1.0.0.CR8/arquillian-testenricher-resource-1.0.0.CR8.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-resource/1.0.0.CR8/arquillian-testenricher-resource-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.testng
            &amp;raquo;
            arquillian-testng-container
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-container/1.0.0.CR8/arquillian-testng-container-1.0.0.CR8.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-container/1.0.0.CR8/arquillian-testng-container-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.testng
            &amp;raquo;
            arquillian-testng-core
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-core/1.0.0.CR8/arquillian-testng-core-1.0.0.CR8.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-core/1.0.0.CR8/arquillian-testng-core-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.testng
            &amp;raquo;
            arquillian-testng-standalone
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-standalone/1.0.0.CR8/arquillian-testng-standalone-1.0.0.CR8.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-standalone/1.0.0.CR8/arquillian-testng-standalone-1.0.0.CR8.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
        &lt;h3&gt;
          Release notes and resolved issues
          &lt;small&gt;9&lt;/small&gt;
        &lt;/h3&gt;
        &lt;p&gt;Support for Multiple Protocol Contexts within a Deployment&lt;/p&gt;
        &lt;dl&gt;
          &lt;dt&gt;Bug&lt;/dt&gt;
          &lt;dd&gt;
            &lt;ul class=&quot;unstyled&quot;&gt;
              &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-670&quot;&gt;ARQ-670&lt;/a&gt; -         Arquillian Servlet's context root should be &quot;test&quot;, not &quot;test.war&quot;, in EAR&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-724&quot;&gt;ARQ-724&lt;/a&gt; -         Upgrade to ShrinkWrap Resolver 1.1.0-alpha-2 in arquillian-parent.pom&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-748&quot;&gt;ARQ-748&lt;/a&gt; -         Update Arquillian test dependencies to be able to do a clean build against Maven Central&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/dd&gt;
        &lt;/dl&gt;
        &lt;dl&gt;
          &lt;dt&gt;Enhancement&lt;/dt&gt;
          &lt;dd&gt;
            &lt;ul class=&quot;unstyled&quot;&gt;
              &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-715&quot;&gt;ARQ-715&lt;/a&gt; -         Add a getter for ProtocolMetaData.contexts&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/dd&gt;
        &lt;/dl&gt;
        &lt;dl&gt;
          &lt;dt&gt;Feature Request&lt;/dt&gt;
          &lt;dd&gt;
            &lt;ul class=&quot;unstyled&quot;&gt;
              &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-792&quot;&gt;ARQ-792&lt;/a&gt; -         Honor system property for debugging Arquillian internals&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-848&quot;&gt;ARQ-848&lt;/a&gt; -         Should support multiple Protocol Context within one Deployment&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-849&quot;&gt;ARQ-849&lt;/a&gt; -         Should not attempt to deploy to a Container that is not started&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-850&quot;&gt;ARQ-850&lt;/a&gt; -         Should support custom container mode&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/dd&gt;
        &lt;/dl&gt;
        &lt;p&gt;
          Thanks to the following list of contributors:
          &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/kpiwko&quot;&gt;Karel Piwko&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/sewatech&quot;&gt;Alexis Hassler&lt;/a&gt;
        &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/03/29/arquillian-project-bridge/</id>
    <title>arquillian.org: The Bridge of the Arquillian Project</title>
    <updated>2012-03-30T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/03/29/arquillian-project-bridge/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="announcement" />
    <category scheme="http://arquillian.org/blog/tags" term="website" />
    <category scheme="http://arquillian.org/blog/tags" term="guides" />
    <category scheme="http://arquillian.org/blog/tags" term="jbosscentral" />
    <category scheme="http://arquillian.org/blog/tags" term="2012" />
    <category scheme="http://arquillian.org/blog/tags" term="nonrelease" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The short version
Arquillian now has guides! If you want to know how to get started with Arquillian, head over to arquillian.org to check them out&#8230;in one of 8 languages! If you want to make them better, fork the website project and get involved.
The slightly longer version
When I thought of how to present arquillian.org, naturally images of alien spacecraft came to mind. These days, there&#8217;s a lot of activity flowing in an out of the Arquillian mothership. To manage and make sense of all that information, we were in need of a central view of everything. In other words, we needed......
    </summary>
    <content type="html">
      &lt;h3&gt;The short version&lt;/h3&gt;
&lt;p&gt;Arquillian now has &lt;a href=&quot;http://arquillian.org/guides&quot;&gt;guides&lt;/a&gt;! If you want to know how to get started with Arquillian, head over to &lt;a href=&quot;http://arquillian.org&quot;&gt;arquillian.org&lt;/a&gt; to check them out&amp;#8230;in one of 8 languages! If you want to make them better, fork the &lt;a href=&quot;https://github.com/arquillian/arquillian.github.com&quot;&gt;website project&lt;/a&gt; and get involved.&lt;/p&gt;
&lt;h3&gt;The slightly longer version&lt;/h3&gt;
&lt;p&gt;When I thought of how to present arquillian.org, naturally images of alien spacecraft came to mind. These days, there&amp;#8217;s a lot of activity flowing in an out of the Arquillian mothership. To manage and make sense of all that information, we were in need of a central view of everything. In other words, we needed to get to &amp;#8220;the bridge&amp;#8221; of the ship. From there we can monitor activity, publish the lastest information, collect and exchange ideas and decide which actions to take.&lt;/p&gt;
&lt;p&gt;Well, we&amp;#8217;ve made it, finally. Welcome to &lt;a href=&quot;http://arquillian.org&quot;&gt;arquillian.org&lt;/a&gt;. As Bob McWhirter likes to say, &amp;#8220;You&amp;#8217;re soaking in it.&amp;#8221;&lt;/p&gt;
&lt;h3&gt;The full story&lt;/h3&gt;
&lt;p&gt;We&amp;#8217;ve been thrilled to witness the impact Arquillian has made over these last two years and the agility it&amp;#8217;s brought to the Java ecosystem. There&amp;#8217;s no question, the Arquillian invasion is in full force.&lt;/p&gt;
&lt;p&gt;But even as we stood on stage at JavaOne to &lt;a href=&quot;http://arquillian.org/blog/2011/10/02/arquillian-wins-a-duke-choice-award&quot;&gt;receive a Duke&amp;#8217;s Choice Award&lt;/a&gt; for Arquillian on behalf of our awesome community, I kept thinking about how much more successful it could be. I mean, if developers have been able to figure out how to use and build on Arquillian so far, just imagine how many more developers would use it&amp;#8212;and how much easier it would be for them&amp;#8212;if the project &lt;em&gt;actually&lt;/em&gt; had some decent guides to get started.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We felt your pain. We heard your voice.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;That&amp;#8217;s why we decided at JavaOne it was time to get serious about closing this gap by writing several step-by-step guides. We didn&amp;#8217;t leave off there, though. We recognized the whole experience of discovering Arquillian for the first time (or coming back to it after a break) needs to be extremely easy and rewarding. So after we drafted the guides, we molded them into a visually appealing website with a call to action button you can&amp;#8217;t possibly miss. We then called on our noble community members to volunteer to translate those guides into as many languages as possible. And they came through!&lt;/p&gt;
&lt;h4&gt;The long road&lt;/h4&gt;
&lt;p&gt;Ever since then, we have been trying to get these guides into your hands. It&amp;#8217;s been a long and rather ridiculous journey. I describe it as ridiculous for contrasting reasons.&lt;/p&gt;
&lt;p&gt;On one hand, the reason we couldn&amp;#8217;t make it available was ridiculous. But that&amp;#8217;s a long and boring story. On a positive note, it was ridiculous to see how much effort the community has contributed to driving this vision to make Arquillian easy to adopt and use&amp;#8212;&lt;em&gt;to a website that wasn&amp;#8217;t even being published, no less&lt;/em&gt;. It certainly demonstrated a lot of spirit. That&amp;#8217;s why we kept pressing against that first ridiculous reason to get it launched :)&lt;/p&gt;
&lt;h4&gt;The final stretch&lt;/h4&gt;
&lt;p&gt;Over the past several weeks, I&amp;#8217;ve been working with Sarah and Aslak (with blood, sweat and tears) to get this website ready to publish. We have curated as much information as we can find&amp;#8212;at least so far&amp;#8212;and organized it into a website that&amp;#8217;s going to give you a view into the Arquillian project like you&amp;#8217;ve never seen before. Heck, even while building the website, I was stunned to finally see a list of modules, releases and changelogs in one place for the first time. And now, it&amp;#8217;s finally out there.&lt;/p&gt;
&lt;h4&gt;A new beginning&lt;/h4&gt;
&lt;p&gt;This is just the beginning. By no means do I consider the website to be set in stone for you just to look at (though I need a few days off to sleep). Quite the opposite. arquillian.org is an open book. It&amp;#8217;s a Creative Commons (CC BY-SA 3.0) open source project hosted on, you guessed it, github. Clone (or fork) the repository named &lt;a href=&quot;https://github.com/arquillian/arquillian.github.com&quot;&gt;arquillian.github.com&lt;/a&gt; and checkout the &lt;a href=&quot;https://github.com/arquillian/arquillian.github.com/#readme&quot;&gt;README&lt;/a&gt;. The project comes complete with an &lt;a href=&quot;https://github.com/arquillian/arquillian.github.com/issues&quot;&gt;issue tracker&lt;/a&gt; and &lt;a href=&quot;https://github.com/arquillian/arquillian.github.com/wiki&quot;&gt;wiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s important to recognize that the website needs to be a part of the Arquillian project just like any other module. After all, the project is only as good as the information we put out there. I&amp;#8217;m envisioning have contributors that join the website team much the same as they might join a module. The group will be a cross section of design, outreach, messaging, documentation and, of course, automation.&lt;/p&gt;
&lt;p&gt;We got it spun up (nearly writing it twice) because we knew Arquillian was severely lacking in good documentation and reference material, but we want you to be as involved in it as you like.&lt;/p&gt;
&lt;p&gt;The website reflects the quality of the software&amp;#8212;especially in the eyes of new users&amp;#8212;and therefore it represents &lt;em&gt;all of our work&lt;/em&gt;. That&amp;#8217;s why my favorite page on the site is the &lt;a href=&quot;http://arquillian.org/community/contributors/&quot;&gt;list of contributors&lt;/a&gt; ;) It&amp;#8217;s all about you, the nobles.&lt;/p&gt;
&lt;h3&gt;What&amp;#8217;s inside&lt;/h3&gt;
&lt;p&gt;Before I close, I want to mention some key highlights of the website. Then, I&amp;#8217;ll leave you to explore and discover the rest :)&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;All content managed in git and hosted on Github&lt;/li&gt;
	&lt;li&gt;Baked with &lt;a href=&quot;http://awestruct.org&quot;&gt;Awestruct&lt;/a&gt;, a static site generator&lt;/li&gt;
	&lt;li&gt;A data curating pipeline written in Ruby (JRuby) as Awestruct extensions&lt;/li&gt;
	&lt;li&gt;Pages written in Haml (with a mix of Textile)&lt;/li&gt;
	&lt;li&gt;Easy to read, step-by-step guides (written in Textile, changelog retrieved via git)&lt;/li&gt;
	&lt;li&gt;Blogs written in Textile (or Markdown)&lt;/li&gt;
	&lt;li&gt;Guest blogs and improvements integrated via pull requests&lt;/li&gt;
	&lt;li&gt;Layout and components built on Twitter Bootstrap and jQuery&lt;/li&gt;
	&lt;li&gt;CSS3 goodness and cross-browser support compiled by SASS&lt;/li&gt;
	&lt;li&gt;Designed to be responsive for mobile phones and tablets (give it a try!)&lt;/li&gt;
	&lt;li&gt;Module, release and commit information mined from git repositories&lt;/li&gt;
	&lt;li&gt;Auto-generated, in-depth blog entry plus custom notes for each release (&lt;a href=&quot;http://arquillian.org/blog/2012/03/27/arquillian-extension-drone-1-0-0-CR4&quot;&gt;example&lt;/a&gt;)&lt;/li&gt;
	&lt;li&gt;Detailed summary page for each module (repository, versions, dependencies, contributors, etc)&lt;/li&gt;
	&lt;li&gt;Contributor information backed by Github and Gravatar&lt;/li&gt;
	&lt;li&gt;Dynamic information retrieved via json-p (tunneled through jgfeed when necessary)&lt;/li&gt;
	&lt;li&gt;Upcoming talks on Arquillian syndicated from Lanyrd&lt;/li&gt;
	&lt;li&gt;Blogs and articles about Arquillian syndicated from Diigo&lt;/li&gt;
	&lt;li&gt;Under the watchful eye of Ike (as you can see in the upper-left hand corner)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are curious about more details, check out the &lt;a href=&quot;https://github.com/arquillian/arquillian.github.com/wiki/Information-Architecture&quot;&gt;Information Architecture&lt;/a&gt; page I drafted on the wiki about the site. Take a look at the &lt;a href=&quot;https://github.com/arquillian/arquillian.github.com&quot;&gt;README&lt;/a&gt; if you want to build the site locally.&lt;/p&gt;
&lt;h3&gt;The vision&lt;/h3&gt;
&lt;p&gt;Our vision is to automate as much as the documentation as we can possibly accomplish. It ain&amp;#8217;t (just) because we&amp;#8217;re lazy. It&amp;#8217;s because we know it&amp;#8217;s the only way to get you the most accurate, up to date information about Arquillian and to reasonably manage the growing Arquillian ecosystem. In other words, we need to be in &amp;#8220;the bridge&amp;#8221;. And now we have it. Just check out the &lt;a href=&quot;http://arquillian.org/modules/&quot;&gt;module pages&lt;/a&gt;. What a start!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Use it. Enjoy it. Pass it on. And fork it if you want it to be better.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;If words could do&lt;/h3&gt;
&lt;p&gt;I want to give a huge thanks to Sarah White, who has stuck with me through trying times to get this website looking visually stunning, organized and logical (and for just putting up with my intense focus on this project).&lt;/p&gt;
&lt;p&gt;I also want to recognize the following translators, who have brought the guides to 8 languages in total: Markus Eisele (German), Antoine Sabot-Durand and Badr El Houari (French), Takayuki Konishi (Japanese), Hantsy Bai (Simplified Chinese), Bartosz Majsak (Polish), Jose Rodolfo Freitas (Portuguese) and Tommy Tynja (Swedish). Arquillian is forever changed because of your effort.&lt;/p&gt;
&lt;p&gt;Finally, I want to thank all of the contributors who have embraced writing release blog entries&amp;#8212;Vineet Reynolds, Bartosz Majsak, Karel Piwko and Lukas Fryc&amp;#8212;and contributing guides&amp;#8212;Karel Piwko, Paul Bakker, Lincoln Baxter and Marek Schmidt.&lt;/p&gt;
&lt;p&gt;That&amp;#8217;s exactly the participation I envision will make this website a key communication hub of the Arquillian project. Let&amp;#8217;s keep the invasion strong!&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/03/27/arquillian-extension-drone-1-0-0-CR4/</id>
    <title>Arquillian Drone Extension 1.0.0.CR4 Released</title>
    <updated>2012-03-28T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/03/27/arquillian-extension-drone-1-0-0-CR4/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="drone" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.CR4 release of the Arquillian Drone Extension component!
        Some of the highlights in this release
        Upgraded underlying Selenium to 2.20.0
        Simplified usage for Arquillian Drone with WebDriver and Selenium. We provide dependency chain artifacts which will grab all required dependencies. Use either one of them you need, both of them or even combined with Arquillian Graphene.
        pom.xml
        &lt;dependencyManagement&gt;&#x000A;    &lt;dependencies&gt;&#x000A;        &lt;!-- clip --&gt;&#x000A;        &lt;dependency&gt;&#x000A;            &lt;groupId&gt;org.jboss.arquillian.extension&lt;/groupId&gt;&#x000A;     ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.CR4&lt;/em&gt; release of the &lt;em&gt;Arquillian Drone Extension&lt;/em&gt; component!&lt;/p&gt;
&lt;h3&gt;Some of the highlights in this release&lt;/h3&gt;
&lt;p&gt;Upgraded underlying &lt;strong&gt;Selenium&lt;/strong&gt; to 2.20.0&lt;/p&gt;
&lt;p&gt;Simplified usage for Arquillian Drone with WebDriver and Selenium. We provide dependency chain artifacts which will grab all required dependencies. Use either one of them you need, both of them or even combined with Arquillian Graphene.&lt;/p&gt;
&lt;div class=&quot;filename&quot;&gt;pom.xml&lt;/div&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;dependencyManagement&amp;gt;&amp;#x000A;    &amp;lt;dependencies&amp;gt;&amp;#x000A;        &amp;lt;!-- clip --&amp;gt;&amp;#x000A;        &amp;lt;dependency&amp;gt;&amp;#x000A;            &amp;lt;groupId&amp;gt;org.jboss.arquillian.extension&amp;lt;/groupId&amp;gt;&amp;#x000A;            &amp;lt;artifactId&amp;gt;arquillian-drone-bom&amp;lt;/artifactId&amp;gt;&amp;#x000A;            &amp;lt;version&amp;gt;1.0.0.CR4&amp;lt;/version&amp;gt;&amp;#x000A;            &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;&amp;#x000A;            &amp;lt;scope&amp;gt;import&amp;lt;/scope&amp;gt;&amp;#x000A;        &amp;lt;/dependency&amp;gt;&amp;#x000A;    &amp;lt;/dependencies&amp;gt;&amp;#x000A;&amp;lt;/dependencyManagement&amp;gt;    &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;dependencies&amp;gt;&amp;#x000A;    &amp;lt;!-- clip --&amp;gt;&amp;#x000A;    &amp;lt;!-- this is only dependency you need to add &amp;#x000A;         in order to use Arquillian Drone with WebDriver in your project --&amp;gt; &amp;#x000A;    &amp;lt;dependency&amp;gt;&amp;#x000A;        &amp;lt;groupId&amp;gt;org.jboss.arquillian.extension&amp;lt;/groupId&amp;gt;&amp;#x000A;        &amp;lt;artifactId&amp;gt;arquillian-drone-webdriver-depchain&amp;lt;/artifactId&amp;gt;&amp;#x000A;        &amp;lt;version&amp;gt;1.0.0.CR4&amp;lt;/version&amp;gt;&amp;#x000A;        &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;&amp;#x000A;        &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;&amp;#x000A;    &amp;lt;/dependency&amp;gt;      &amp;#x000A;    &amp;lt;!-- clip --&amp;gt;&amp;#x000A;    &amp;lt;!-- this is only dependency you need to add &amp;#x000A;         in order to use Arquillian Drone with Selenium in your project --&amp;gt; &amp;#x000A;    &amp;lt;dependency&amp;gt;&amp;#x000A;        &amp;lt;groupId&amp;gt;org.jboss.arquillian.extension&amp;lt;/groupId&amp;gt;&amp;#x000A;        &amp;lt;artifactId&amp;gt;arquillian-drone-selenium-depchain&amp;lt;/artifactId&amp;gt;&amp;#x000A;        &amp;lt;version&amp;gt;1.0.0.CR4&amp;lt;/version&amp;gt;&amp;#x000A;        &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;&amp;#x000A;        &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;&amp;#x000A;    &amp;lt;/dependency&amp;gt;     &amp;#x000A;&amp;lt;/dependencies&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;
        &lt;a href=&quot;http://arquillian.org/modules/drone-extension/&quot;&gt;Arquillian Drone Extension&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.0.0.CR4
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-drone/commit/51bee6fc66f521191d6383604ba8aa90addb3849.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-03-27&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Aslak Knutsen&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.0.CR7&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-api
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-api/1.0.0.CR4/arquillian-drone-api-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-api/1.0.0.CR4/arquillian-drone-api-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-bom
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-bom/1.0.0.CR4/arquillian-drone-bom-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-configuration
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-configuration/1.0.0.CR4/arquillian-drone-configuration-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-configuration/1.0.0.CR4/arquillian-drone-configuration-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-impl
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-impl/1.0.0.CR4/arquillian-drone-impl-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-impl/1.0.0.CR4/arquillian-drone-impl-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-selenium
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium/1.0.0.CR4/arquillian-drone-selenium-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium/1.0.0.CR4/arquillian-drone-selenium-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-selenium-depchain
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-depchain/1.0.0.CR4/arquillian-drone-selenium-depchain-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-selenium-server
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-server/1.0.0.CR4/arquillian-drone-selenium-server-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-server/1.0.0.CR4/arquillian-drone-selenium-server-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-spi
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-spi/1.0.0.CR4/arquillian-drone-spi-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-spi/1.0.0.CR4/arquillian-drone-spi-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-webdriver
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver/1.0.0.CR4/arquillian-drone-webdriver-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver/1.0.0.CR4/arquillian-drone-webdriver-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-drone-webdriver-depchain
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver-depchain/1.0.0.CR4/arquillian-drone-webdriver-depchain-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;5&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Component  Upgrade&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-749&quot;&gt;ARQ-749&lt;/a&gt; -         Update JBoss Parent to 8&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-750&quot;&gt;ARQ-750&lt;/a&gt; -         Update Selenium version to 2.20.0&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-820&quot;&gt;ARQ-820&lt;/a&gt; -         Update Arquillian Core to 1.0.0.CR7&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Enhancement&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-821&quot;&gt;ARQ-821&lt;/a&gt; -         Provide a dependency chain to make usage of Drone with Selenium and WebDriver easier&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/kpiwko&quot;&gt;Karel Piwko&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/03/26/arquillian-container-openshift-1-0-0-Beta1/</id>
    <title>Arquillian Container OpenShift 1.0.0.Beta1 Released</title>
    <updated>2012-03-27T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/03/26/arquillian-container-openshift-1-0-0-Beta1/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="container-adapter" />
    <category scheme="http://arquillian.org/blog/tags" term="openshift" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Beta1 release of the Arquillian Container OpenShift component!
        Some of the highlights in this release
        Better integration for usage in continous integration servers. You can now specify the path to the SSH identity file and disable SSH Strict host checking if needed:
        arquillian.xml
        &lt;arquillian xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&#x000A;  xmlns="http://jboss.org/schema/arquillian"&#x000A;  xsi:schemaLocation="&#x000A;      http://jboss.org/schema/arquillian&#x000A;      http://jboss.org/schema/arquillian/arquillian_1_0.xsd"&gt;&#x000A;&#x000A;  &lt;container qualifier="openshift"&gt;&#x000A;    &lt;configuration&gt;&#x000A;      &lt;!-- CAN BE SET VIA SSH_IDENTITYFILE environment variable as well --&gt;&#x000A;      &lt;property name="identityFile"&gt;/absolute/path/to/identity/file&lt;/property&gt;&#x000A;     ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Beta1&lt;/em&gt; release of the &lt;em&gt;Arquillian Container OpenShift&lt;/em&gt; component!&lt;/p&gt;
&lt;h3&gt;Some of the highlights in this release&lt;/h3&gt;
&lt;p&gt;Better integration for usage in continous integration servers. You can now specify the path to the SSH identity file and disable SSH Strict host checking if needed:&lt;/p&gt;
&lt;div class=&quot;filename&quot;&gt;arquillian.xml&lt;/div&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;arquillian xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&amp;#x000A;  xmlns=&quot;http://jboss.org/schema/arquillian&quot;&amp;#x000A;  xsi:schemaLocation=&quot;&amp;#x000A;      http://jboss.org/schema/arquillian&amp;#x000A;      http://jboss.org/schema/arquillian/arquillian_1_0.xsd&quot;&amp;gt;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;  &amp;lt;container qualifier=&quot;openshift&quot;&amp;gt;&amp;#x000A;    &amp;lt;configuration&amp;gt;&amp;#x000A;      &amp;lt;!-- CAN BE SET VIA SSH_IDENTITYFILE environment variable as well --&amp;gt;&amp;#x000A;      &amp;lt;property name=&quot;identityFile&quot;&amp;gt;/absolute/path/to/identity/file&amp;lt;/property&amp;gt;&amp;#x000A;      &amp;lt;property name=&quot;disableStrictHostChecking&quot;&amp;gt;true&amp;lt;/true&amp;gt;&amp;#x000A;    &amp;lt;/configuration&amp;gt;&amp;#x000A;  &amp;lt;/container&amp;gt;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;/arquillian&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Archive scanning now does not fail in case of linkage errors.&lt;/p&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;
        &lt;a href=&quot;http://arquillian.org/modules/openshift-express-container-adapter/&quot;&gt;Arquillian Container OpenShift&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.0.0.Beta1
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-container-openshift/commit/a62fd949128b5ecd0cc35c3660139a3c420d678d.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-03-26&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Aslak Knutsen&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.0.CR7&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.container&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-openshift-express
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-openshift-express/1.0.0.Beta1/arquillian-openshift-express-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-openshift-express/1.0.0.Beta1/arquillian-openshift-express-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;3&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Bug&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-822&quot;&gt;ARQ-822&lt;/a&gt; -         ByteAssetLoader does not ignore all LinkageError subtypes&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Feature Request&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-823&quot;&gt;ARQ-823&lt;/a&gt; -         Allow OpenShift Container to specify path to ssh keys&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/kpiwko&quot;&gt;Karel Piwko&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/03/19/goodbye-ajocado-welcome-graphene/</id>
    <title>Goodbye, Ajocado - Welcome, Graphene!</title>
    <updated>2012-03-20T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/03/19/goodbye-ajocado-welcome-graphene/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="announcement" />
    <category scheme="http://arquillian.org/blog/tags" term="graphene" />
    <category scheme="http://arquillian.org/blog/tags" term="ajocado" />
    <category scheme="http://arquillian.org/blog/tags" term="2012" />
    <category scheme="http://arquillian.org/blog/tags" term="nonrelease" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      Goodbye, Ajocado
        Wait, the Ajocado project is not leaving us!
        It is just undergoing rename.
        Why such a change?
        Ajocado has always been a proud member of Arquillian family, however its name didn&#8217;t tell very well what&#8217;s its purpose is in the true alien world. In other words, the name didn&#8217;t fit the story.
        Moreover, we have experienced many troubles explaining how Ajocado should be even pronounced.
        I must admit it was unlucky choice.
        Choosing the new name&#8230;
        The project is like a diamond &#8211; very strong in its basis:
        
        	a strongly-typed, chaining API
        	efficient jQuery-based locators
        	proven to handle AJAX successfully
        
        But on the other hand, diamonds can&#8217;t be simply manufactured.
        Let&#8217;s......
    </summary>
    <content type="html">
      &lt;h3&gt;Goodbye, Ajocado&lt;/h3&gt;
&lt;p&gt;Wait, the Ajocado project is not leaving us!&lt;br /&gt;
It is just undergoing rename.&lt;br /&gt;
&lt;em&gt;Why such a change?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Ajocado has always been a proud member of &lt;strong&gt;Arquillian&lt;/strong&gt; family, however its name didn&amp;#8217;t tell very well what&amp;#8217;s its purpose is in the true alien world. In other words, the name didn&amp;#8217;t fit the story.&lt;/p&gt;
&lt;p&gt;Moreover, we have experienced many troubles explaining how Ajocado should be even pronounced.&lt;/p&gt;
&lt;p&gt;I must admit it was unlucky choice.&lt;/p&gt;
&lt;h3&gt;Choosing the new name&amp;#8230;&lt;/h3&gt;
&lt;p&gt;The project is like a diamond &amp;#8211; very strong in its basis:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;a strongly-typed, chaining API&lt;/li&gt;
	&lt;li&gt;efficient jQuery-based locators&lt;/li&gt;
	&lt;li&gt;proven to handle AJAX successfully&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But on the other hand, diamonds can&amp;#8217;t be simply manufactured.&lt;/p&gt;
&lt;p&gt;Let&amp;#8217;s look what more could Ajocado offer us:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;rapid test development&lt;/li&gt;
	&lt;li&gt;readability&lt;/li&gt;
	&lt;li&gt;high-level abstractions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What can be as strong as diamond, but be much more flexible?&lt;/p&gt;
&lt;h3&gt;Welcome, Graphene&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Graphene is stronger and stiffer than diamond, yet can be stretched by a quarter of its length, like rubber.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let me introduce the Graphene &amp;#8211; the &lt;strong&gt;strong&lt;/strong&gt; and &lt;strong&gt;flexible UI&lt;/strong&gt; automation tool &amp;#8211; the old/new member of the alien crew, on the way to save the world!&lt;/p&gt;
&lt;h3&gt;What&amp;#8217;s next?&lt;/h3&gt;
&lt;p&gt;The rename is already done, waiting in Maven repositories as Graphene 1.0.0.CR3.&lt;/p&gt;
&lt;p&gt;And what about migration? It&amp;#8217;s pretty straight-forward, as you can see in my &lt;a href=&quot;http://arquillian.org/blog/2012/03/15/arquillian-graphene-1-0-0-CR3&quot;&gt;previous post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thank you all who participated in choosing new name, renaming and migration testing (Vlasta Elias, Dan Allen, Jan Papousek, Karel Piwko)!&lt;/p&gt;
&lt;h3&gt;Project Links&lt;/h3&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://community.jboss.org/wiki/ArquillianGraphene&quot;&gt;Home page&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://github.com/arquillian/arquillian-graphene&quot;&gt;Source code&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA/Home&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA&quot;&gt;Issue tracker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/03/15/arquillian-graphene-1-0-0-CR3/</id>
    <title>Graphene 1.0.0.CR3 Released &amp; How To Migrate from Ajocado</title>
    <updated>2012-03-16T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/03/15/arquillian-graphene-1-0-0-CR3/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="ajocado" />
    <category scheme="http://arquillian.org/blog/tags" term="migration" />
    <category scheme="http://arquillian.org/blog/tags" term="ajocado" />
    <category scheme="http://arquillian.org/blog/tags" term="migration" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="graphene" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.CR3 release of the Graphene component!
The project Ajocado has been renamed to Graphene.
The first release under the new name waits for you in Maven repositories.
Migration Path
Fortunately, the migration to new name in your project is very smooth, you can even continue to use original APIs.
Java Classes
The packages of the Java classes have not been renamed, the only change is addition of three new interfaces/utilities and deprecation of the old ones:

	Ajocado &#8594; Graphene
	AjaxSelenium &#8594; GrapheneSelenium
	AjocadoConfiguration &#8594; GrapheneConfiguration
	AjocadoContext &#8594; GrapheneSeleniumContextM
	AjocadoConfigurationContext &#8594; GrapheneConfigurationContext

The original names has been deprecated, but it doesn&#8217;t prevent to use current......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.CR3&lt;/em&gt; release of the &lt;em&gt;Graphene&lt;/em&gt; component!&lt;/p&gt;
&lt;p&gt;The project Ajocado has been &lt;a href=&quot;http://arquillian.org/blog/2012/03/19/goodbye-ajocado-welcome-graphene/&quot;&gt;renamed to Graphene&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The first release under the new name waits for you in Maven repositories.&lt;/p&gt;
&lt;h3&gt;Migration Path&lt;/h3&gt;
&lt;p&gt;Fortunately, the migration to new name in your project is very smooth, you can even continue to use original APIs.&lt;/p&gt;
&lt;h4&gt;Java Classes&lt;/h4&gt;
&lt;p&gt;The packages of the Java classes have not been renamed, the only change is addition of three new interfaces/utilities and deprecation of the old ones:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Ajocado &amp;#8594; Graphene&lt;/li&gt;
	&lt;li&gt;AjaxSelenium &amp;#8594; GrapheneSelenium&lt;/li&gt;
	&lt;li&gt;AjocadoConfiguration &amp;#8594; GrapheneConfiguration&lt;/li&gt;
	&lt;li&gt;AjocadoContext &amp;#8594; GrapheneSeleniumContextM&lt;/li&gt;
	&lt;li&gt;AjocadoConfigurationContext &amp;#8594; GrapheneConfigurationContext&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The original names has been deprecated, but it doesn&amp;#8217;t prevent to use current tests as they are &amp;#8211; the deprecated classes will continue to be part of the project.&lt;/p&gt;
&lt;h4&gt;Configuration&lt;/h4&gt;
&lt;p&gt;The simple change in the arquillian.xml descriptor is needed, you just need to change ajocado to graphene:&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=&quot;graphene&quot;&amp;gt;&amp;#x000A;    ...&amp;#x000A;&amp;lt;/extension&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Maven Artifacts&lt;/h4&gt;
&lt;p&gt;The most significant change underwent dependency system, so let me talk a more little bit about that:&lt;/p&gt;
&lt;p&gt;In Ajocado CR2, there was only one dependency necessary to import all the JUnit/TestNG and all Arquillian dependencies.&lt;/p&gt;
&lt;p&gt;In Graphene CR3, you need to manage several dependencies &amp;#8211; however it makes your usage of dependencies little more cleaner, since you know exactly what dependencies are imported.&lt;/p&gt;
&lt;p&gt;At first, you need to import JUnit/TestNG dependency:&lt;/p&gt;
&lt;h4&gt;Test Framework&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;JUnit&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;dependency&amp;gt;&amp;#x000A;    &amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt;&amp;#x000A;    &amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt;&amp;#x000A;    &amp;lt;version&amp;gt;4.8.2&amp;lt;/version&amp;gt;&amp;#x000A;    &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;&amp;#x000A;&amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;TestNG&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;dependency&amp;gt;&amp;#x000A;    &amp;lt;groupId&amp;gt;org.testng&amp;lt;/groupId&amp;gt;&amp;#x000A;    &amp;lt;artifactId&amp;gt;testng&amp;lt;/artifactId&amp;gt;&amp;#x000A;    &amp;lt;version&amp;gt;5.14.6&amp;lt;/version&amp;gt;&amp;#x000A;    &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;&amp;#x000A;&amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Additionally, you need to choose between using Graphene as standalone or use Arquillian integration with containers:&lt;/p&gt;
&lt;h4&gt;Standalone Usage&lt;/h4&gt;
&lt;p&gt;In this mode, you don&amp;#8217;t use integration with containers, you need to manage the container and deployment at own:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Arquillian JUnit Standalone&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;dependency&amp;gt;&amp;#x000A;    &amp;lt;groupId&amp;gt;org.jboss.arquillian.junit&amp;lt;/groupId&amp;gt;&amp;#x000A;    &amp;lt;artifactId&amp;gt;arquillian-junit-standalone&amp;lt;/artifactId&amp;gt;&amp;#x000A;    &amp;lt;version&amp;gt;1.0.0.CR7&amp;lt;/version&amp;gt;&amp;#x000A;    &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;&amp;#x000A;&amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Arquillian TestNG Standalone&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;dependency&amp;gt;&amp;#x000A;    &amp;lt;groupId&amp;gt;org.jboss.arquillian.testng&amp;lt;/groupId&amp;gt;&amp;#x000A;    &amp;lt;artifactId&amp;gt;arquillian-testng-standalone&amp;lt;/artifactId&amp;gt;&amp;#x000A;    &amp;lt;version&amp;gt;1.0.0.CR7&amp;lt;/version&amp;gt;&amp;#x000A;    &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;&amp;#x000A;&amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Container usage&lt;/h4&gt;
&lt;p&gt;In the container mode, you need to provide deployable archive (@Deployment) and the whole lifecycle of the container and deployment will be managed by Arquillian:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Arquillian JUnit Container&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;dependency&amp;gt;&amp;#x000A;    &amp;lt;groupId&amp;gt;org.jboss.arquillian.junit&amp;lt;/groupId&amp;gt;&amp;#x000A;    &amp;lt;artifactId&amp;gt;arquillian-junit-container&amp;lt;/artifactId&amp;gt;&amp;#x000A;    &amp;lt;version&amp;gt;1.0.0.CR7&amp;lt;/version&amp;gt;&amp;#x000A;    &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;&amp;#x000A;&amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Arquillian TestNG Container&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;dependency&amp;gt;&amp;#x000A;    &amp;lt;groupId&amp;gt;org.jboss.arquillian.testng&amp;lt;/groupId&amp;gt;&amp;#x000A;    &amp;lt;artifactId&amp;gt;arquillian-testng-container&amp;lt;/artifactId&amp;gt;&amp;#x000A;    &amp;lt;version&amp;gt;1.0.0.CR7&amp;lt;/version&amp;gt;&amp;#x000A;    &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;&amp;#x000A;&amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Graphene Dependency Chain&lt;/h4&gt;
&lt;p&gt;And finally it&amp;#8217;s necessary to import Arquillian Graphene dependency chain, which includes all other necessary dependencies (Graphene, Drone, Selenium):&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Graphene Dependency Chain&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;dependency&amp;gt;&amp;#x000A;    &amp;lt;groupId&amp;gt;org.jboss.arquillian.graphene&amp;lt;/groupId&amp;gt;&amp;#x000A;    &amp;lt;artifactId&amp;gt;arquillian-graphene&amp;lt;/artifactId&amp;gt;&amp;#x000A;    &amp;lt;version&amp;gt;1.0.0.CR3&amp;lt;/version&amp;gt;&amp;#x000A;    &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;&amp;#x000A;    &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;&amp;#x000A;&amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;What&amp;#8217;s next?&lt;/h3&gt;
&lt;p&gt;We are preparing to release Final later soon, the same as other dependencies in Arquillian ecosystem.&lt;/p&gt;
&lt;p&gt;Thanks all the people who helped to test migration (Jan Papousek, Karel Piwko), so it is now pretty smooth.&lt;/p&gt;
&lt;h3&gt;Project Links&lt;/h3&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;https://community.jboss.org/wiki/ArquillianGraphene&quot;&gt;Home page&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://github.com/arquillian/arquillian-graphene&quot;&gt;Source code&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA&quot;&gt;Issue tracker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;
        &lt;a href=&quot;http://arquillian.org/modules/graphene-extension/&quot;&gt;Graphene&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.0.0.CR3
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-graphene/commit/1ef76b7e5e41bee9b5d667d6010192b1da2d672f.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-03-15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Lukas Fryc&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.0.CR7&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.graphene&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    arquillian-graphene-api
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/arquillian-graphene-api/1.0.0.CR3/arquillian-graphene-api-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/arquillian-graphene-api/1.0.0.CR3/arquillian-graphene-api-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    arquillian-graphene-build-resources
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/arquillian-graphene-build-resources/1.0.0.CR3/arquillian-graphene-build-resources-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/arquillian-graphene-build-resources/1.0.0.CR3/arquillian-graphene-build-resources-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    arquillian-graphene-drone
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/arquillian-graphene-drone/1.0.0.CR3/arquillian-graphene-drone-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/arquillian-graphene-drone/1.0.0.CR3/arquillian-graphene-drone-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    arquillian-graphene-ftest-junit-container
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/arquillian-graphene-ftest-junit-container/1.0.0.CR3/arquillian-graphene-ftest-junit-container-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/arquillian-graphene-ftest-junit-container/1.0.0.CR3/arquillian-graphene-ftest-junit-container-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    arquillian-graphene-ftest-junit-standalone
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/arquillian-graphene-ftest-junit-standalone/1.0.0.CR3/arquillian-graphene-ftest-junit-standalone-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/arquillian-graphene-ftest-junit-standalone/1.0.0.CR3/arquillian-graphene-ftest-junit-standalone-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    arquillian-graphene-ftest-testng-container
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/arquillian-graphene-ftest-testng-container/1.0.0.CR3/arquillian-graphene-ftest-testng-container-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/arquillian-graphene-ftest-testng-container/1.0.0.CR3/arquillian-graphene-ftest-testng-container-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    arquillian-graphene-ftest-testng-standalone
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/arquillian-graphene-ftest-testng-standalone/1.0.0.CR3/arquillian-graphene-ftest-testng-standalone-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/arquillian-graphene-ftest-testng-standalone/1.0.0.CR3/arquillian-graphene-ftest-testng-standalone-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.graphene
    &amp;raquo;
    arquillian-graphene-impl
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/arquillian-graphene-impl/1.0.0.CR3/arquillian-graphene-impl-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/arquillian-graphene-impl/1.0.0.CR3/arquillian-graphene-impl-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;15&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Component  Upgrade&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-21&quot;&gt;ARQGRA-21&lt;/a&gt; -         Upgrade Arquillian Core, Arquillian Drone and Shrinkwrap&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-23&quot;&gt;ARQGRA-23&lt;/a&gt; -         Upgrade to JBoss Parent version 8&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Enhancement&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-32&quot;&gt;ARQGRA-32&lt;/a&gt; -         Remove javassist dependency&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-33&quot;&gt;ARQGRA-33&lt;/a&gt; -         Classes Point, Dimension and Offset should override default equals and hashCode&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-36&quot;&gt;ARQGRA-36&lt;/a&gt; -         Split arquillian-testng/junit to support -standalone and -container version&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Feature Request&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-54&quot;&gt;ARQGRA-54&lt;/a&gt; -         Thread-Local Contexts section in docs should be more clean even for people not so familiar with given topic&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-59&quot;&gt;ARQGRA-59&lt;/a&gt; -         support for configurating arquillian.xml during runtime for matrix browser compability jobs&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-61&quot;&gt;ARQGRA-61&lt;/a&gt; -         Umbrella: Rename the project to Graphene&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Task&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-97&quot;&gt;ARQGRA-97&lt;/a&gt; -         Remove repositories definition from pom.xml&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-106&quot;&gt;ARQGRA-106&lt;/a&gt; -         Review usage of Shrinkwrap version definition&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Sub-task&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-88&quot;&gt;ARQGRA-88&lt;/a&gt; -         Test migration path for renaming Ajocado to Graphene&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-89&quot;&gt;ARQGRA-89&lt;/a&gt; -         Rename project to Graphene - wiki/docs&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-90&quot;&gt;ARQGRA-90&lt;/a&gt; -         Blog about renaming to Graphene&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-91&quot;&gt;ARQGRA-91&lt;/a&gt; -         Rename JIRA project name to ARQGRA&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-92&quot;&gt;ARQGRA-92&lt;/a&gt; -         Rename GitHub repository to arquillian-graphene&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/lfryc&quot;&gt;Lukas Fryc&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/jhuska&quot;&gt;Juraj Huska&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/kpiwko&quot;&gt;Karel Piwko&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/ppitonak&quot;&gt;Pavol Pitonak&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/03/15/arquillian-container-glassfish-1-0-0-CR3/</id>
    <title>Arquillian Container GlassFish 1.0.0.CR3 Released</title>
    <updated>2012-03-16T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/03/15/arquillian-container-glassfish-1-0-0-CR3/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="container-adapter" />
    <category scheme="http://arquillian.org/blog/tags" term="glassfish" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.CR3 release of the Arquillian Container GlassFish component!
Some of the highlights in this release

	Support for a managed GlassFish container.
  With this release, you can have Arquillian manage the lifecycle of the GlassFish container.


	Support for GlassFish 3.1.2.
  The release enables you to use Arquillian against a remote or a managed GlassFish 3.1.2 container.


	The sunResourcesXml property for the embedded GlassFish container, is now deprecated. It is preserved for backward compatibility. You are encouraged to use the resourcesXml property instead.

What is Arquillian?
Arquillian is open source software that empowers you to test JVM-based applications......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.CR3&lt;/em&gt; release of the &lt;em&gt;Arquillian Container GlassFish&lt;/em&gt; component!&lt;/p&gt;
&lt;h3&gt;Some of the highlights in this release&lt;/h3&gt;
&lt;ul&gt;
	&lt;li&gt;Support for a managed GlassFish container.&lt;br /&gt;
  With this release, you can have Arquillian manage the lifecycle of the GlassFish container.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;Support for GlassFish 3.1.2.&lt;br /&gt;
  The release enables you to use Arquillian against a remote or a managed GlassFish 3.1.2 container.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
	&lt;li&gt;The sunResourcesXml property for the embedded GlassFish container, is now deprecated. It is preserved for backward compatibility. You are encouraged to use the resourcesXml property instead.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;Arquillian Container GlassFish&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Modules&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://arquillian.org/modules/glassfish-managed-3.1-container-adapter/&quot;&gt;Arquillian GlassFish Managed 3.1 Container Adapter&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://arquillian.org/modules/glassfish-remote-3.1-container-adapter/&quot;&gt;Arquillian GlassFish Remote 3.1 Container Adapter&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://arquillian.org/modules/glassfish-embedded-3.1-container-adapter/&quot;&gt;Arquillian GlassFish Embedded 3.1 Container Adapter&lt;/a&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.0.0.CR3
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-container-glassfish/commit/299414e5fbbd66c7fe755ad2710dd43bee3704fc.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-03-15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Aslak Knutsen&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.0.CR7&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.container&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-glassfish-common
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-glassfish-common/1.0.0.CR3/arquillian-glassfish-common-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-glassfish-common/1.0.0.CR3/arquillian-glassfish-common-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-glassfish-embedded-3.1
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-glassfish-embedded-3.1/1.0.0.CR3/arquillian-glassfish-embedded-3.1-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-glassfish-embedded-3.1/1.0.0.CR3/arquillian-glassfish-embedded-3.1-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-glassfish-managed-3.1
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-glassfish-managed-3.1/1.0.0.CR3/arquillian-glassfish-managed-3.1-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-glassfish-managed-3.1/1.0.0.CR3/arquillian-glassfish-managed-3.1-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-glassfish-remote-3.1
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-glassfish-remote-3.1/1.0.0.CR3/arquillian-glassfish-remote-3.1-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-glassfish-remote-3.1/1.0.0.CR3/arquillian-glassfish-remote-3.1-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;7&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;GlassFish Managed Container&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Bug&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-569&quot;&gt;ARQ-569&lt;/a&gt; -         Archive for remote GF-3.1 should not be saved to disk prior to deployment&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-624&quot;&gt;ARQ-624&lt;/a&gt; -         Initialization of the extension for remote Glassfish fails when the remote domain configuration does not match the expected configuration&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-643&quot;&gt;ARQ-643&lt;/a&gt; -         Arquillian fails to execute in-container tests when the serverHttps property is enabled for remote Glassfish containers&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-658&quot;&gt;ARQ-658&lt;/a&gt; -         Deployment of an EnterpriseArchive onto remote GlassFish fails, when the contextRoot recorded in GlassFish, does not start with a slash&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Enhancement&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-780&quot;&gt;ARQ-780&lt;/a&gt; -         Change configuration property sunResourcesXml to glassfishResourcesXml&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Feature Request&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-322&quot;&gt;ARQ-322&lt;/a&gt; -         Implement a GlassFish 3.1 managed container adapter&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/vineet.reynolds&quot;&gt;Vineet Reynolds&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/dan.j.allen&quot;&gt;Dan Allen&lt;/a&gt;, &lt;a href=&quot;https://github.com/piotrnowicki&quot;&gt;Pedro Kowalski&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/03/14/arquillian-maven-1-0-0-Alpha2/</id>
    <title>Arquillian Maven Plugin 1.0.0.Alpha2 Released</title>
    <updated>2012-03-15T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/03/14/arquillian-maven-1-0-0-Alpha2/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="tool-plugin" />
    <category scheme="http://arquillian.org/blog/tags" term="maven" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha2 release of the Arquillian Maven Plugin component!
        
        What is Arquillian?
        Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.
        Release details
        
          
            
              Component
          ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha2&lt;/em&gt; release of the &lt;em&gt;Arquillian Maven Plugin&lt;/em&gt; component!&lt;/p&gt;
        
        &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
        &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
        &lt;h3&gt;Release details&lt;/h3&gt;
        &lt;table class=&quot;table table-bordered table-striped&quot;&gt;
          &lt;tbody&gt;
            &lt;tr&gt;
              &lt;th&gt;Component&lt;/th&gt;
              &lt;td&gt;
                &lt;a href=&quot;http://arquillian.org/modules/arquillian-maven-tool-plugin/&quot;&gt;Arquillian Maven Plugin&lt;/a&gt;
              &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;th&gt;Version&lt;/th&gt;
              &lt;td&gt;
                1.0.0.Alpha2
                &lt;span class=&quot;label tag&quot;&gt;
                  &lt;a href=&quot;https://github.com/arquillian/arquillian-maven/commit/fc2fae2bab189482c12893209c3cda0013007dc7.html&quot;&gt;view tag&lt;/a&gt;
                &lt;/span&gt;
              &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;th&gt;Release date&lt;/th&gt;
              &lt;td&gt;2012-03-14&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;th&gt;Released by&lt;/th&gt;
              &lt;td&gt;Aslak Knutsen&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;th&gt;Compiled against&lt;/th&gt;
              &lt;td&gt;
                &lt;ul class=&quot;unstyled&quot;&gt;
                  &lt;li&gt;Arquillian Core &amp;#8211; 1.0.0.CR7&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/td&gt;
            &lt;/tr&gt;
          &lt;/tbody&gt;
        &lt;/table&gt;
        &lt;h3&gt;
          Release notes and resolved issues
          &lt;small&gt;3&lt;/small&gt;
        &lt;/h3&gt;
        &lt;p&gt;Support for Maven lifecycle binding&lt;/p&gt;
        &lt;dl&gt;
          &lt;dt&gt;Feature Request&lt;/dt&gt;
          &lt;dd&gt;
            &lt;ul class=&quot;unstyled&quot;&gt;
              &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-502&quot;&gt;ARQ-502&lt;/a&gt; -         Support arquillian.xml configuration in Maven Plugin&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-708&quot;&gt;ARQ-708&lt;/a&gt; -         Should support keeping container alive between execution phases&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/dd&gt;
        &lt;/dl&gt;
        &lt;p&gt;
          Thanks to the following list of contributors:
          &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/davided80&quot;&gt;Davide D'alto&lt;/a&gt;
        &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/03/01/arquillian-container-osgi-1-0-2-Final/</id>
    <title>Arquillian OSGi 1.0.2.Final Released</title>
    <updated>2012-03-02T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/03/01/arquillian-container-osgi-1-0-2-Final/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="container-adapter" />
    <category scheme="http://arquillian.org/blog/tags" term="osgi" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.2.Final release of the Arquillian OSGi component!
        
        What is Arquillian?
        Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.
        Release details
        
          
            
              Component
           ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.2.Final&lt;/em&gt; release of the &lt;em&gt;Arquillian OSGi&lt;/em&gt; component!&lt;/p&gt;
        
        &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
        &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
        &lt;h3&gt;Release details&lt;/h3&gt;
        &lt;table class=&quot;table table-bordered table-striped&quot;&gt;
          &lt;tbody&gt;
            &lt;tr&gt;
              &lt;th&gt;Component&lt;/th&gt;
              &lt;td&gt;Arquillian OSGi&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;th&gt;Modules&lt;/th&gt;
              &lt;td&gt;
                &lt;ul class=&quot;unstyled&quot;&gt;
                  &lt;li&gt;
                    &lt;a href=&quot;http://arquillian.org/modules/osgi-embedded-container-adapter/&quot;&gt;Arquillian OSGi Embedded Container Adapter&lt;/a&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;a href=&quot;http://arquillian.org/modules/osgi-remote-container-adapter/&quot;&gt;Arquillian OSGi Remote Container Adapter&lt;/a&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;th&gt;Version&lt;/th&gt;
              &lt;td&gt;
                1.0.2.Final
                &lt;span class=&quot;label tag&quot;&gt;
                  &lt;a href=&quot;https://github.com/arquillian/arquillian-container-osgi/commit/ee57fcf6b8c75a5809e21accc4c90773a2b08b4a.html&quot;&gt;view tag&lt;/a&gt;
                &lt;/span&gt;
              &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;th&gt;Release date&lt;/th&gt;
              &lt;td&gt;2012-03-01&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;th&gt;Released by&lt;/th&gt;
              &lt;td&gt;Thomas Diesler&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;th&gt;Compiled against&lt;/th&gt;
              &lt;td&gt;
                &lt;ul class=&quot;unstyled&quot;&gt;
                  &lt;li&gt;Arquillian Core &amp;#8211; 1.0.0.CR7&lt;/li&gt;
                  &lt;li&gt;ShrinkWrap Core &amp;#8211; 1.0.0-cr-1&lt;/li&gt;
                  &lt;li&gt;JUnit &amp;#8211; 4.8.1&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/td&gt;
            &lt;/tr&gt;
          &lt;/tbody&gt;
        &lt;/table&gt;
        &lt;h3&gt;
          Published artifacts
          &lt;small&gt;org.jboss.arquillian.container&lt;/small&gt;
        &lt;/h3&gt;
        &lt;ul&gt;
          &lt;li&gt;
            org.jboss.arquillian.container
            &amp;raquo;
            arquillian-container-osgi
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi/1.0.2.Final/arquillian-container-osgi-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi/1.0.2.Final/arquillian-container-osgi-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.container
            &amp;raquo;
            arquillian-container-osgi-embedded
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi-embedded/1.0.2.Final/arquillian-container-osgi-embedded-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi-embedded/1.0.2.Final/arquillian-container-osgi-embedded-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.container
            &amp;raquo;
            arquillian-container-osgi-remote
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi-remote/1.0.2.Final/arquillian-container-osgi-remote-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi-remote/1.0.2.Final/arquillian-container-osgi-remote-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.protocol
            &amp;raquo;
            arquillian-protocol-osgi
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-osgi/1.0.2.Final/arquillian-protocol-osgi-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-osgi/1.0.2.Final/arquillian-protocol-osgi-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            org.jboss.arquillian.testenricher
            &amp;raquo;
            arquillian-testenricher-osgi
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-osgi/1.0.2.Final/arquillian-testenricher-osgi-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
            &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-osgi/1.0.2.Final/arquillian-testenricher-osgi-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
        &lt;p&gt;
          Thanks to the following list of contributors:
          &lt;a href=&quot;https://community.jboss.org/people/thomas.diesler&quot;&gt;Thomas Diesler&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/kpiwko&quot;&gt;Karel Piwko&lt;/a&gt;
        &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/02/29/arquillian-extension-android-1-0-0-Alpha1/</id>
    <title>Arquillian Android Extension 1.0.0.Alpha1 Released</title>
    <updated>2012-03-01T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/02/29/arquillian-extension-android-1-0-0-Alpha1/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="android" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha1 release of the Arquillian Android Extension component!
        The Arquillian Android extension allows you to use the Android SDK in your Arquillian tests. Most notably, it allows you to start an Android Virtual device or connect to a real device. A part of the Android Extension for Arquillian is the Android Drone Extension. This extension allows you to easily configure WebDriver based tests which will be executed directly in an emulator device.
        When testing your application, you can then easily switch between desktop and mobile UI or develop mobile specific tests.
        How to use it?
        First,......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha1&lt;/em&gt; release of the &lt;em&gt;Arquillian Android Extension&lt;/em&gt; component!&lt;/p&gt;
&lt;p&gt;The Arquillian Android extension allows you to use the Android SDK in your Arquillian tests. Most notably, it allows you to start an Android Virtual device or connect to a real device. A part of the Android Extension for Arquillian is the Android Drone Extension. This extension allows you to easily configure WebDriver based tests which will be executed directly in an emulator device.&lt;/p&gt;
&lt;p&gt;When testing your application, you can then easily switch between desktop and mobile UI or develop mobile specific tests.&lt;/p&gt;
&lt;h4&gt;How to use it?&lt;/h4&gt;
&lt;p&gt;First, download the Android SDK from &lt;a href=&quot;http://developer.android.com/sdk/index.html&quot;&gt;developer.android.com&lt;/a&gt; and point the ANDROID_HOME system variable to the directory where you extracted the SDK. You can then update and install specific SDK versions by running the `android` command.&lt;/p&gt;
&lt;p&gt;Next, add Android extension to dependencies. This depchain will add both Arquillian Android and Android Drone extensions.&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;dependency&amp;gt;&amp;#x000A;    &amp;lt;groupId&amp;gt;org.jboss.arquillian.extension&amp;lt;/groupId&amp;gt;&amp;#x000A;    &amp;lt;artifactId&amp;gt;arquillian-android-depchain&amp;lt;/artifactId&amp;gt;&amp;#x000A;    &amp;lt;version&amp;gt;1.0.0.Alpha1&amp;lt;/version&amp;gt;&amp;#x000A;    &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;&amp;#x000A;    &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;&amp;#x000A;&amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Note: Make sure you do &lt;strong&gt;NOT&lt;/strong&gt; have the Arquillian Drone Selenium Server on classpath, as it will collide with the Android SDK unless configured to run on a different port. If you can&amp;#8217;t remove it from classpath, you should disable it in &lt;code&gt;arquillian.xml&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=&quot;selenium-server&quot;&amp;gt;&amp;#x000A;    &amp;lt;!-- this must be skipped, we run /wd/hub on emulator --&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;skip&quot;&amp;gt;true&amp;lt;/property&amp;gt;&amp;#x000A;&amp;lt;/extension&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Download the Android Server APK to be installed to you mobile device from &lt;a href=&quot;http://code.google.com/p/selenium/downloads/list&quot;&gt;code.google.com&lt;/a&gt;. Use &lt;strong&gt;android-server-2.6.0.apk&lt;/strong&gt; for devices including Android 2.3.4, latest version for Android 3.0 and newer.&lt;/p&gt;
&lt;p&gt;Set up WebDriver in arquillian.xml&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=&quot;webdriver&quot;&amp;gt;&amp;#x000A;    &amp;lt;!-- this makes WebDriver connect hub on Android device --&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;remoteAddress&quot;&amp;gt;http://localhost:14444/wd/hub&amp;lt;/property&amp;gt;&amp;#x000A;&amp;lt;/extension&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Set up Android in arquillian.xml&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=&quot;android&quot;&amp;gt;&amp;#x000A;    &amp;lt;!-- this is optional, can be set via ANDROID_HOME property --&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;home&quot;&amp;gt;/home/kpiwko/apps/android-sdk-linux_x86&amp;lt;/property&amp;gt;&amp;#x000A;    &amp;lt;!-- Nexus S --&amp;gt;&amp;#x000A;    &amp;lt;!-- &amp;lt;property name=&quot;serialId&quot;&amp;gt;3233E8EDB21700EC&amp;lt;/property&amp;gt;--&amp;gt;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    &amp;lt;property name=&quot;verbose&quot;&amp;gt;true&amp;lt;/property&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;apiLevel&quot;&amp;gt;13&amp;lt;/property&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;avdName&quot;&amp;gt;SnapshotEnabled&amp;lt;/property&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;emulatorBootupTimeoutInSeconds&quot;&amp;gt;180&amp;lt;/property&amp;gt;&amp;#x000A;&amp;lt;/extension&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Properties explained, required in &lt;strong&gt;bold&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;strong&gt;home&lt;/strong&gt; &amp;#8211; Android SDK home, can be ommited if set via &lt;code&gt;ANDROID_HOME&lt;/code&gt; property&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;avdName&lt;/strong&gt; &amp;#8211; name of the Android Virtual Device. It will be either created or reused&lt;/li&gt;
	&lt;li&gt;apiLevel &amp;#8211; (10) denotates API level, use &lt;code&gt;android list target&lt;/code&gt; to get more variants&lt;/li&gt;
	&lt;li&gt;serialId &amp;#8211; replaces avdName if set and available, represents a real device. Use &lt;code&gt;adb devices&lt;/code&gt; to get the list&lt;/li&gt;
	&lt;li&gt;skip &amp;#8211; (false) skip execution&lt;/li&gt;
	&lt;li&gt;verbose &amp;#8211; (false) be verbose&lt;/li&gt;
	&lt;li&gt;force &amp;#8211; (false) force emulator recreationg&lt;/li&gt;
	&lt;li&gt;sdSize &amp;#8211; (128M) SD card size for emulator&lt;/li&gt;
	&lt;li&gt;emulatorBootupTimeoutInSeconds &amp;#8211; (180) maximal time to get emulator started, use Snapshot enabled device if it takes too long&lt;/li&gt;
	&lt;li&gt;emulatorOptions &amp;#8211; emulator options&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Emulators are created by default in &lt;code&gt;${basedir}/${avdName}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Set up Android Drone in arquillian.xml&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=&quot;android-drone&quot;&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;androidServerApk&quot;&amp;gt;android-server-2.16.apk&amp;lt;/property&amp;gt;&amp;#x000A;&amp;lt;/extension&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Properties explained, required in &lt;strong&gt;bold&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;strong&gt;androidServerApk&lt;/strong&gt; &amp;#8211; path to the Android Server APK you&amp;#8217;ve downloaded&lt;/li&gt;
	&lt;li&gt;skip &amp;#8211; (false) skip execution&lt;/li&gt;
	&lt;li&gt;verbose &amp;#8211; (false) be verbose&lt;/li&gt;
	&lt;li&gt;webdriverPortHost &amp;#8211; (14444) port on Host connected with port on device&lt;/li&gt;
	&lt;li&gt;webdriverPortGuest &amp;#8211; (8080) port on Guest connected with port on Host&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Big thanks go to Jan Papousek (@jan_papousek) for improving and testing this release!&lt;/p&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;
        &lt;a href=&quot;http://arquillian.org/modules/android-extension/&quot;&gt;Arquillian Android Extension&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.0.0.Alpha1
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-android/commit/9bbfa36938f9f94ad2ad885415595552c643c392.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-02-29&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Aslak Knutsen&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.0.CR7&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-android-api
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-android-api/1.0.0.Alpha1/arquillian-android-api-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-android-api/1.0.0.Alpha1/arquillian-android-api-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-android-bom
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-android-bom/1.0.0.Alpha1/arquillian-android-bom-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-android-configuration
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-android-configuration/1.0.0.Alpha1/arquillian-android-configuration-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-android-configuration/1.0.0.Alpha1/arquillian-android-configuration-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-android-depchain
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-android-depchain/1.0.0.Alpha1/arquillian-android-depchain-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-android-drone
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-android-drone/1.0.0.Alpha1/arquillian-android-drone-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-android-drone/1.0.0.Alpha1/arquillian-android-drone-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-android-impl
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-android-impl/1.0.0.Alpha1/arquillian-android-impl-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-android-impl/1.0.0.Alpha1/arquillian-android-impl-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-android-spi
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-android-spi/1.0.0.Alpha1/arquillian-android-spi-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-android-spi/1.0.0.Alpha1/arquillian-android-spi-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;1&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;Initial Support for Android via Drone WebDriver&lt;/p&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/kpiwko&quot;&gt;Karel Piwko&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://github.com/papousek&quot;&gt;Jan PapoušEk&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/02/27/arquillian-container-openshift-1-0-0-Alpha2/</id>
    <title>Arquillian Container OpenShift 1.0.0.Alpha2 Released</title>
    <updated>2012-02-28T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/02/27/arquillian-container-openshift-1-0-0-Alpha2/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="container-adapter" />
    <category scheme="http://arquillian.org/blog/tags" term="openshift" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha2 release of the Arquillian Container OpenShift component!
Some of the highlights in this release
Application deployment timeout can be set up by user:
arquillian.xml
&lt;arquillian xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&#x000A;  xmlns="http://jboss.org/schema/arquillian"&#x000A;  xsi:schemaLocation="&#x000A;      http://jboss.org/schema/arquillian&#x000A;      http://jboss.org/schema/arquillian/arquillian_1_0.xsd"&gt;&#x000A;&#x000A;  &lt;container qualifier="openshift"&gt;&#x000A;    &lt;configuration&gt;&#x000A;      &lt;property name="deploymentTimeoutInSeconds"&gt;150&lt;/property&gt;&#x000A;    &lt;/configuration&gt;&#x000A;  &lt;/container&gt;&#x000A;&#x000A;&lt;/arquillian&gt;
Improved archive scanning now honors application.xml and jboss-web.xml for figuring out
deployment context root.
Support for deployment of ZipImport&#8217;ed archives.
Arquillian OpenShift Express Container no longer requires JBoss Maven Repository.
What is Arquillian?
Arquillian is open source software that......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha2&lt;/em&gt; release of the &lt;em&gt;Arquillian Container OpenShift&lt;/em&gt; component!&lt;/p&gt;
&lt;h3&gt;Some of the highlights in this release&lt;/h3&gt;
&lt;p&gt;Application deployment timeout can be set up by user:&lt;/p&gt;
&lt;div class=&quot;filename&quot;&gt;arquillian.xml&lt;/div&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;arquillian xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&amp;#x000A;  xmlns=&quot;http://jboss.org/schema/arquillian&quot;&amp;#x000A;  xsi:schemaLocation=&quot;&amp;#x000A;      http://jboss.org/schema/arquillian&amp;#x000A;      http://jboss.org/schema/arquillian/arquillian_1_0.xsd&quot;&amp;gt;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;  &amp;lt;container qualifier=&quot;openshift&quot;&amp;gt;&amp;#x000A;    &amp;lt;configuration&amp;gt;&amp;#x000A;      &amp;lt;property name=&quot;deploymentTimeoutInSeconds&quot;&amp;gt;150&amp;lt;/property&amp;gt;&amp;#x000A;    &amp;lt;/configuration&amp;gt;&amp;#x000A;  &amp;lt;/container&amp;gt;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;/arquillian&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Improved archive scanning now honors application.xml and jboss-web.xml for figuring out&lt;br /&gt;
deployment context root.&lt;/p&gt;
&lt;p&gt;Support for deployment of ZipImport&amp;#8217;ed archives.&lt;/p&gt;
&lt;p&gt;Arquillian OpenShift Express Container no longer requires JBoss Maven Repository.&lt;/p&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;
        &lt;a href=&quot;http://arquillian.org/modules/openshift-express-container-adapter/&quot;&gt;Arquillian Container OpenShift&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.0.0.Alpha2
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-container-openshift/commit/bb3b344975e2589ce472d944039e83a07f92f027.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-02-27&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Aslak Knutsen&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.0.CR7&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.container&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-openshift-express
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-openshift-express/1.0.0.Alpha2/arquillian-openshift-express-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-openshift-express/1.0.0.Alpha2/arquillian-openshift-express-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;7&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Bug&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-621&quot;&gt;ARQ-621&lt;/a&gt; -         openshift container - unable to deploy zip assets&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-781&quot;&gt;ARQ-781&lt;/a&gt; -         openshift container - improve deployment url detection&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-789&quot;&gt;ARQ-789&lt;/a&gt; -         Deployment scanning for JAR archives is broken&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Component  Upgrade&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-787&quot;&gt;ARQ-787&lt;/a&gt; -         Update Arquillian Core and Ajocado dependencies dependencies&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-788&quot;&gt;ARQ-788&lt;/a&gt; -         Update JGit and EJB3 API dependencies&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Feature Request&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-786&quot;&gt;ARQ-786&lt;/a&gt; -         Enable deploymentTimeout for OpenShift containers&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/kpiwko&quot;&gt;Karel Piwko&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://github.com/papousek&quot;&gt;Jan PapoušEk&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/jharting&quot;&gt;Jozef Hartinger&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/02/23/very-large-active-development-team/</id>
    <title>Very large, active development team</title>
    <updated>2012-02-24T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/02/23/very-large-active-development-team/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="stats" />
    <category scheme="http://arquillian.org/blog/tags" term="contributors" />
    <category scheme="http://arquillian.org/blog/tags" term="2012" />
    <category scheme="http://arquillian.org/blog/tags" term="nonrelease" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      According to ohloh, Arquillian has a very large, active development team. Here&#8217;s a summary of the contributor stats that ohloh curated.

Over the past twelve months, 43 developers contributed new code to Arquillian.
This is one of the largest open-source teams in the world, and is in the top 2% of all project teams on Ohloh.
For this measurement, Ohloh considered only recent changes to the code. Over the entire history of the project, 49 developers have contributed.

Thank you all for making this project so successful and fun! Arquillian has a bright future. Above all other awards and recognitions, it&#8217;s the number and......
    </summary>
    <content type="html">
      &lt;p&gt;According to ohloh, Arquillian has a very large, active development team. Here&amp;#8217;s a summary of the &lt;a href=&quot;http://ohloh.com/p/Arquillian&quot;&gt;contributor stats that ohloh curated&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Over the past twelve months, 43 developers contributed new code to Arquillian.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;This is one of the largest open-source teams in the world, and is in the top 2% of all project teams on Ohloh.&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;For this measurement, Ohloh considered only recent changes to the code. Over the entire history of the project, 49 developers have contributed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Thank you all for making this project so successful and fun! Arquillian has a bright future. Above all other awards and recognitions, it&amp;#8217;s the number and diversity of contributors that&amp;#8217;s the most significant. The smartest one amongst us is all of us, working together.&lt;/p&gt;
&lt;p&gt;Cheers!&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/02/23/arquillian-container-jbossas-1-0-0-CR3/</id>
    <title>Arquillian Container JBoss AS 1.0.0.CR3 Released</title>
    <updated>2012-02-24T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/02/23/arquillian-container-jbossas-1-0-0-CR3/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="container-adapter" />
    <category scheme="http://arquillian.org/blog/tags" term="jbossas" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.CR3 release of the Arquillian Container JBoss AS component!
Some of the highlights in this release
JavaHome configuration option now default to the Arquillian running JVM
Add configuration support for portSet to JBoss AS 5.1/6 Managed containers
arquillian.xml
&lt;arquillian xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&#x000A;  xmlns="http://jboss.org/schema/arquillian"&#x000A;  xsi:schemaLocation="&#x000A;      http://jboss.org/schema/arquillian&#x000A;      http://jboss.org/schema/arquillian/arquillian_1_0.xsd"&gt;&#x000A;&#x000A;  &lt;container qualifier="jboss"&gt;&#x000A;    &lt;property name="portSet"&gt;ports-01&lt;/property&gt;&#x000A;  &lt;/container&gt;&#x000A;&#x000A;&lt;/arquillian&gt;
Setting the portSet will automatically set the http and rmi ports to be use based on the pre defined sets in the JBoss AS configuration.
Add configuration support for partition to JBoss AS......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.CR3&lt;/em&gt; release of the &lt;em&gt;Arquillian Container JBoss AS&lt;/em&gt; component!&lt;/p&gt;
&lt;h3&gt;Some of the highlights in this release&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;JavaHome&lt;/strong&gt; configuration option now default to the Arquillian running JVM&lt;/p&gt;
&lt;p&gt;Add configuration support for &lt;strong&gt;portSet&lt;/strong&gt; to JBoss AS 5.1/6 Managed containers&lt;/p&gt;
&lt;div class=&quot;filename&quot;&gt;arquillian.xml&lt;/div&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;arquillian xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&amp;#x000A;  xmlns=&quot;http://jboss.org/schema/arquillian&quot;&amp;#x000A;  xsi:schemaLocation=&quot;&amp;#x000A;      http://jboss.org/schema/arquillian&amp;#x000A;      http://jboss.org/schema/arquillian/arquillian_1_0.xsd&quot;&amp;gt;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;  &amp;lt;container qualifier=&quot;jboss&quot;&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;portSet&quot;&amp;gt;ports-01&amp;lt;/property&amp;gt;&amp;#x000A;  &amp;lt;/container&amp;gt;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;/arquillian&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Setting the &lt;code&gt;portSet&lt;/code&gt; will automatically set the http and rmi ports to be use based on the pre defined sets in the JBoss AS configuration.&lt;/p&gt;
&lt;p&gt;Add configuration support for &lt;strong&gt;partition&lt;/strong&gt; to JBoss AS 4.2/5.1/6 Managed containers&lt;/p&gt;
&lt;div class=&quot;filename&quot;&gt;arquillian.xml&lt;/div&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;arquillian xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&amp;#x000A;  xmlns=&quot;http://jboss.org/schema/arquillian&quot;&amp;#x000A;  xsi:schemaLocation=&quot;&amp;#x000A;      http://jboss.org/schema/arquillian&amp;#x000A;      http://jboss.org/schema/arquillian/arquillian_1_0.xsd&quot;&amp;gt;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;  &amp;lt;group qualifier=&quot;cluster&quot;&amp;gt;&amp;#x000A;    &amp;lt;container qualifier=&quot;jboss-1&quot;&amp;gt;&amp;#x000A;      &amp;lt;property name=&quot;partition&quot;&amp;gt;X-1&amp;lt;/property&amp;gt;&amp;#x000A;    &amp;lt;/container&amp;gt;&amp;#x000A;    &amp;lt;container qualifier=&quot;jboss-2&quot;&amp;gt;&amp;#x000A;      &amp;lt;property name=&quot;partition&quot;&amp;gt;X-1&amp;lt;/property&amp;gt;&amp;#x000A;    &amp;lt;/container&amp;gt;&amp;#x000A;  &amp;lt;/group&amp;gt;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;/arquillian&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using the same &lt;code&gt;partition&lt;/code&gt; id on a &lt;code&gt;group&lt;/code&gt; of &lt;code&gt;containers&lt;/code&gt; defined in &lt;code&gt;arquillian.xml&lt;/code&gt; will allow them to form a cluster.&lt;/p&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;Arquillian Container JBoss AS&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Modules&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://arquillian.org/modules/jbossas-managed-4.2-container-adapter/&quot;&gt;Arquillian JBoss AS Managed 4.2.x Container Adapter&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://arquillian.org/modules/jbossas-remote-4.2-container-adapter/&quot;&gt;Arquillian JBoss AS Remote 4.2.x Container Adapter&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://arquillian.org/modules/jbossas-remote-5-container-adapter/&quot;&gt;Arquillian JBoss AS Remote 5.x Container Adapter&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://arquillian.org/modules/jbossas-managed-5.1-container-adapter/&quot;&gt;Arquillian JBoss AS Managed 5.1.x Container Adapter&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://arquillian.org/modules/jbossas-remote-5.1-container-adapter/&quot;&gt;Arquillian JBoss AS Remote 5.1.x Container Adapter&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://arquillian.org/modules/jbossas-embedded-6-container-adapter/&quot;&gt;Arquillian JBoss AS Embedded 6.x Container Adapter&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://arquillian.org/modules/jbossas-managed-6-container-adapter/&quot;&gt;Arquillian JBoss AS Managed 6.x Container Adapter&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://arquillian.org/modules/jbossas-remote-6-container-adapter/&quot;&gt;Arquillian JBoss AS Remote 6.x Container Adapter&lt;/a&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.0.0.CR3
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-container-jbossas/commit/2ffd4affe75caef178275ab32c0ca49345c122e8.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-02-23&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Aslak Knutsen&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.0.CR7&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.container&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-jbossas-embedded-6
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-jbossas-embedded-6/1.0.0.CR3/arquillian-jbossas-embedded-6-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-jbossas-embedded-6/1.0.0.CR3/arquillian-jbossas-embedded-6-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-jbossas-managed-4.2
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-jbossas-managed-4.2/1.0.0.CR3/arquillian-jbossas-managed-4.2-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-jbossas-managed-4.2/1.0.0.CR3/arquillian-jbossas-managed-4.2-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-jbossas-managed-5.1
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-jbossas-managed-5.1/1.0.0.CR3/arquillian-jbossas-managed-5.1-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-jbossas-managed-5.1/1.0.0.CR3/arquillian-jbossas-managed-5.1-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-jbossas-managed-6
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-jbossas-managed-6/1.0.0.CR3/arquillian-jbossas-managed-6-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-jbossas-managed-6/1.0.0.CR3/arquillian-jbossas-managed-6-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-jbossas-remote-4.2
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-jbossas-remote-4.2/1.0.0.CR3/arquillian-jbossas-remote-4.2-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-jbossas-remote-4.2/1.0.0.CR3/arquillian-jbossas-remote-4.2-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-jbossas-remote-5
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-jbossas-remote-5/1.0.0.CR3/arquillian-jbossas-remote-5-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-jbossas-remote-5/1.0.0.CR3/arquillian-jbossas-remote-5-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-jbossas-remote-5.1
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-jbossas-remote-5.1/1.0.0.CR3/arquillian-jbossas-remote-5.1-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-jbossas-remote-5.1/1.0.0.CR3/arquillian-jbossas-remote-5.1-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-jbossas-remote-6
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-jbossas-remote-6/1.0.0.CR3/arquillian-jbossas-remote-6-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-jbossas-remote-6/1.0.0.CR3/arquillian-jbossas-remote-6-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;4&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;Small bug fix&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Feature Request&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-476&quot;&gt;ARQ-476&lt;/a&gt; -         Support portOffset in JBoss ContainerConfiguration&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-717&quot;&gt;ARQ-717&lt;/a&gt; -         JBoss AS managed containers should support setting partition&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-744&quot;&gt;ARQ-744&lt;/a&gt; -         All Managed containers should be able to read JAVA_HOME from current JVM if not defined&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/davided80&quot;&gt;Davide D'alto&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/maschmid&quot;&gt;Marek Schmidt&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/02/23/arquillian-container-tomcat-1-0-0-CR3/</id>
    <title>Arquillian Container Tomcat 1.0.0.CR3 Released</title>
    <updated>2012-02-24T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/02/23/arquillian-container-tomcat-1-0-0-CR3/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="container-adapter" />
    <category scheme="http://arquillian.org/blog/tags" term="tomcat" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.CR3 release of the Arquillian Container Tomcat component!
Some of the highlights in this release
JavaHome configuration option now default to the Arquillian running JVM
Changed to use ISO-8859-1 to encode the authentication request against the Tomcat Containers
What is Arquillian?
Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.CR3&lt;/em&gt; release of the &lt;em&gt;Arquillian Container Tomcat&lt;/em&gt; component!&lt;/p&gt;
&lt;h3&gt;Some of the highlights in this release&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;JavaHome&lt;/strong&gt; configuration option now default to the Arquillian running JVM&lt;/p&gt;
&lt;p&gt;Changed to use ISO-8859-1 to encode the authentication request against the Tomcat Containers&lt;/p&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;Arquillian Container Tomcat&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Modules&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://arquillian.org/modules/tomcat-managed-5.5-container-adapter/&quot;&gt;Arquillian Tomcat Managed 5.5.x Container Adapter&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://arquillian.org/modules/tomcat-embedded-6-container-adapter/&quot;&gt;Arquillian Tomcat Embedded 6.x Container Adapter&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://arquillian.org/modules/tomcat-remote-6-container-adapter/&quot;&gt;Arquillian Tomcat Remote 6.x Container Adapter&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://arquillian.org/modules/tomcat-managed-6-container-adapter/&quot;&gt;Arquillian Tomcat Managed 6.x Container Adapter&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://arquillian.org/modules/tomcat-embedded-7-container-adapter/&quot;&gt;Arquillian Tomcat Embedded 7.x Container Adapter&lt;/a&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://arquillian.org/modules/tomcat-managed-7-container-adapter/&quot;&gt;Arquillian Tomcat Managed 7.x Container Adapter&lt;/a&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.0.0.CR3
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-container-tomcat/commit/e55dbd1c4a1b7586b2a9385fe0c143bac1095994.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-02-23&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Aslak Knutsen&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.0.CR7&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.container&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-tomcat-common
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-common/1.0.0.CR3/arquillian-tomcat-common-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-common/1.0.0.CR3/arquillian-tomcat-common-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-tomcat-embedded-6
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-embedded-6/1.0.0.CR3/arquillian-tomcat-embedded-6-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-embedded-6/1.0.0.CR3/arquillian-tomcat-embedded-6-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-tomcat-embedded-7
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-embedded-7/1.0.0.CR3/arquillian-tomcat-embedded-7-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-embedded-7/1.0.0.CR3/arquillian-tomcat-embedded-7-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-tomcat-managed-5.5
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-managed-5.5/1.0.0.CR3/arquillian-tomcat-managed-5.5-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-managed-5.5/1.0.0.CR3/arquillian-tomcat-managed-5.5-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-tomcat-managed-6
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-managed-6/1.0.0.CR3/arquillian-tomcat-managed-6-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-managed-6/1.0.0.CR3/arquillian-tomcat-managed-6-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-tomcat-managed-7
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-managed-7/1.0.0.CR3/arquillian-tomcat-managed-7-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-managed-7/1.0.0.CR3/arquillian-tomcat-managed-7-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    org.jboss.arquillian.container
    &amp;raquo;
    arquillian-tomcat-remote-6
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-remote-6/1.0.0.CR3/arquillian-tomcat-remote-6-1.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-remote-6/1.0.0.CR3/arquillian-tomcat-remote-6-1.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;3&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;Small bug fix&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Bug&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-630&quot;&gt;ARQ-630&lt;/a&gt; -         The default charset is used to encode the HTTP BASIC AUTH credentials string into a sequence of bytes. ISO-8859-1 should be used for Tomcat&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Feature Request&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-744&quot;&gt;ARQ-744&lt;/a&gt; -         All Managed containers should be able to read JAVA_HOME from current JVM if not defined&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/vineet.reynolds&quot;&gt;Vineet Reynolds&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/02/22/arquillian-extension-seam2-1-0-0-Alpha2/</id>
    <title>Arquillian Seam 2 Extension 1.0.0.Alpha2 Released</title>
    <updated>2012-02-23T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/02/22/arquillian-extension-seam2-1-0-0-Alpha2/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="seam2" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha2 release of the Arquillian Seam 2 Extension component!
        Some of the highlights in this release
        Automated packing is now optional and can be turned off in arquillian.xml:
        arquillian.xml
        &lt;arquillian xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&#x000A;  xmlns="http://jboss.org/schema/arquillian"&#x000A;  xsi:schemaLocation="&#x000A;      http://jboss.org/schema/arquillian&#x000A;      http://jboss.org/schema/arquillian/arquillian_1_0.xsd"&gt;&#x000A;&#x000A;  &lt;extension qualifier="seam2"&gt;&#x000A;    &lt;property name="autoPackage"&gt;false&lt;/property&gt;&#x000A;  &lt;/extension&gt;&#x000A;&#x000A;&lt;/arquillian&gt;
        Fixed POM dependencies scopes.
        What is Arquillian?
        Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha2&lt;/em&gt; release of the &lt;em&gt;Arquillian Seam 2 Extension&lt;/em&gt; component!&lt;/p&gt;
&lt;h3&gt;Some of the highlights in this release&lt;/h3&gt;
&lt;p&gt;Automated packing is now optional and can be turned off in arquillian.xml:&lt;/p&gt;
&lt;div class=&quot;filename&quot;&gt;arquillian.xml&lt;/div&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;arquillian xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&amp;#x000A;  xmlns=&quot;http://jboss.org/schema/arquillian&quot;&amp;#x000A;  xsi:schemaLocation=&quot;&amp;#x000A;      http://jboss.org/schema/arquillian&amp;#x000A;      http://jboss.org/schema/arquillian/arquillian_1_0.xsd&quot;&amp;gt;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;  &amp;lt;extension qualifier=&quot;seam2&quot;&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;autoPackage&quot;&amp;gt;false&amp;lt;/property&amp;gt;&amp;#x000A;  &amp;lt;/extension&amp;gt;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;/arquillian&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Fixed POM dependencies scopes.&lt;/p&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;
        &lt;a href=&quot;http://arquillian.org/modules/seam2-extension/&quot;&gt;Arquillian Seam 2 Extension&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.0.0.Alpha2
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-seam2/commit/bbe4da9cac384d7687fb2bb255d78facb7321ba9.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-02-22&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Aslak Knutsen&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.0.CR7&lt;/li&gt;
          &lt;li&gt;ShrinkWrap Descriptors &amp;#8211; 1.0.0-beta-5&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-seam2
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-seam2/1.0.0.Alpha2/arquillian-seam2-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-seam2/1.0.0.Alpha2/arquillian-seam2-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;3&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Bug&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-766&quot;&gt;ARQ-766&lt;/a&gt; -         Fix scopes for container profiles.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;dl&gt;
  &lt;dt&gt;Enhancement&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-758&quot;&gt;ARQ-758&lt;/a&gt; -         Make autopacking optional through arquillian.xml&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/bmajsak&quot;&gt;Bartosz Majsak&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/02/12/arquillian-extension-seam2-1-0-0-Alpha1/</id>
    <title>Arquillian Seam 2 Extension 1.0.0.Alpha1 Released</title>
    <updated>2012-02-13T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/02/12/arquillian-extension-seam2-1-0-0-Alpha1/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="seam2" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha1 release of the Arquillian Seam 2 Extension component!
        Some of the highlights in this release
        Test enrichment for @In injection points from the Seam 2 Context.
        Packaging support for adding the Seam 2 framework.
        Ability to override Seam and JBoss EL versions defined in POM (so you can easily check if you app works with different Seam versions). Default are JBoss Seam 2.2.2.Final and JBoss EL 1.0_02.CR5.
        arquillian.xml
        &lt;arquillian xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&#x000A;  xmlns="http://jboss.org/schema/arquillian"&#x000A;  xsi:schemaLocation="&#x000A;      http://jboss.org/schema/arquillian&#x000A;      http://jboss.org/schema/arquillian/arquillian_1_0.xsd"&gt;&#x000A;&#x000A;  &lt;extension qualifier="seam2"&gt;&#x000A;    &lt;property name="seamVersion"&gt;2.2.1.Final&lt;/property&gt;&#x000A;   ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha1&lt;/em&gt; release of the &lt;em&gt;Arquillian Seam 2 Extension&lt;/em&gt; component!&lt;/p&gt;
&lt;h3&gt;Some of the highlights in this release&lt;/h3&gt;
&lt;p&gt;Test enrichment for &lt;code&gt;@In&lt;/code&gt; injection points from the Seam 2 Context.&lt;/p&gt;
&lt;p&gt;Packaging support for adding the Seam 2 framework.&lt;/p&gt;
&lt;p&gt;Ability to override Seam and JBoss EL versions defined in POM (so you can easily check if you app works with different Seam versions). Default are JBoss Seam 2.2.2.Final and JBoss EL 1.0_02.CR5.&lt;/p&gt;
&lt;div class=&quot;filename&quot;&gt;arquillian.xml&lt;/div&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;arquillian xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&amp;#x000A;  xmlns=&quot;http://jboss.org/schema/arquillian&quot;&amp;#x000A;  xsi:schemaLocation=&quot;&amp;#x000A;      http://jboss.org/schema/arquillian&amp;#x000A;      http://jboss.org/schema/arquillian/arquillian_1_0.xsd&quot;&amp;gt;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;  &amp;lt;extension qualifier=&quot;seam2&quot;&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;seamVersion&quot;&amp;gt;2.2.1.Final&amp;lt;/property&amp;gt;&amp;#x000A;    &amp;lt;property name=&quot;jbossElVersion&quot;&amp;gt;1.0_02.CR6&amp;lt;/property&amp;gt;&amp;#x000A;  &amp;lt;/extension&amp;gt;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;/arquillian&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Tests were verified on JBoss AS 4.2.3.GA and 5.1.0.Final (both managed and remote).&lt;/p&gt;
&lt;p&gt;Example below shows simple Seam component and the way how to write Arquillian test using this extension.&lt;/p&gt;
&lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@Name(&quot;fluidOuncesConverter&quot;)&amp;#x000A;public class FluidOuncesConverter {&amp;#x000A;    public Double convertToMillilitres(Double ounces) {&amp;#x000A;        return ounces * 29.5735296;&amp;#x000A;    }&amp;#x000A;}&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;@RunWith(Arquillian.class)&amp;#x000A;public class ComponentInjectionTestCase {&amp;#x000A;    @Deployment&amp;#x000A;    public static Archive&amp;lt;?&amp;gt; createDeployment() {&amp;#x000A;        return ShrinkWrap.create(WebArchive.class, &quot;test.war&quot;)&amp;#x000A;                .addClass(FluidOuncesConverter.class)&amp;#x000A;                .addAsResource(EmptyAsset.INSTANCE, &quot;seam.properties&quot;)&amp;#x000A;                .setWebXML(&quot;web.xml&quot;);&amp;#x000A;    }&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @In&amp;#x000A;    FluidOuncesConverter fluidOuncesConverter;&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Test&amp;#x000A;    public void shouldInjectSeamComponent() throws Exception {&amp;#x000A;        assertThat(fluidOuncesConverter).isNotNull();&amp;#x000A;    }&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;    @Test&amp;#x000A;    public void shouldConvertFluidOuncesToMillilitres() throws Exception {&amp;#x000A;        // given&amp;#x000A;        Double ouncesToConver = Double.valueOf(8.0d);&amp;#x000A;        Double expectedMillilitres = Double.valueOf(236.5882368d);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        // when&amp;#x000A;        Double millilitres = fluidOuncesConverter.convertToMillilitres(ouncesToConver);&lt;/code&gt;&amp;#x000A;&amp;#x000A;&lt;code class=&quot;prettify&quot;&gt;        // then&amp;#x000A;        assertThat(millilitres).isEqualTo(expectedMillilitres);&amp;#x000A;    }&amp;#x000A;}&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
&lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop end-to-end tests from the convenience of your IDE and run them in any IDE, build tool or continous integration environment.&lt;/p&gt;
&lt;h3&gt;Release details&lt;/h3&gt;
&lt;table class=&quot;table table-bordered table-striped&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;td&gt;
        &lt;a href=&quot;http://arquillian.org/modules/seam2-extension/&quot;&gt;Arquillian Seam 2 Extension&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;td&gt;
        1.0.0.Alpha1
        &lt;span class=&quot;label tag&quot;&gt;
          &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-seam2/commit/4cf63cd016d93b577aff7e15c3ae4e4f8a4d5ae6.html&quot;&gt;view tag&lt;/a&gt;
        &lt;/span&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
      &lt;td&gt;2012-02-12&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
      &lt;td&gt;Aslak Knutsen&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
      &lt;td&gt;
        &lt;ul class=&quot;unstyled&quot;&gt;
          &lt;li&gt;Arquillian Core &amp;#8211; 1.0.0.CR7&lt;/li&gt;
          &lt;li&gt;ShrinkWrap Descriptors &amp;#8211; 1.0.0-beta-5&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
  Published artifacts
  &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    org.jboss.arquillian.extension
    &amp;raquo;
    arquillian-seam2
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-seam2/1.0.0.Alpha1/arquillian-seam2-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
    &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-seam2/1.0.0.Alpha1/arquillian-seam2-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  Release notes and resolved issues
  &lt;small&gt;2&lt;/small&gt;
&lt;/h3&gt;
&lt;p&gt;Initial release&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Feature Request&lt;/dt&gt;
  &lt;dd&gt;
    &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ARQ-347&quot;&gt;ARQ-347&lt;/a&gt; -         Seam 2 integration&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
  Thanks to the following list of contributors:
  &lt;a href=&quot;https://community.jboss.org/people/bmajsak&quot;&gt;Bartosz Majsak&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;
&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/01/25/arquillian-fall-tour-2011/</id>
    <title>Arquillian Fall Tour 2011</title>
    <updated>2012-01-26T00:00:00Z</updated>
    <link href="http://arquillian.org/blog/2012/01/25/arquillian-fall-tour-2011/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="event" />
    <category scheme="http://arquillian.org/blog/tags" term="wrapup" />
    <category scheme="http://arquillian.org/blog/tags" term="2012" />
    <category scheme="http://arquillian.org/blog/tags" term="nonrelease" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      It was quite a busy fall touring around presenting our ideas, having meetings and hooking up with our awesome community. It&#8217;s time to give the ones we missed a little insight into what&#8217;s been going on.
JavaZone &#8211; Olso &#8211; Sep 7-8
 The first event this fall was near and dear to me, not only was it in my home town but also my first public presentation in Oslo. Andrew and I had great fun presenting at JavaZone, and I must say, JavaZone is probably one of the most well organized conferences I&#8217;ve ever been to. Just to give a tip......
    </summary>
    <content type="html">
      &lt;p&gt;It was quite a busy fall touring around presenting our ideas, having meetings and hooking up with our awesome community. It&amp;#8217;s time to give the ones we missed a little insight into what&amp;#8217;s been going on.&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;http://jz11.java.no&quot;&gt;JavaZone&lt;/a&gt; &amp;#8211; Olso &amp;#8211; Sep 7-8&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://arquillian.org/images/blog/falltour2011/javazone.jpg&quot; style=&quot;width: 400px; height: 247px;&quot; class=&quot;pull-right&quot; alt=&quot;&quot; /&gt; The first event this fall was near and dear to me, not only was it in my home town but also my first public presentation in Oslo. &lt;a href=&quot;profile://alrubinger&quot;&gt;Andrew&lt;/a&gt; and I had great fun presenting at &lt;a href=&quot;http://jz11.java.no&quot;&gt;JavaZone&lt;/a&gt;, and I must say, JavaZone is probably one of the most well organized conferences I&amp;#8217;ve ever been to. Just to give a tip to other conference organizers out there; A single baguette is not food for a warrior. And when it&amp;#8217;s served in a 1 hour time frame to 1.500 people it tends to create queues. But not at JavaZone, where they had 7 sponsored &amp;#8216;restaurants&amp;#8217; open all day, serving everything from sushi to traditional Norwegian elk stew. That&amp;#8217;s the way to do it!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://arquillian.org/images/blog/falltour2011/pigroast.jpg&quot; style=&quot;width: 400px; height: 354px;&quot; class=&quot;pull-left&quot; alt=&quot;&quot; /&gt; JavaZone started a few years back with something they call Journey-Zone: A trip for the speakers after the conference. This year the target was the MIT Fab-Lab near Tromsø in north of Norway. We headed up there on Thursday afternoon and headed back on Sunday. Hiking in the mountains, fishing in the fjords and hacking was a refreshing combination. The MIT Lab had a laser printer. Which to be honest, took most of our attention. Anything with a flat&amp;#8217;ish surface got branded that weekend: ipads, iphones, androids, lenovos, rocks, etc. You name it, they branded it. Rumors had it they only let us play with the laser printer in hopes we wouldn&amp;#8217;t discover their hidden Hadron Collider.&lt;/p&gt;
&lt;p&gt;The presentation can be seen on Vimeo, &lt;a href=&quot;http://vimeo.com/28783382&quot;&gt;Testable Enterprise Development with Arquillian&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;JBoss Face2Face &amp;#8211; Toronto Sep 12-19&lt;/h3&gt;
&lt;p&gt;Next morning I headed of to Toronto Canada for a face2face meeting with the JBoss &amp;#8216;Seam&amp;#8217; team. &amp;#8216;Seam&amp;#8217; team being the Seam + Richfaces + Forge + Tools + Errai developers pluss qa. We spent a week on a little island outside of Toronto in a old school building.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://arquillian.org/images/blog/falltour2011/toronto.jpg&quot; style=&quot;width: 300px; height: 133px;&quot; class=&quot;pull-left&quot; alt=&quot;&quot; /&gt; The general theme being: Ignore all current technical constraints. How would we want X to work? &amp;#8230;.. then, go make it so&amp;#8230; :)&lt;/p&gt;
&lt;p&gt;Being that all colleagues that I interact with on a day to day basis are located in a different parts of the world, it&amp;#8217;s always fun to come together at conferences or team meeting to meet them face 2 face. Some even for the first time.&lt;/p&gt;
&lt;p&gt;On Thursday during the Toronto week we had arranged a JBoss BOF at the &lt;a href=&quot;https://sites.google.com/site/torontojava&quot;&gt;Toronto JUG&lt;/a&gt;. Nice group of people showed up!&lt;/p&gt;
&lt;p&gt;During the Toronto week we released: &lt;a href=&quot;http://arquillian.org/2011/09/14/arquillian-core-1-0-0-CR5&quot;&gt;Arquillian Core 1.0.0.CR5&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;http://www.oracle.com/javaone/index.html&quot;&gt;JavaOne&lt;/a&gt; &amp;#8211; San Francisco &amp;#8211; Oct 1-10&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://arquillian.org/images/blog/falltour2011/nobhillview.jpg&quot; style=&quot;width: 200px; height: 374px;&quot; class=&quot;pull-right&quot; alt=&quot;&quot; /&gt; After many weeks of hectic preparation the time was upon us, &lt;a href=&quot;http://www.oracle.com/javaone/index.html&quot;&gt;JavaOne&lt;/a&gt;. About 11 of us rented two huge apartments to camp for the week. Having a apartment with your colleagues compared to having individual hotels rooms, made this a completely different experience. Much more fun! Making food in our own kitchen, hacking all night&amp;#8230;&lt;/p&gt;
&lt;p&gt;We had a brand new talk in our deck, The Extendable Enterprise Test Framework &amp;#8211; The Arquillian SPI talk. It still needed some tweaking before presenting, so hell broke loose just before hell really broke loose. &lt;a href=&quot;profile://dan.j.allen&quot;&gt;Dan&lt;/a&gt; and I had about 6 hours of sleep the weekend before the conference started and it didn&amp;#8217;t really get much better during the conference. Tough week.&lt;/p&gt;
&lt;p&gt;But, on Sunday 2. October, my birthday, JavaOne kicked of with the Duke Choice Awards. We made all aliens around the universe proud when Arquillian won the Duke Choice Awards for &amp;#8220;Most Innovative Integration Testing Software&amp;#8221; of 2011.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://arquillian.org/images/blog/falltour2011/dukeschoiceaward.jpg&quot; style=&quot;width: 300px; height: 200px;&quot; class=&quot;pull-left&quot; alt=&quot;&quot; /&gt; We had our new &amp;#8220;The Extendable Exterprise TestFramwork&amp;#8221; session on Monday and the main Arquillian event &amp;#8220;Real Java Enterprise Testing&amp;#8221; on Tuesday. &lt;a href=&quot;profile://alrubinger&quot;&gt;Andrew&lt;/a&gt; joined in on the Tuesday session which was great fun. Probably the most exiting talk we&amp;#8217;ve had so far. Good engaged audience. When we were about to leave the room after the talk, the security/door lady came over to thank us for a good session. She was so exited. In her own words (as I remember them: &amp;#8220;There has been a lot of good talks in this room, but this one was the best I&amp;#8217;ve ever seen! 3 young handsome energetic guys on stage, had the audience in your hands from the first second. I was out here trying to find more room in the back for more people.&amp;#8221;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://arquillian.org/images/blog/falltour2011/rockstaraward.jpg&quot; style=&quot;width: 300px; height: 200px;&quot; class=&quot;pull-left&quot; alt=&quot;&quot; /&gt; The audience spoke up and based on their feedback we got named &lt;a href=&quot;http://www.oracle.com/javaone/quick-links/rock-star/2011-rock-stars-1453436.html&quot;&gt;JavaOne 2011 Rock Stars&lt;/a&gt;. Thank you!&lt;/p&gt;
&lt;p&gt;(Last year Dan and Andrew&amp;#8217;s became &lt;a href=&quot;http://www.oracle.com/javaone/quick-links/rock-star/2010-rock-stars-425094.html&quot;&gt;JavaOne 2010 Rock Stars&lt;/a&gt; for their Arquillian presentation, making it two years in a row! We&amp;#8217;re aiming for a hat trick.)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://arquillian.org/images/blog/falltour2011/shotglasses.jpg&quot; style=&quot;width:300px; height: 208px;&quot; class=&quot;pull-right&quot; alt=&quot;&quot; /&gt; Wednesday was the JBoss party, where Arquillian again was center stage. After sliding down to the bar at Slide you were met by a ocean of Rocking Ike&amp;#8217;s!&lt;/p&gt;
&lt;p&gt;One of the talks from the JBoss Booth mini theater can be found at Vimeo, &lt;a href=&quot;http://vimeo.com/30749383&quot;&gt;High Octane Development&lt;/a&gt;. The rest should appear on parleys.com soon.&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;http://gotocon.com/aarhus-2011&quot;&gt;Goto&lt;/a&gt; &amp;#8211; Århus Danmark &amp;#8211; Oct 11-12&lt;/h3&gt;
&lt;p&gt;The plan was to come more or less directly from San Fransisco to Århus Danmark for &lt;a href=&quot;http://gotocon.com/aarhus-2011&quot;&gt;Goto&lt;/a&gt;, but it became a bit more then less due to Airline mess. We came from San Fransisco and landed in Frankfurt on Monday evening. The United flight was already delayed out of San Fransisco, so we missed our connecting flight to Oslo. And the next flight was full, and so was the next one after that. We ended up having to spend the night in Frankfurt at the airport hotel. The next morning we got tickets to Oslo, but at that point there was no longer a point in going to Oslo since I needed to be in Århus that very same day. With luck I got Lufthansa to rebook my flight to Copenhagen instead.&lt;/p&gt;
&lt;p&gt;I finally ended up in Århus at about 9 pm the 11. I call the hotel to verify my booking, for then to head directly down town to meet some of the new Red Hat Danmark people. After some time, I headed out to the hotel to find that they had overbooked and had no room for me. Back and forth, a few hours later I was in bed at a different hotel, roughly 2 am. &lt;strong&gt;sigh&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To a small audience I pulled up the last energy I had and presented, High Octane Development: JBoss AS 7 with Arquillian. All in all considering I had a cold from San Fransisco, not to bad&amp;#8230; :)&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;http://www.jboss.org/events/JUDCon/2011/london&quot;&gt;JUDCon&lt;/a&gt; &amp;#8211; London &amp;#8211; Oct 30-Nov 1&lt;/h3&gt;
&lt;p&gt;The 4th &lt;a href=&quot;http://www.jboss.org/events/JUDCon/2011/london&quot;&gt;JUDCon&lt;/a&gt; was held in London, United Kingdom. We kicked of JUDCon with the Arquillian Extensions talk, being the first talk of the day, to a filled room of exited developers.&lt;/p&gt;
&lt;p&gt;As always, this was great opportunity to meet up with the community. We ran into long time ShrinkWrap and Arquillian contributor David D&amp;#8217;Alto for the first time. Always nice to see the face behind the cartoon character.&lt;/p&gt;
&lt;p&gt;I had to cut JUDCon short to head over to Moscow and invade the old iron curtain.&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;http://www.secr.ru/lang/en-en/home/secr2011&quot;&gt;CEE SECR&lt;/a&gt; &amp;#8211; Moscow &amp;#8211; Nov 1-4&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://arquillian.org/images/blog/falltour2011/ship.jpg&quot; style=&quot;width: 200px; height: 500px;&quot; class=&quot;pull-right&quot; alt=&quot;&quot; /&gt; At this point my passport was getting a bit too warn, so the airport crew in Stokholm didn&amp;#8217;t let me pass boarding without a little discussion that ended in: Let&amp;#8217;s give it a try! We can always fly him back.&lt;/p&gt;
&lt;p&gt;Well, the Russian immigration lady was not impressed with my passport at all. After studying it multiple times and discussing with colleagues back and forth, I was let through after being given the evil eye and a clear message: Change passports!&lt;/p&gt;
&lt;p&gt;Conclusion: You can get quite far with just a smile and puppy eyes. :)&lt;/p&gt;
&lt;p&gt;This being the first time in Russia, it was quite fun riding around on the Metro in the morning trying to find the conference when you can&amp;#8217;t tell the difference between a station name and a exit sign! But the Moscow Metro is really impressive, a massive deep underground art gallery. Even though I was lost, it was all in all quite a nice morning being that this was where I ended up:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://arquillian.org/images/blog/falltour2011/kremlin.jpg&quot; style=&quot;width: 300px; height: 341px;&quot; class=&quot;pull-left&quot; alt=&quot;&quot; /&gt; I personally didn&amp;#8217;t get much out of the sessions since most of them were in Russian. And as we know from previous experience, Russian is not my strong side.&lt;/p&gt;
&lt;p&gt;I have to send out a sorry to the audience at my session which had the pleasure of experiencing my worst talk to date! Due to technical issues (HDMI only projectors? first conference ever!) I had to improvise last minute and do a demo less session on a Russian language windows 7 laptop over a flaky conference network. It could have gone smoother to say the least.&lt;/p&gt;
&lt;p&gt;On the bright side, we did manage to release Arquillian Weblogic support during the conference. Thank you, &lt;a href=&quot;profile://vineet.reynolds&quot;&gt;Vineet Reynolds&lt;/a&gt;, for the contribution!&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;http://www.devoxx.com/display/DV11/Home&quot;&gt;Devoxx&lt;/a&gt; &amp;#8211; Antwerpen &amp;#8211; Nov 15-18&lt;/h3&gt;
&lt;p&gt;Then off to the last stop of the this years tour, Devoxx! &lt;a href=&quot;http://www.devoxx.com/display/DV11/Home&quot;&gt;Devoxx&lt;/a&gt; being one of the largest European Java conference, with massive cinema session rooms and thousands of people, we were up for a fun week.&lt;/p&gt;
&lt;p&gt;During a Hackfest we had a long chat with John Ferguson Smart, the creator of Thucydides. &lt;a href=&quot;http://thucydides.wakaleo.com&quot;&gt;Thucydides&lt;/a&gt; is a reporting tool for ATDD based on Selenium. The outcome boils down to: He wants to focus on reporting and not so much runtime, while we focus on runtime and leave reporting to others. A match made in heaven. More to come on this later.&lt;/p&gt;
&lt;p&gt;We had the pleasure of meeting &lt;a href=&quot;profile://bmajsak&quot;&gt;Bartosz Majsak&lt;/a&gt;, another long Arquillian/ShrinkWrap support, for the first time. The combination of sleep deprivation and Belgium beer seemed to do wonders with our creativity. The later in the week, the odder the idea. It&amp;#8217;s going to be fun implementing some of this in the upcoming months.&lt;/p&gt;
&lt;p&gt;During the week we found the time to do the first release of: Arquillian Extension Persistence 1.0.0.Alpha1. Thank you, &lt;a href=&quot;profile://bmajsak&quot;&gt;Bartosz Majsak&lt;/a&gt;, for the contribution!&lt;/p&gt;
&lt;p&gt;You can see the recorded version of the &lt;a href=&quot;http://www.parleys.com/#st=5&amp;amp;id=2809&amp;amp;sl=0&quot;&gt;Arquillian Extensions talk&lt;/a&gt; on parleys.com.&lt;/p&gt;
&lt;p&gt;&amp;#8217;til next time&amp;#8230;&lt;/p&gt;
    </content>
  </entry>
</feed>
